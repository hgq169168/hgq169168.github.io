<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>好好学习，天天向上</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://hgq169168.github.io/"/>
  <updated>2020-09-14T12:42:29.645Z</updated>
  <id>https://hgq169168.github.io/</id>
  
  <author>
    <name>Mr hong</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>今日小结27</title>
    <link href="https://hgq169168.github.io/2020/09/14/%E4%BB%8A%E6%97%A5%E5%B0%8F%E7%BB%9327/"/>
    <id>https://hgq169168.github.io/2020/09/14/%E4%BB%8A%E6%97%A5%E5%B0%8F%E7%BB%9327/</id>
    <published>2020-09-14T06:33:49.000Z</published>
    <updated>2020-09-14T12:42:29.645Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><h2 id="今天依旧是vue基础呐！！！！"><a href="#今天依旧是vue基础呐！！！！" class="headerlink" title="今天依旧是vue基础呐！！！！"></a>今天依旧是vue基础呐！！！！</h2><h3 id="组件注册："><a href="#组件注册：" class="headerlink" title="组件注册："></a>组件注册：</h3><h4 id="全局组件注册语法："><a href="#全局组件注册语法：" class="headerlink" title="全局组件注册语法："></a>全局组件注册语法：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">Vue.component(&#39;组件名称&#39;, &#123;</span><br><span class="line">           data: 组件数据, &#x2F;&#x2F;data是函数</span><br><span class="line">           template:组件模板内容,</span><br><span class="line">       &#125;)</span><br><span class="line">       &#x2F;&#x2F;data一般格式:</span><br><span class="line">       &#x2F;*function()&#123;</span><br><span class="line">       return &#123;</span><br><span class="line">       count: 0;</span><br><span class="line">       &#125;</span><br><span class="line">       &#125;*&#x2F;</span><br></pre></td></tr></table></figure><h4 id="使用组件："><a href="#使用组件：" class="headerlink" title="使用组件："></a>使用组件：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;组件名称&gt;&lt;&#x2F;组件名称&gt;</span><br></pre></td></tr></table></figure><p>例子：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang&#x3D;&quot;en&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset&#x3D;&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;meta name&#x3D;&quot;viewport&quot; content&#x3D;&quot;width&#x3D;device-width, initial-scale&#x3D;1.0&quot;&gt;</span><br><span class="line">    &lt;title&gt;01-组件注册&lt;&#x2F;title&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;div id&#x3D;&quot;app&quot;&gt;</span><br><span class="line">        &lt;button-counter&gt;&lt;&#x2F;button-counter&gt;</span><br><span class="line">        &lt;button-counter&gt;&lt;&#x2F;button-counter&gt;</span><br><span class="line">        &lt;button-counter&gt;&lt;&#x2F;button-counter&gt;</span><br><span class="line">        &lt;button-counter&gt;&lt;&#x2F;button-counter&gt;</span><br><span class="line">    &lt;&#x2F;div&gt;</span><br><span class="line">    &lt;script src&#x3D;&quot;js&#x2F;vue.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        &#x2F;&#x2F; 组件注册</span><br><span class="line"></span><br><span class="line">        Vue.component(&#39;button-counter&#39;, &#123;</span><br><span class="line">            data: function () &#123;</span><br><span class="line">                return &#123;</span><br><span class="line">                    count: 0</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            template: &quot;&lt;button @click&#x3D;&#39;handle&#39;&gt;点击了&#123;&#123;count&#125;&#125;次&lt;&#x2F;button&gt;&quot;,</span><br><span class="line">            methods: &#123;</span><br><span class="line">                handle: function () &#123;</span><br><span class="line">                    this.count +&#x3D; 2;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">        var app &#x3D; new Vue(&#123;</span><br><span class="line">            el: &quot;#app&quot;</span><br><span class="line">        &#125;)</span><br><span class="line">    &lt;&#x2F;script&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure><p>注意：</p><p>（1）data必须是一个函数</p><p>（2）组件模板必须是单个跟元素（用引号’’括起来）</p><p>（3）组件模板可以是模板字符串（用``括起来）</p><h4 id="组件命名方式"><a href="#组件命名方式" class="headerlink" title="组件命名方式"></a>组件命名方式</h4><p>1.短横线方式：’my-component’</p><p>2.驼峰方式：‘MyComponent’</p><p>注意点：</p><p>（1）如果使用驼峰命名组件，那么在使用组件时，只能在字符串模板（其它组件的）中用驼峰的方式使用组件，<em>但是在普通的标签模板中，必须使用短横线的方式使用组件</em></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang&#x3D;&quot;en&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset&#x3D;&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;meta name&#x3D;&quot;viewport&quot; content&#x3D;&quot;width&#x3D;device-width, initial-scale&#x3D;1.0&quot;&gt;</span><br><span class="line">    &lt;title&gt;02-组件注意事项&lt;&#x2F;title&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;div id&#x3D;&quot;app&quot;&gt;</span><br><span class="line">        &lt;button-counter&gt;&lt;&#x2F;button-counter&gt;</span><br><span class="line">        &lt;!-- 会报错 --&gt;</span><br><span class="line">        &lt;!-- &lt;HelloWorld&gt;&lt;&#x2F;HelloWorld&gt; --&gt;</span><br><span class="line">        &lt;br&gt;</span><br><span class="line">        &lt;!-- 虽然名称方式为HelloWorld，但引用时写成hell-world的短横线命名方式也可以 --&gt;</span><br><span class="line">        &lt;hello-world&gt;&lt;&#x2F;hello-world&gt;</span><br><span class="line"></span><br><span class="line">    &lt;&#x2F;div&gt;</span><br><span class="line">    &lt;script src&#x3D;&quot;js&#x2F;vue.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        &#x2F;&#x2F; 组件注册</span><br><span class="line">        &#x2F;&#x2F; 如果使用驼峰命名组件，那么在使用组件时，只能在字符串模板中用驼峰的方式使用组件，但是在普通的标签模板中，必须使用短横线的方式使用组件</span><br><span class="line">        Vue.component(&#39;HelloWorld&#39;, &#123;</span><br><span class="line">            data: function () &#123;</span><br><span class="line">                return &#123;</span><br><span class="line">                    msg: &#39;HelloWorld&#39;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            template: &#39;&lt;div&gt;&#123;&#123;msg&#125;&#125;&lt;&#x2F;div&gt;&#39;</span><br><span class="line">        &#125;);</span><br><span class="line">        Vue.component(&#39;button-counter&#39;, &#123;</span><br><span class="line">            data: function () &#123;</span><br><span class="line">                return &#123;</span><br><span class="line">                    count: 0</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            &#x2F;&#x2F;组件模板可以用模板字符串</span><br><span class="line">            &#x2F;&#x2F; 把驼峰方式HelloWorld写在字符串模板中也能使用</span><br><span class="line">            template: &#96;</span><br><span class="line">                &lt;div&gt;</span><br><span class="line">                    &lt;button @click&#x3D;&quot;handle&quot;&gt;点击了&#123;&#123;count&#125;&#125;次&lt;&#x2F;button&gt;</span><br><span class="line">                    &lt;button&gt;测试123&lt;&#x2F;button&gt;</span><br><span class="line">                    &lt;HelloWorld&gt;&lt;&#x2F;HelloWorld&gt;</span><br><span class="line">                &lt;&#x2F;div&gt;</span><br><span class="line">            &#96;,</span><br><span class="line">            methods: &#123;</span><br><span class="line">                handle: function () &#123;</span><br><span class="line">                    this.count +&#x3D; 2;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        var app &#x3D; new Vue(&#123;</span><br><span class="line">            el: &quot;#app&quot;</span><br><span class="line">        &#125;)</span><br><span class="line">    &lt;&#x2F;script&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure><h4 id="局部组件注册语法："><a href="#局部组件注册语法：" class="headerlink" title="局部组件注册语法："></a>局部组件注册语法：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">var 组件对象名称 &#x3D; &#123;&#125;</span><br><span class="line">var vm &#x3D; new Vue(&#123;</span><br><span class="line">el: &#39;#app&#39;,</span><br><span class="line">compnents: &#123;</span><br><span class="line">&#39;组件名称&#39;: 组件对象名称</span><br><span class="line">&#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>例子：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang&#x3D;&quot;en&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset&#x3D;&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;meta name&#x3D;&quot;viewport&quot; content&#x3D;&quot;width&#x3D;device-width, initial-scale&#x3D;1.0&quot;&gt;</span><br><span class="line">    &lt;title&gt;04-局部组件注册&lt;&#x2F;title&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;div id&#x3D;&quot;app&quot;&gt;</span><br><span class="line">        &lt;hello-world&gt;&lt;&#x2F;hello-world&gt;</span><br><span class="line">        &lt;hello-sili&gt;&lt;&#x2F;hello-sili&gt;</span><br><span class="line">    &lt;&#x2F;div&gt;</span><br><span class="line">    &lt;script src&#x3D;&quot;js&#x2F;vue.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        &#x2F;&#x2F;全局组件</span><br><span class="line">        Vue.component(&#39;hello-sili&#39;, &#123;</span><br><span class="line">            data: function () &#123;</span><br><span class="line">                return &#123;</span><br><span class="line">                    msg1: 666</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            &#x2F;&#x2F; 此处引入局部组件会导致报错</span><br><span class="line">            template: &#39;&lt;div&gt;&#123;&#123;msg1&#125;&#125;&lt;hello-world&gt;&lt;&#x2F;hello-world&gt;&lt;&#x2F;div&gt;&#39;</span><br><span class="line"></span><br><span class="line">        &#125;)</span><br><span class="line">        &#x2F;&#x2F; 局部组件名称HelloWorld</span><br><span class="line">        var HelloWorlds &#x3D; &#123;</span><br><span class="line">            data: function () &#123;</span><br><span class="line">                return &#123;</span><br><span class="line">                    msg: &#39;HelloWorld&#39;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            template: &#39;&lt;div&gt;&#123;&#123;msg&#125;&#125;&lt;&#x2F;div&gt;&#39;</span><br><span class="line">        &#125;;</span><br><span class="line">        var app &#x3D; new Vue(&#123;</span><br><span class="line">            el: &quot;#app&quot;,</span><br><span class="line">            components: &#123;</span><br><span class="line">                &#x2F;&#x2F;对应局部组件名称HelloWorld</span><br><span class="line">                &#39;hello-world&#39;: HelloWorlds</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line"></span><br><span class="line">    &lt;&#x2F;script&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure><h4 id="组件向子组件传值"><a href="#组件向子组件传值" class="headerlink" title="组件向子组件传值"></a>组件向子组件传值</h4><p>1.组件内容通过props接收传递过来的值</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;子组件</span><br><span class="line">        Vue.component(&#39;menu-item&#39;, &#123;</span><br><span class="line">            props: [&#39;titles&#39;, &#39;content&#39;],</span><br><span class="line">            data: function () &#123;</span><br><span class="line">                return &#123;</span><br><span class="line">                    msg: &#39;来自子组件的数据&#39;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            template: &#39;&lt;div&gt;&#123;&#123;msg + &quot;-- - &quot; + titles + &quot;---&quot; + content&#125;&#125;&lt;&#x2F;div&gt;&#39;</span><br><span class="line">        &#125;);</span><br></pre></td></tr></table></figure><p>2.父组件（不用是组件，使用子组件，然后赋值就行）通过属性值传递给子组件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;menu-item titles&#x3D;&quot;来自父组件的值&quot;&gt;&lt;&#x2F;menu-item&gt;</span><br><span class="line">&lt;menu-item :titles&#x3D;&quot;ptitles&quot; content&#x3D;&quot;hello&quot;&gt;&lt;&#x2F;menu-item&gt;</span><br></pre></td></tr></table></figure><p>例子：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang&#x3D;&quot;en&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset&#x3D;&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;meta name&#x3D;&quot;viewport&quot; content&#x3D;&quot;width&#x3D;device-width, initial-scale&#x3D;1.0&quot;&gt;</span><br><span class="line">    &lt;title&gt;06-父组件向子组件传值-基本使用&lt;&#x2F;title&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;div id&#x3D;&quot;app&quot;&gt;</span><br><span class="line">        &lt;div&gt;&#123;&#123;pmsg&#125;&#125;&lt;&#x2F;div&gt;</span><br><span class="line">        &lt;menu-item titles&#x3D;&quot;来自父组件的值&quot;&gt;&lt;&#x2F;menu-item&gt;</span><br><span class="line">        &lt;menu-item :titles&#x3D;&quot;ptitles&quot; content&#x3D;&quot;hello&quot;&gt;&lt;&#x2F;menu-item&gt;</span><br><span class="line">    &lt;&#x2F;div&gt;</span><br><span class="line">    &lt;script src&#x3D;&quot;js&#x2F;vue.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        &#x2F;&#x2F;子组件</span><br><span class="line">        Vue.component(&#39;menu-item&#39;, &#123;</span><br><span class="line">            props: [&#39;titles&#39;, &#39;content&#39;],</span><br><span class="line">            data: function () &#123;</span><br><span class="line">                return &#123;</span><br><span class="line">                    msg: &#39;来自子组件的数据&#39;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            template: &#39;&lt;div&gt;&#123;&#123;msg + &quot;-- - &quot; + titles + &quot;---&quot; + content&#125;&#125;&lt;&#x2F;div&gt;&#39;</span><br><span class="line">        &#125;);</span><br><span class="line">        var app &#x3D; new Vue(&#123;</span><br><span class="line">            el: &#39;#app&#39;,</span><br><span class="line">            data: &#123;</span><br><span class="line">                pmsg: &#39;来自父组件的数据&#39;,</span><br><span class="line">                ptitles: &#39;动态的数值&#39;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    &lt;&#x2F;script&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure><p>3.props属性命名规则：</p><p>（1）在props中使用驼峰形式，模板中要使用短横线的形式</p><p>（2）字符串形式的模板中没有这个限制</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang&#x3D;&quot;en&quot;&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">  &lt;meta charset&#x3D;&quot;UTF-8&quot;&gt;</span><br><span class="line">  &lt;title&gt;Document&lt;&#x2F;title&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">  &lt;div id&#x3D;&quot;app&quot;&gt;</span><br><span class="line">    &lt;div&gt;&#123;&#123;pmsg&#125;&#125;&lt;&#x2F;div&gt;</span><br><span class="line">    &lt;menu-item :menu-title&#x3D;&#39;ptitle&#39;&gt;&lt;&#x2F;menu-item&gt;</span><br><span class="line">  &lt;&#x2F;div&gt;</span><br><span class="line">  &lt;script type&#x3D;&quot;text&#x2F;javascript&quot; src&#x3D;&quot;js&#x2F;vue.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">  &lt;script type&#x3D;&quot;text&#x2F;javascript&quot;&gt;</span><br><span class="line">    &#x2F;*</span><br><span class="line">      父组件向子组件传值-props属性名规则</span><br><span class="line">    *&#x2F;</span><br><span class="line">    Vue.component(&#39;third-com&#39;, &#123;</span><br><span class="line">      props: [&#39;testTile&#39;],</span><br><span class="line">      template: &#39;&lt;div&gt;&#123;&#123;testTile&#125;&#125;&lt;&#x2F;div&gt;&#39;</span><br><span class="line">    &#125;);</span><br><span class="line">    Vue.component(&#39;menu-item&#39;, &#123;</span><br><span class="line">      props: [&#39;menuTitle&#39;],</span><br><span class="line">      template: &#39;&lt;div&gt;&#123;&#123;menuTitle&#125;&#125;&lt;third-com testTile&#x3D;&quot;hello&quot;&gt;&lt;&#x2F;third-com&gt;&lt;&#x2F;div&gt;&#39;</span><br><span class="line">    &#125;);</span><br><span class="line">    var vm &#x3D; new Vue(&#123;</span><br><span class="line">      el: &#39;#app&#39;,</span><br><span class="line">      data: &#123;</span><br><span class="line">        pmsg: &#39;父组件中内容&#39;,</span><br><span class="line">        ptitle: &#39;动态绑定属性&#39;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">  &lt;&#x2F;script&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure><p>4.props属性值类型</p><p>（1）字符串String</p><p>（2）数值Number</p><p>（3）布尔类型Boolean</p><p>（4）数组Array</p><p>（5）对象Object</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang&#x3D;&quot;en&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset&#x3D;&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;meta name&#x3D;&quot;viewport&quot; content&#x3D;&quot;width&#x3D;device-width, initial-scale&#x3D;1.0&quot;&gt;</span><br><span class="line">    &lt;title&gt;08-父组件向子组件传值-prps属性值类型&lt;&#x2F;title&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;div id&#x3D;&quot;app&quot;&gt;</span><br><span class="line">        &lt;!-- pnum&#x3D;&#39;12&#39;中的12是字符串  pboo&#x3D;&#39;true&#39;中的true是字符串--&gt;</span><br><span class="line">        &lt;menu-item :pstr&#x3D;&#39;pstr&#39; pnum&#x3D;&#39;12&#39; pboo&#x3D;&#39;true&#39;&gt;&lt;&#x2F;menu-item&gt;</span><br><span class="line">        &lt;!-- :pnum&#x3D;&#39;12&#39;中的12是数值 :pboo&#x3D;&#39;true&#39;是布尔类型--&gt;</span><br><span class="line">        &lt;menu-item :pstr&#x3D;&#39;pstr&#39; :pnum&#x3D;&#39;12&#39; :pboo&#x3D;&#39;true&#39; :parr&#x3D;&#39;parr&#39; :pobj&#x3D;&#39;pobj&#39;&gt;&lt;&#x2F;menu-item&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &lt;&#x2F;div&gt;</span><br><span class="line">    &lt;script src&#x3D;&quot;js&#x2F;vue.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        Vue.component(&#39;menu-item&#39;, &#123;</span><br><span class="line">            props: [&#39;pstr&#39;, &#39;pnum&#39;, &#39;pboo&#39;, &#39;parr&#39;, &#39;pobj&#39;],</span><br><span class="line">            template: &#96;</span><br><span class="line">            &lt;div&gt;</span><br><span class="line">                &lt;div&gt;&#123;&#123;pstr&#125;&#125;&lt;&#x2F;div&gt;</span><br><span class="line">                &lt;div&gt;&#123;&#123;12 + pnum&#125;&#125;&lt;&#x2F;div&gt;</span><br><span class="line">                &lt;div&gt;&#123;&#123;typeof pboo&#125;&#125;&lt;&#x2F;div&gt;</span><br><span class="line">                &lt;ul&gt;</span><br><span class="line">                    &lt;li :key&#x3D;&#39;index&#39; v-for&#x3D;&#39;(item, index) in parr&#39;&gt;&#123;&#123;item&#125;&#125;&lt;&#x2F;li&gt;</span><br><span class="line">                &lt;&#x2F;ul&gt;</span><br><span class="line">                &lt;div v-for &#x3D; &#39;item in pobj&#39;&gt;&#123;&#123;item&#125;&#125;&lt;&#x2F;div&gt;</span><br><span class="line">            &lt;&#x2F;div&gt;&#96;</span><br><span class="line">        &#125;)</span><br><span class="line">        var app &#x3D; new Vue(&#123;</span><br><span class="line">            el: &#39;#app&#39;,</span><br><span class="line">            data: &#123;</span><br><span class="line">                pmsg: &#39;父组件中内容&#39;,</span><br><span class="line">                pstr: &#39;hello&#39;,</span><br><span class="line">                parr: [&#39;apple&#39;, &#39;arange&#39;, &#39;banana&#39;],</span><br><span class="line">                pobj: &#123;</span><br><span class="line">                    name: &#39;武昌&#39;,</span><br><span class="line">                    age: 68,</span><br><span class="line">                    sex: &#39;女&#39;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    &lt;&#x2F;script&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure><h4 id="子组件向父组件传值"><a href="#子组件向父组件传值" class="headerlink" title="子组件向父组件传值"></a>子组件向父组件传值</h4><p>1.子组件通过自定义事件向父组件传递信息</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;button @click &#x3D; &#39;$emit(&quot;enlarge-text&quot;)&#39;&gt;扩大字体&lt;&#x2F;button&gt;</span><br></pre></td></tr></table></figure><p>2.父组件监听子组件的事件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;menu-item @enlarge-text &#x3D; &#39;fontSize&#39; +&#x3D; 0.1&#39;&gt;&lt;&#x2F;menu-item&gt;</span><br></pre></td></tr></table></figure><p>例子</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang&#x3D;&quot;en&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset&#x3D;&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;!-- 父组件监听子组件的事件 --&gt;</span><br><span class="line">    &lt;meta name&#x3D;&quot;viewport&quot; content&#x3D;&quot;width&#x3D;device-width, initial-scale&#x3D;1.0&quot;&gt;</span><br><span class="line">    &lt;title&gt;09-子组件向父组件传值&lt;&#x2F;title&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;div id&#x3D;&quot;app&quot;&gt;</span><br><span class="line">        &lt;!-- &lt;div style&#x3D;&quot;font-size: 100px;&quot;&gt;ni&lt;&#x2F;div&gt; --&gt;</span><br><span class="line">        &lt;div :style&#x3D;&#39;&#123;fontSize:fontSize +  &quot;px&quot;&#125;&#39;&gt;&#123;&#123;msg&#125;&#125;&lt;&#x2F;div&gt;</span><br><span class="line">        &lt;menu-com :parr&#x3D;&#39;parr&#39; @enlarge-text&#x3D;&#39;handle&#39;&gt;&lt;&#x2F;menu-com&gt;</span><br><span class="line">    &lt;&#x2F;div&gt;</span><br><span class="line">    &lt;script src&#x3D;&quot;js&#x2F;vue.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        Vue.component(&#39;menu-com&#39;, &#123;</span><br><span class="line">            props: [&#39;parr&#39;],</span><br><span class="line">            template: &#96;</span><br><span class="line">                &lt;div&gt;</span><br><span class="line">                    &lt;ul&gt;</span><br><span class="line">                        &lt;li v-for &#x3D; &#39;item in parr&#39;&gt;&#123;&#123;item&#125;&#125;&lt;&#x2F;li&gt;</span><br><span class="line">                    &lt;&#x2F;ul&gt;</span><br><span class="line">                    &lt;button @click&#x3D;&#39;parr.push(&quot;lemon&quot;)&#39;&gt;点击&lt;&#x2F;button&gt;</span><br><span class="line">                    &lt;button @click&#x3D;&#39;$emit(&quot;enlarge-text&quot;)&#39;&gt;变大字体&lt;&#x2F;button&gt;</span><br><span class="line">                &lt;&#x2F;div&gt;&#96;</span><br><span class="line">        &#125;);</span><br><span class="line">        var app &#x3D; new Vue(&#123;</span><br><span class="line">            el: &quot;#app&quot;,</span><br><span class="line">            data: &#123;</span><br><span class="line">                parr: [&#39;apple&#39;, &#39;banana&#39;, &#39;orange&#39;],</span><br><span class="line">                msg: &#39;水果套餐：&#39;,</span><br><span class="line">                fontSize: 20</span><br><span class="line">            &#125;,</span><br><span class="line">            methods: &#123;</span><br><span class="line">                handle: function () &#123;</span><br><span class="line">                    this.fontSize +&#x3D; 5</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    &lt;&#x2F;script&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure><p>3.子组件通过自定义事件向父组件传递信息(带参数)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;button @click &#x3D; &#39;$emit(&quot;enlarge-text&quot;, 5)&#39;&gt;扩大字体&lt;&#x2F;button&gt;</span><br></pre></td></tr></table></figure><p>4.父组件监听子组件的事件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;menu-item @enlarge-text &#x3D; &#39;handle($event)&#39;&gt;&lt;&#x2F;menu-item&gt;</span><br></pre></td></tr></table></figure><p>例子：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang&#x3D;&quot;en&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset&#x3D;&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;meta name&#x3D;&quot;viewport&quot; content&#x3D;&quot;width&#x3D;device-width, initial-scale&#x3D;1.0&quot;&gt;</span><br><span class="line">    &lt;title&gt;10-子组件向父组件传值-带参数&lt;&#x2F;title&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;div id&#x3D;&quot;app&quot;&gt;</span><br><span class="line">        &lt;div :style&#x3D;&#39;&#123;fontSize:fontSize +  &quot;px&quot;&#125;&#39;&gt;&#123;&#123;msg&#125;&#125;&lt;&#x2F;div&gt;</span><br><span class="line">        &lt;menu-com :parr&#x3D;&#39;parr&#39; @enlarge-text&#x3D;&#39;handle($event)&#39;&gt;&lt;&#x2F;menu-com&gt;</span><br><span class="line">    &lt;&#x2F;div&gt;</span><br><span class="line">    &lt;script src&#x3D;&quot;js&#x2F;vue.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        Vue.component(&#39;menu-com&#39;, &#123;</span><br><span class="line">            props: [&#39;parr&#39;],</span><br><span class="line">            template: &#96;</span><br><span class="line">                &lt;div&gt;</span><br><span class="line">                    &lt;ul&gt;</span><br><span class="line">                        &lt;li v-for &#x3D; &#39;item in parr&#39;&gt;&#123;&#123;item&#125;&#125;&lt;&#x2F;li&gt;</span><br><span class="line">                    &lt;&#x2F;ul&gt;</span><br><span class="line">                    &lt;button @click&#x3D;&#39;parr.push(&quot;lemon&quot;)&#39;&gt;点击&lt;&#x2F;button&gt;</span><br><span class="line">                    &lt;button @click&#x3D;&#39;$emit(&quot;enlarge-text&quot;, 5)&#39;&gt;变大字体5&lt;&#x2F;button&gt;</span><br><span class="line">                    &lt;button @click&#x3D;&#39;$emit(&quot;enlarge-text&quot;, 10)&#39;&gt;变大字体10&lt;&#x2F;button&gt;</span><br><span class="line">                &lt;&#x2F;div&gt;&#96;</span><br><span class="line">        &#125;);</span><br><span class="line">        var app &#x3D; new Vue(&#123;</span><br><span class="line">            el: &quot;#app&quot;,</span><br><span class="line">            data: &#123;</span><br><span class="line">                parr: [&#39;apple&#39;, &#39;banana&#39;, &#39;orange&#39;],</span><br><span class="line">                msg: &#39;水果套餐：&#39;,</span><br><span class="line">                fontSize: 20</span><br><span class="line">            &#125;,</span><br><span class="line">            methods: &#123;</span><br><span class="line">                handle: function (val) &#123;</span><br><span class="line">                    this.fontSize +&#x3D; val</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    &lt;&#x2F;script&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure><h4 id="非父子组件间传值："><a href="#非父子组件间传值：" class="headerlink" title="非父子组件间传值："></a>非父子组件间传值：</h4><p>1.单独的事件中心管理组件间的通信</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">var eventHub &#x3D; new Vue()</span><br></pre></td></tr></table></figure><p>2.监听事件与销毁事件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">eventHub.$on(&#39;add-todo&#39;, addTOdo);</span><br><span class="line">eventHub.$off(&#39;add-todo&#39;)</span><br></pre></td></tr></table></figure><p>3.触发事件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">eventHub.$emit(&#39;add-todo&#39;, id)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang&#x3D;&quot;en&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset&#x3D;&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;meta name&#x3D;&quot;viewport&quot; content&#x3D;&quot;width&#x3D;device-width, initial-scale&#x3D;1.0&quot;&gt;</span><br><span class="line">    &lt;title&gt;11-兄弟组件之间的数据交互&lt;&#x2F;title&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;div id&#x3D;&quot;app&quot;&gt;</span><br><span class="line">        &lt;div&gt;父组件&lt;&#x2F;div&gt;</span><br><span class="line">        &lt;div&gt;</span><br><span class="line">            &lt;button @click&#x3D;&#39;handle&#39;&gt;销毁&lt;&#x2F;button&gt;</span><br><span class="line">        &lt;&#x2F;div&gt;</span><br><span class="line">        &lt;text-tom&gt;&lt;&#x2F;text-tom&gt;</span><br><span class="line">        &lt;text-jerry&gt;&lt;&#x2F;text-jerry&gt;</span><br><span class="line">    &lt;&#x2F;div&gt;</span><br><span class="line">    &lt;script src&#x3D;&quot;js&#x2F;vue.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        &#x2F;&#x2F; 提供事件中心</span><br><span class="line">        var hub &#x3D; new Vue();</span><br><span class="line">        &#x2F;&#x2F; 兄弟组件之间数据传递</span><br><span class="line">        Vue.component(&#39;text-tom&#39;, &#123;</span><br><span class="line">            data: function () &#123;</span><br><span class="line">                return &#123;</span><br><span class="line">                    num: 0</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            template: &#96;</span><br><span class="line">                &lt;div&gt;</span><br><span class="line">                    &lt;div&gt;TOM:&#123;&#123;num&#125;&#125;&lt;&#x2F;div&gt;</span><br><span class="line">                    &lt;div&gt;</span><br><span class="line">                        &lt;button @click&#x3D;&#39;handle&#39;&gt;点击&lt;&#x2F;button&gt;</span><br><span class="line">                    &lt;&#x2F;div&gt;</span><br><span class="line">                &lt;&#x2F;div&gt;&#96;,</span><br><span class="line">            methods: &#123;</span><br><span class="line">                handle: function () &#123;</span><br><span class="line">                    &#x2F;&#x2F;触发兄弟组件的事件</span><br><span class="line">                    hub.$emit(&#39;jerry-event&#39;, 2)</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            mounted: function () &#123;</span><br><span class="line">                &#x2F;&#x2F; 监听事件</span><br><span class="line">                hub.$on(&#39;tom-event&#39;, (val) &#x3D;&gt; &#123;</span><br><span class="line">                    this.num +&#x3D; val;</span><br><span class="line">                &#125;);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;);</span><br><span class="line">        Vue.component(&#39;text-jerry&#39;, &#123;</span><br><span class="line">            data: function () &#123;</span><br><span class="line">                return &#123;</span><br><span class="line">                    num: 0</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            template: &#96;</span><br><span class="line">                &lt;div&gt;</span><br><span class="line">                    &lt;div&gt;JERRY:&#123;&#123;num&#125;&#125;&lt;&#x2F;div&gt;</span><br><span class="line">                    &lt;div&gt;</span><br><span class="line">                        &lt;button @click&#x3D;&#39;handle&#39;&gt;点击&lt;&#x2F;button&gt;</span><br><span class="line">                    &lt;&#x2F;div&gt;</span><br><span class="line">                &lt;&#x2F;div&gt;&#96;,</span><br><span class="line">            methods: &#123;</span><br><span class="line">                handle: function () &#123;</span><br><span class="line">                    &#x2F;&#x2F;触发兄弟组件的事件</span><br><span class="line">                    hub.$emit(&#39;tom-event&#39;, 1)</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            mounted: function () &#123;</span><br><span class="line">                &#x2F;&#x2F; 监听事件</span><br><span class="line">                hub.$on(&#39;jerry-event&#39;, (val) &#x3D;&gt; &#123;</span><br><span class="line">                    this.num +&#x3D; val;</span><br><span class="line">                &#125;)</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;);</span><br><span class="line">        var app &#x3D; new Vue(&#123;</span><br><span class="line">            el: &quot;#app&quot;,</span><br><span class="line">            data: &#123;</span><br><span class="line"></span><br><span class="line">            &#125;,</span><br><span class="line">            methods: &#123;</span><br><span class="line">                handle: function () &#123;</span><br><span class="line">                    hub.$off(&#39;tom-event&#39;);</span><br><span class="line">                    hub.$off(&#39;jerry-event&#39;)</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    &lt;&#x2F;script&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure><h3 id="你好-哈哈哈哈"><a href="#你好-哈哈哈哈" class="headerlink" title="你好 哈哈哈哈"></a>你好 哈哈哈哈</h3>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\js\APlayer.min.js&quot; class=&quot;aplayer-se
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>今日小结26</title>
    <link href="https://hgq169168.github.io/2020/09/10/%E4%BB%8A%E6%97%A5%E5%B0%8F%E7%BB%9326/"/>
    <id>https://hgq169168.github.io/2020/09/10/%E4%BB%8A%E6%97%A5%E5%B0%8F%E7%BB%9326/</id>
    <published>2020-09-10T12:45:30.000Z</published>
    <updated>2020-09-14T07:07:24.102Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><h2 id="今日依旧是vue基础学习"><a href="#今日依旧是vue基础学习" class="headerlink" title="今日依旧是vue基础学习"></a>今日依旧是vue基础学习</h2><h3 id="表单属性之表单修饰符"><a href="#表单属性之表单修饰符" class="headerlink" title="表单属性之表单修饰符"></a>表单属性之表单修饰符</h3><p>1.number：转化为数值</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;input type&#x3D;&quot;text&quot; v-model.number&#x3D;&quot;age&quot;&gt;&lt;br&gt;</span><br></pre></td></tr></table></figure><p>2.trim：去掉开始和结尾的空格</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;input type&#x3D;&quot;text&quot; v-model.trim&#x3D;&quot;uname&quot;&gt;&lt;br&gt;</span><br></pre></td></tr></table></figure><p>3.lazy：将input事件切换为change事件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- .lazy将input事件（有变化就触发）切换为change事件（失去焦点才触发） --&gt;</span><br><span class="line">&lt;input type&#x3D;&quot;text&quot; v-model.lazy&#x3D;&quot;msg&quot;&gt;</span><br></pre></td></tr></table></figure><h3 id="自定义指令"><a href="#自定义指令" class="headerlink" title="自定义指令"></a>自定义指令</h3><p>1.语法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Vue.directive(&#39;focus&#39;,&#123;</span><br><span class="line">inserted:function(el)&#123;</span><br><span class="line">el.focus();</span><br><span class="line">&#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>2用法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;input type&#x3D;&#39;text&#39; v-focus&gt;   &#x2F;&#x2F;显示光标</span><br></pre></td></tr></table></figure><p>例子：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang&#x3D;&quot;en&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset&#x3D;&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;meta name&#x3D;&quot;viewport&quot; content&#x3D;&quot;width&#x3D;device-width, initial-scale&#x3D;1.0&quot;&gt;</span><br><span class="line">    &lt;title&gt;03-自定义指令&lt;&#x2F;title&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;div id&#x3D;&quot;app&quot;&gt;</span><br><span class="line">        &lt;input type&#x3D;&quot;text&quot;&gt;</span><br><span class="line">        &lt;input type&#x3D;&quot;text&quot; v-focus&gt;</span><br><span class="line">    &lt;&#x2F;div&gt;</span><br><span class="line">    &lt;script src&#x3D;&quot;js&#x2F;vue.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        &#x2F;&#x2F; 自定义指令</span><br><span class="line">        Vue.directive(&#39;focus&#39;, &#123;</span><br><span class="line">            inserted: function (el) &#123;</span><br><span class="line">                &#x2F;&#x2F; el表示指令所绑定的元素</span><br><span class="line">                el.focus();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">        var app &#x3D; new Vue(&#123;</span><br><span class="line">            el: &quot;#app&quot;,</span><br><span class="line">            data: &#123;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    &lt;&#x2F;script&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure><h3 id="带参数的自定义指令（如改变元素背景颜色）"><a href="#带参数的自定义指令（如改变元素背景颜色）" class="headerlink" title="带参数的自定义指令（如改变元素背景颜色）"></a>带参数的自定义指令（如改变元素背景颜色）</h3><p>1.语法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Vue.directive(&#39;color&#39;,&#123;</span><br><span class="line">inserted:function(el, binding)&#123;</span><br><span class="line">el.style.backgroundColor &#x3D; binding.value.color;</span><br><span class="line">&#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>2.用法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;input type &#x3D; &#39;text&#39; v-color &#x3D; &#39;&#123;color:&quot;orange&quot;&#125;&#39;&gt;</span><br></pre></td></tr></table></figure><p>例子：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang&#x3D;&quot;en&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset&#x3D;&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;meta name&#x3D;&quot;viewport&quot; content&#x3D;&quot;width&#x3D;device-width, initial-scale&#x3D;1.0&quot;&gt;</span><br><span class="line">    &lt;title&gt;04-带参数的自定义指令&lt;&#x2F;title&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;div id&#x3D;&quot;app&quot;&gt;</span><br><span class="line">        &lt;input type&#x3D;&quot;text&quot; v-color&#x3D;&quot;msg&quot;&gt;</span><br><span class="line">        &lt;input type&#x3D;&quot;text&quot; v-color2&#x3D;&quot;msg2&quot;&gt;</span><br><span class="line">    &lt;&#x2F;div&gt;</span><br><span class="line">    &lt;script src&#x3D;&quot;js&#x2F;vue.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        Vue.directive(&#39;color&#39;, &#123;</span><br><span class="line">             &#x2F;&#x2F; bingding相当于msg</span><br><span class="line">            bind: function (el, binding) &#123;</span><br><span class="line">                console.log(binding);</span><br><span class="line">                el.style.backgroundColor &#x3D; binding.value.colors</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">        Vue.directive(&#39;color2&#39;, &#123;</span><br><span class="line">            bind: function (el, bindings) &#123;</span><br><span class="line">                console.log(bindings);</span><br><span class="line">                el.style.backgroundColor &#x3D; bindings.value</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">        var app &#x3D; new Vue(&#123;</span><br><span class="line">            el: &quot;#app&quot;,</span><br><span class="line">            data: &#123;</span><br><span class="line">                msg: &#123;</span><br><span class="line">                    colors: &#39;orange&#39;</span><br><span class="line">                &#125;,</span><br><span class="line">                msg2: &#39;yellow&#39;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    &lt;&#x2F;script&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure><h3 id="局部指令"><a href="#局部指令" class="headerlink" title="局部指令"></a>局部指令</h3><p>1.语法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">dirctives:&#123;</span><br><span class="line">focus:&#123;</span><br><span class="line">&#x2F;&#x2F; el表示指令所绑定的元素</span><br><span class="line">inserted: function(el) &#123;</span><br><span class="line">el.focus()</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2.用法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;input type&#x3D;&quot;text&quot; v-focus&gt;</span><br><span class="line">&lt;input type&#x3D;&quot;text&quot; v-colors&#x3D;&#39;msg&#39;&gt;</span><br></pre></td></tr></table></figure><p>例子：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang&#x3D;&quot;en&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset&#x3D;&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;meta name&#x3D;&quot;viewport&quot; content&#x3D;&quot;width&#x3D;device-width, initial-scale&#x3D;1.0&quot;&gt;</span><br><span class="line">    &lt;title&gt;05局部指令&lt;&#x2F;title&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;div class&#x3D;&quot;&quot; id&#x3D;&quot;app&quot;&gt;</span><br><span class="line">        &lt;input type&#x3D;&quot;text&quot; v-colors&#x3D;&#39;msg&#39;&gt;</span><br><span class="line">        &lt;input type&#x3D;&quot;text&quot; v-focus&gt;</span><br><span class="line">    &lt;&#x2F;div&gt;</span><br><span class="line">    &lt;script src&#x3D;&quot;js&#x2F;vue.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        var app &#x3D; new Vue(&#123;</span><br><span class="line">            el: &quot;#app&quot;,</span><br><span class="line">            data: &#123;</span><br><span class="line">                msg: &quot;yellow&quot;</span><br><span class="line">            &#125;,</span><br><span class="line">            directives: &#123;</span><br><span class="line">                colors: &#123;</span><br><span class="line">                    &#x2F;&#x2F; bind是方法名，固定的</span><br><span class="line">                    bind: function (el, binding) &#123;</span><br><span class="line">                        el.style.backgroundColor &#x3D; binding.value</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;,</span><br><span class="line">                focus: &#123;</span><br><span class="line">                    &#x2F;&#x2F; inserted是方法名，固定的</span><br><span class="line">                    inserted: function (el) &#123;</span><br><span class="line">                        el.focus()</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    &lt;&#x2F;script&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure><h3 id="计算属性"><a href="#计算属性" class="headerlink" title="计算属性"></a>计算属性</h3><p>1.语法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">computed:&#123;</span><br><span class="line">reverseMsg: function()&#123;</span><br><span class="line">return this.msg.split(&#39;&#39;).reverse().join(&#39;&#39;)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2.用法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;div&gt;&#123;&#123;reversedMsg&#125;&#125;&lt;&#x2F;div&gt;</span><br></pre></td></tr></table></figure><p>例子：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang&#x3D;&quot;en&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset&#x3D;&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;meta name&#x3D;&quot;viewport&quot; content&#x3D;&quot;width&#x3D;device-width, initial-scale&#x3D;1.0&quot;&gt;</span><br><span class="line">    &lt;title&gt;06-计算属性&lt;&#x2F;title&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;div id&#x3D;&quot;app&quot;&gt;</span><br><span class="line">        &lt;div&gt;&#123;&#123;msg&#125;&#125;&lt;&#x2F;div&gt;</span><br><span class="line">        &lt;div&gt;&#123;&#123;msg.split(&#39;&#39;).reverse().join(&#39;&#39;)&#125;&#125;&lt;&#x2F;div&gt;</span><br><span class="line">        &lt;div&gt;&#123;&#123;reversedMsg&#125;&#125;&lt;&#x2F;div&gt;</span><br><span class="line">    &lt;&#x2F;div&gt;</span><br><span class="line">    &lt;script src&#x3D;&quot;js&#x2F;vue.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        var app &#x3D; new Vue(&#123;</span><br><span class="line">            el: &quot;#app&quot;,</span><br><span class="line">            data: &#123;</span><br><span class="line">                msg: &#39;hell&#39;</span><br><span class="line">            &#125;,</span><br><span class="line">            computed: &#123;</span><br><span class="line">                reversedMsg: function () &#123;</span><br><span class="line">                    return this.msg.split(&#39;&#39;).reverse().join(&#39;&#39;)</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    &lt;&#x2F;script&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure><h3 id="计算属性与方法的区别："><a href="#计算属性与方法的区别：" class="headerlink" title="计算属性与方法的区别："></a>计算属性与方法的区别：</h3><p>1.计算属性是基于它们的依赖进行缓存的</p><p>2.方法不存在缓存</p><p>例子：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang&#x3D;&quot;en&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset&#x3D;&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;meta name&#x3D;&quot;viewport&quot; content&#x3D;&quot;width&#x3D;device-width, initial-scale&#x3D;1.0&quot;&gt;</span><br><span class="line">    &lt;title&gt;07-计算属性与方法的区别&lt;&#x2F;title&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;div class&#x3D;&quot;&quot; id&#x3D;&quot;app&quot;&gt;</span><br><span class="line">        &lt;!-- 方法不存在缓存 --&gt;</span><br><span class="line">        &lt;!-- 渲染几次，就调用几次方法--&gt;</span><br><span class="line">        &lt;div&gt;&#123;&#123;reversedMsg()&#125;&#125;&lt;&#x2F;div&gt;</span><br><span class="line">        &lt;div&gt;&#123;&#123;reversedMsg()&#125;&#125;&lt;&#x2F;div&gt;</span><br><span class="line">        &lt;!-- 计算属性是基于它们的依赖进行缓存的 --&gt;</span><br><span class="line">         &lt;!--只计算一次，就可以一直渲染 --&gt;</span><br><span class="line">        &lt;div&gt;&#123;&#123;reversedMsg2&#125;&#125;&lt;&#x2F;div&gt;</span><br><span class="line">        &lt;div&gt;&#123;&#123;reversedMsg2&#125;&#125;&lt;&#x2F;div&gt;</span><br><span class="line">    &lt;&#x2F;div&gt;</span><br><span class="line">    &lt;script src&#x3D;&quot;js&#x2F;vue.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        var app &#x3D; new Vue(&#123;</span><br><span class="line">            el: &quot;#app&quot;,</span><br><span class="line">            data: &#123;</span><br><span class="line">                msg: &#39;nihao&#39;</span><br><span class="line">            &#125;,</span><br><span class="line">            methods: &#123;</span><br><span class="line">                reversedMsg: function () &#123;</span><br><span class="line">                    console.log(&#39;methods&#39;);</span><br><span class="line">                    return this.msg.split(&#39;&#39;).reverse().join(&#39;&#39;)</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            computed: &#123;</span><br><span class="line">                reversedMsg2: function () &#123;</span><br><span class="line">                    console.log(&#39;computed&#39;);</span><br><span class="line">                    return this.msg.split(&#39;&#39;).reverse().join(&#39;&#39;)</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    &lt;&#x2F;script&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure><h3 id="侦听器-应用与数据变化是执行异步或开销较大的操作"><a href="#侦听器-应用与数据变化是执行异步或开销较大的操作" class="headerlink" title="侦听器(应用与数据变化是执行异步或开销较大的操作)"></a>侦听器(应用与数据变化是执行异步或开销较大的操作)</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">watch: &#123;</span><br><span class="line">firstName: function(val)&#123;</span><br><span class="line">this.fullName &#x3D; val + this.lastName</span><br><span class="line">&#125;,</span><br><span class="line">lastName: function(val)&#123;</span><br><span class="line">this.fullName &#x3D; this.firstName + val;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>例子：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang&#x3D;&quot;en&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset&#x3D;&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;meta name&#x3D;&quot;viewport&quot; content&#x3D;&quot;width&#x3D;device-width, initial-scale&#x3D;1.0&quot;&gt;</span><br><span class="line">    &lt;title&gt;08-监听器&lt;&#x2F;title&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;div id&#x3D;&quot;app&quot;&gt;</span><br><span class="line">        first name:</span><br><span class="line">        &lt;input type&#x3D;&quot;text&quot; v-model&#x3D;&#39;firstName&#39;&gt;&lt;br&gt;</span><br><span class="line">        last name:</span><br><span class="line">        &lt;input type&#x3D;&quot;text&quot; v-model&#x3D;&#39;lastName&#39;&gt;&lt;br&gt;</span><br><span class="line">        监听器：</span><br><span class="line">        &lt;div&gt;&#123;&#123;allName&#125;&#125;&lt;&#x2F;div&gt;</span><br><span class="line">        计算属性：</span><br><span class="line">        &lt;div&gt;&#123;&#123;fullName&#125;&#125;&lt;&#x2F;div&gt;</span><br><span class="line">    &lt;&#x2F;div&gt;</span><br><span class="line">    &lt;script src&#x3D;&quot;js&#x2F;vue.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        var app &#x3D; new Vue(&#123;</span><br><span class="line">            el: &quot;#app&quot;,</span><br><span class="line">            data: &#123;</span><br><span class="line">                firstName: &quot;ergou&quot;,</span><br><span class="line">                lastName: &quot;huang&quot;,</span><br><span class="line">                allName: &quot;ergou huang &quot;</span><br><span class="line"></span><br><span class="line">            &#125;,</span><br><span class="line">            watch: &#123;</span><br><span class="line">                firstName: function (val) &#123;</span><br><span class="line">                    this.allName &#x3D; val + &#39; &#39; + this.lastName</span><br><span class="line">                &#125;,</span><br><span class="line">                lastName: function (val) &#123;</span><br><span class="line">                    this.allName &#x3D; this.firstName + &#39; &#39; + val;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            computed: &#123;</span><br><span class="line">                fullName: function () &#123;</span><br><span class="line">                    return this.firstName + &#39; &#39; + this.lastName</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    &lt;&#x2F;script&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure><h3 id="过滤器（格式化数据）"><a href="#过滤器（格式化数据）" class="headerlink" title="过滤器（格式化数据）"></a>过滤器（格式化数据）</h3><p>1.自定义过滤器</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Vue.filter(&#39;过滤器名称&#39;, function(value)&#123;</span><br><span class="line">&#x2F;&#x2F;过滤器业务逻辑</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>2.使用过滤器</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;div&gt;&#123;&#123;msg|upper&#125;&#125;&lt;&#x2F;div&gt;</span><br><span class="line">&lt;div&gt;&#123;&#123;msg|upper|lower&#125;&#125;&lt;&#x2F;div&gt;</span><br><span class="line">&lt;div v-bind:id&#x3D;&#39;id|formatId&#39;&gt;&lt;&#x2F;div&gt;</span><br></pre></td></tr></table></figure><p>3.局部过滤器：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">filters:&#123;</span><br><span class="line">capitaze: function()&#123;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>例子：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang&#x3D;&quot;en&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset&#x3D;&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;meta name&#x3D;&quot;viewport&quot; content&#x3D;&quot;width&#x3D;device-width, initial-scale&#x3D;1.0&quot;&gt;</span><br><span class="line">    &lt;title&gt;10-过滤器&lt;&#x2F;title&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;div id&#x3D;&quot;app&quot;&gt;</span><br><span class="line">        &lt;input type&#x3D;&quot;text&quot; v-model&#x3D;&#39;msg&#39;&gt;</span><br><span class="line">        &lt;div&gt;&#123;&#123;msg | upper&#125;&#125;&lt;&#x2F;div&gt;</span><br><span class="line">        &lt;div&gt;&#123;&#123;msg | upper | lower&#125;&#125;&lt;&#x2F;div&gt;</span><br><span class="line">        &lt;div&gt;&#123;&#123;msg | upper1&#125;&#125;&lt;&#x2F;div&gt;</span><br><span class="line">        &lt;div :abc&#x3D;&quot;msg | upper&quot;&gt;测试数据：&lt;&#x2F;div&gt;</span><br><span class="line">    &lt;&#x2F;div&gt;</span><br><span class="line">    &lt;script src&#x3D;&quot;js&#x2F;vue.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">            &#x2F;&#x2F; val相当于msg</span><br><span class="line">        Vue.filter(&#39;upper&#39;, function (val) &#123;</span><br><span class="line">            &#x2F;&#x2F; slice(1)获取下标为1为起点的字符</span><br><span class="line">            return val.charAt(0).toUpperCase() + val.slice(1);</span><br><span class="line">        &#125;);</span><br><span class="line">        Vue.filter(&#39;lower&#39;, function (val) &#123;</span><br><span class="line">            return val.charAt(0).toLowerCase() + val.slice(1);</span><br><span class="line">        &#125;);</span><br><span class="line">        var app &#x3D; new Vue(&#123;</span><br><span class="line">            el: &quot;#app&quot;,</span><br><span class="line">            data: &#123;</span><br><span class="line">                msg: &#39;hell&#39;</span><br><span class="line">            &#125;,</span><br><span class="line">            &#x2F;&#x2F; 局部过滤器</span><br><span class="line">            filters: &#123;</span><br><span class="line">                upper1: function (val) &#123;</span><br><span class="line">                    return val.charAt(0).toUpperCase() + val.slice(1);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;)</span><br><span class="line">    &lt;&#x2F;script&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure><p>4.带参数的过滤器：</p><p>例子：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang&#x3D;&quot;en&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset&#x3D;&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;meta name&#x3D;&quot;viewport&quot; content&#x3D;&quot;width&#x3D;device-width, initial-scale&#x3D;1.0&quot;&gt;</span><br><span class="line">    &lt;title&gt;11-带参数的过滤器&lt;&#x2F;title&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;div id&#x3D;&quot;app&quot;&gt;</span><br><span class="line">        &lt;div&gt;&#123;&#123;date | format(&#39;yyyy-MM-dd hh:mm:ss&#39;)&#125;&#125;&lt;&#x2F;div&gt;</span><br><span class="line">    &lt;&#x2F;div&gt;</span><br><span class="line">    &lt;script src&#x3D;&quot;js&#x2F;vue.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        &#x2F;&#x2F; arg是参数</span><br><span class="line">        &#x2F;&#x2F; Vue.filter(&#39;format&#39;, function (value, arg) &#123;</span><br><span class="line">        &#x2F;&#x2F;     &#x2F;&#x2F; console.log(arg);</span><br><span class="line">        &#x2F;&#x2F;     if (arg &#x3D;&#x3D; &#39;yyyy-MM-dd&#39;) &#123;</span><br><span class="line">        &#x2F;&#x2F;         var ret &#x3D; &#39;&#39;;</span><br><span class="line">        &#x2F;&#x2F;         ret +&#x3D; value.getFullYear() + &#39;-&#39; + (value.getMonth() + 1) + &#39;-&#39; + value.getDate();</span><br><span class="line">        &#x2F;&#x2F;         return ret;</span><br><span class="line">        &#x2F;&#x2F;     &#125;</span><br><span class="line">        &#x2F;&#x2F;     return value</span><br><span class="line">        &#x2F;&#x2F; &#125;)</span><br><span class="line">        Vue.filter(&#39;format&#39;, function (value, arg) &#123;</span><br><span class="line">            function dateFormat(date, format) &#123;</span><br><span class="line">                if (typeof date &#x3D;&#x3D;&#x3D; &quot;string&quot;) &#123;</span><br><span class="line">                    var mts &#x3D; date.match(&#x2F;(\&#x2F;Date\((\d+)\)\&#x2F;)&#x2F;);</span><br><span class="line">                    if (mts &amp;&amp; mts.length &gt;&#x3D; 3) &#123;</span><br><span class="line">                        date &#x3D; parseInt(mts[2]);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                date &#x3D; new Date(date);</span><br><span class="line">                if (!date || date.toUTCString() &#x3D;&#x3D; &quot;Invalid Date&quot;) &#123;</span><br><span class="line">                    return &quot;&quot;;</span><br><span class="line">                &#125;</span><br><span class="line">                var map &#x3D; &#123;</span><br><span class="line">                    &quot;M&quot;: date.getMonth() + 1, &#x2F;&#x2F;月份 </span><br><span class="line">                    &quot;d&quot;: date.getDate(), &#x2F;&#x2F;日 </span><br><span class="line">                    &quot;h&quot;: date.getHours(), &#x2F;&#x2F;小时 </span><br><span class="line">                    &quot;m&quot;: date.getMinutes(), &#x2F;&#x2F;分 </span><br><span class="line">                    &quot;s&quot;: date.getSeconds(), &#x2F;&#x2F;秒 </span><br><span class="line">                    &quot;q&quot;: Math.floor((date.getMonth() + 3) &#x2F; 3), &#x2F;&#x2F;季度 </span><br><span class="line">                    &quot;S&quot;: date.getMilliseconds() &#x2F;&#x2F;毫秒 </span><br><span class="line">                &#125;;</span><br><span class="line"></span><br><span class="line">                format &#x3D; format.replace(&#x2F;([yMdhmsqS])+&#x2F;g, function (all, t) &#123;</span><br><span class="line">                    var v &#x3D; map[t];</span><br><span class="line">                    if (v !&#x3D;&#x3D; undefined) &#123;</span><br><span class="line">                        if (all.length &gt; 1) &#123;</span><br><span class="line">                            v &#x3D; &#39;0&#39; + v;</span><br><span class="line">                            v &#x3D; v.substr(v.length - 2);</span><br><span class="line">                        &#125;</span><br><span class="line">                        return v;</span><br><span class="line">                    &#125; else if (t &#x3D;&#x3D;&#x3D; &#39;y&#39;) &#123;</span><br><span class="line">                        return (date.getFullYear() + &#39;&#39;).substr(4 - all.length);</span><br><span class="line">                    &#125;</span><br><span class="line">                    return all;</span><br><span class="line">                &#125;);</span><br><span class="line">                return format;</span><br><span class="line">            &#125;</span><br><span class="line">            return dateFormat(value, arg);</span><br><span class="line">        &#125;)</span><br><span class="line">        var app &#x3D; new Vue(&#123;</span><br><span class="line">            el: &quot;#app&quot;,</span><br><span class="line">            data: &#123;</span><br><span class="line">                date: new Date()</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    &lt;&#x2F;script&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure><h3 id="生命周期"><a href="#生命周期" class="headerlink" title="生命周期"></a>生命周期</h3><p>主要阶段：</p><p>1.挂载（初始化相关属性）</p><p>（1）beforCreate</p><p>（2）created</p><p>（3）beforeMount</p><p>（4）mounted</p><p>2.更新（元素或组件的变更操作）</p><p>（1）beforeUpdate</p><p>（2）update</p><p>3.销毁（销毁相关属性）</p><p>（1）beforeDestroy</p><p>（2）destoyed</p><p>注意：</p><p>（1）$destroy()是销毁data:{}里面的数据</p><p>（2）str.slice(1)：截取下标以1为开头的字符串</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang&#x3D;&quot;en&quot;&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">  &lt;meta charset&#x3D;&quot;UTF-8&quot;&gt;</span><br><span class="line">  &lt;title&gt;Document&lt;&#x2F;title&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">  &lt;div id&#x3D;&quot;app&quot;&gt;</span><br><span class="line">    &lt;div&gt;&#123;&#123;msg&#125;&#125;&lt;&#x2F;div&gt;</span><br><span class="line">    &lt;button @click&#x3D;&#39;update&#39;&gt;更新&lt;&#x2F;button&gt;</span><br><span class="line">    &lt;button @click&#x3D;&#39;destroy&#39;&gt;销毁&lt;&#x2F;button&gt;</span><br><span class="line">  &lt;&#x2F;div&gt;</span><br><span class="line">  &lt;script type&#x3D;&quot;text&#x2F;javascript&quot; src&#x3D;&quot;js&#x2F;vue.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">  &lt;script type&#x3D;&quot;text&#x2F;javascript&quot;&gt;</span><br><span class="line">    &#x2F;*</span><br><span class="line">      Vue实例的生命周期</span><br><span class="line">      </span><br><span class="line">    *&#x2F;</span><br><span class="line">    var vm &#x3D; new Vue(&#123;</span><br><span class="line">      el: &#39;#app&#39;,</span><br><span class="line">      data: &#123;</span><br><span class="line">        msg: &#39;生命周期&#39;</span><br><span class="line">      &#125;,</span><br><span class="line">      methods: &#123;</span><br><span class="line">        update: function()&#123;</span><br><span class="line">          this.msg &#x3D; &#39;hello&#39;;</span><br><span class="line">        &#125;,</span><br><span class="line">        destroy: function()&#123;</span><br><span class="line">          this.$destroy();</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      beforeCreate: function()&#123;</span><br><span class="line">        console.log(&#39;beforeCreate&#39;);</span><br><span class="line">      &#125;,</span><br><span class="line">      created: function()&#123;</span><br><span class="line">        console.log(&#39;created&#39;);</span><br><span class="line">      &#125;,</span><br><span class="line">      beforeMount: function()&#123;</span><br><span class="line">        console.log(&#39;beforeMount&#39;);</span><br><span class="line">      &#125;,</span><br><span class="line">      mounted: function()&#123;</span><br><span class="line">        console.log(&#39;mounted&#39;);</span><br><span class="line">      &#125;,</span><br><span class="line">      beforeUpdate: function()&#123;</span><br><span class="line">        console.log(&#39;beforeUpdate&#39;);</span><br><span class="line">      &#125;,</span><br><span class="line">      updated: function()&#123;</span><br><span class="line">        console.log(&#39;updated&#39;);</span><br><span class="line">      &#125;,</span><br><span class="line">      beforeDestroy: function()&#123;</span><br><span class="line">        console.log(&#39;beforeDestroy&#39;);</span><br><span class="line">      &#125;,</span><br><span class="line">      destroyed: function()&#123;</span><br><span class="line">        console.log(&#39;destroyed&#39;);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">  &lt;&#x2F;script&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure><h3 id="vue中数组变异方法"><a href="#vue中数组变异方法" class="headerlink" title="vue中数组变异方法"></a>vue中数组变异方法</h3><p>vue中对数组的操作默认是非响应式的</p><p>1.利用push()、pop()、shift()、unshift()、splice()（删除指定为起始位置以及长度的元素）、sort()、reverse()等方法是响应式的（变异方法），会改变原始数组</p><p>2.filter()、concat()（连接）、slice()（切取）不会改变原来的数组，返回一个新的数组，是非响应式的（非变异方法）</p><p>注意：splice()删除数组中指定的原素</p><p>3.修改响应式数据：</p><p>（1）vue.set(vm.item, indexOfitem, newValue)</p><p>（2）vm.$set(vm.items, indexOfitem, newValue)</p><p>注意：</p><p>（1）参数1表示要处理的数组名称；参数2表示要处理的数组索引；参数3表示要处理的数组的值</p><p>（2）直接用索引的方式修改数据，是非响应式的，如vm.list[2] = ‘apple’</p><p>（3）通过对象名称进行修改数据，是响应式的，如vm.info.name = ‘lemo’</p><p>4.箭头函数“=&gt;”的this是指父级作用域的this</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang&#x3D;&quot;en&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line">  &lt;meta charset&#x3D;&quot;UTF-8&quot;&gt;</span><br><span class="line">  &lt;title&gt;Document&lt;&#x2F;title&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">  &lt;div id&#x3D;&quot;app&quot;&gt;</span><br><span class="line">    &lt;ul&gt;</span><br><span class="line">      &lt;li v-for&#x3D;&#39;item in list&#39;&gt;&#123;&#123;item&#125;&#125;&lt;&#x2F;li&gt;</span><br><span class="line">    &lt;&#x2F;ul&gt;</span><br><span class="line">    &lt;div&gt;</span><br><span class="line">      &lt;div&gt;&#123;&#123;info.name&#125;&#125;&lt;&#x2F;div&gt;</span><br><span class="line">      &lt;div&gt;&#123;&#123;info.age&#125;&#125;&lt;&#x2F;div&gt;</span><br><span class="line">      &lt;div&gt;&#123;&#123;info.gender&#125;&#125;&lt;&#x2F;div&gt;</span><br><span class="line">    &lt;&#x2F;div&gt;</span><br><span class="line">  &lt;&#x2F;div&gt;</span><br><span class="line">  &lt;script type&#x3D;&quot;text&#x2F;javascript&quot; src&#x3D;&quot;js&#x2F;vue.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">  &lt;script type&#x3D;&quot;text&#x2F;javascript&quot;&gt;</span><br><span class="line">    &#x2F;*</span><br><span class="line">      动态处理响应式数据</span><br><span class="line">      </span><br><span class="line">    *&#x2F;</span><br><span class="line">    var vm &#x3D; new Vue(&#123;</span><br><span class="line">      el: &#39;#app&#39;,</span><br><span class="line">      data: &#123;</span><br><span class="line">        list: [&#39;apple&#39;, &#39;orange&#39;, &#39;banana&#39;],</span><br><span class="line">        info: &#123;</span><br><span class="line">          name: &#39;lisi&#39;,</span><br><span class="line">          age: 12</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">    &#125;);</span><br><span class="line">    &#x2F;&#x2F; vm.list[1] &#x3D; &#39;lemon&#39;;</span><br><span class="line">    Vue.set(vm.list, 2, &#39;lemon&#39;);</span><br><span class="line">    vm.$set(vm.list, 1, &#39;lemons&#39;);</span><br><span class="line"></span><br><span class="line">    &#x2F;&#x2F; vm.info.gender &#x3D; &#39;male&#39;;&#x2F;&#x2F;添加之后，在控制台修改，页面没有反应</span><br><span class="line">    &#x2F;&#x2F; vm.info.age &#x3D; 11</span><br><span class="line">    vm.$set(vm.info, &#39;gender&#39;, &#39;female&#39;);&#x2F;&#x2F;添加之后，在控制台修改，页面有反应</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  &lt;&#x2F;script&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\js\APlayer.min.js&quot; class=&quot;aplayer-se
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>今日小结25</title>
    <link href="https://hgq169168.github.io/2020/09/07/%E4%BB%8A%E6%97%A5%E5%B0%8F%E7%BB%9325/"/>
    <id>https://hgq169168.github.io/2020/09/07/%E4%BB%8A%E6%97%A5%E5%B0%8F%E7%BB%9325/</id>
    <published>2020-09-07T12:35:01.000Z</published>
    <updated>2020-09-07T13:26:30.824Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><h2 id="今天再次学习vue基础了呢！！！"><a href="#今天再次学习vue基础了呢！！！" class="headerlink" title="今天再次学习vue基础了呢！！！"></a>今天再次学习vue基础了呢！！！</h2><h3 id="数据绑定指令v-text、v-html"><a href="#数据绑定指令v-text、v-html" class="headerlink" title="数据绑定指令v-text、v-html"></a>数据绑定指令v-text、v-html</h3><p>1.v-text：填充纯文本</p><p>2.v-html：填充HTML片段</p><p>注意：</p><p>（1）存在安全问题提</p><p>（2）本网站内部数据可以使用，来自第三方的数据不可以使用</p><p>3.v-pre：填充原始信息</p><p>注意：</p><p>（1）显示原始信息，跳过编译过程</p><h3 id="数据响应式-v-once"><a href="#数据响应式-v-once" class="headerlink" title="数据响应式 v-once"></a>数据响应式 v-once</h3><p>v-once：只能编译一次，显示内容后就不再具有响应功能</p><h3 id="双向数据绑定v-model"><a href="#双向数据绑定v-model" class="headerlink" title="双向数据绑定v-model"></a>双向数据绑定v-model</h3><p>v-model多用于表单</p><h3 id="事件绑定v-on"><a href="#事件绑定v-on" class="headerlink" title="事件绑定v-on"></a>事件绑定v-on</h3><p>1.v-on指令：</p><p>v-on:click=”handle”</p><p>简写：#click=“handle”</p><p>2.如果事件直接绑定函数名称，那么默认传递事件对象作为第一个参数（$event）</p><p>3.如果事件绑定函数调用（带有参数），那么事件对象必须作为最后一个参数显示传递，并且事件对象的名称必须时$event</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang&#x3D;&quot;en&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset&#x3D;&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;meta name&#x3D;&quot;viewport&quot; content&#x3D;&quot;width&#x3D;device-width, initial-scale&#x3D;1.0&quot;&gt;</span><br><span class="line">    &lt;title&gt;06-事件绑定指令v-on&lt;&#x2F;title&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;div id&#x3D;&quot;app&quot;&gt;</span><br><span class="line">        &lt;!-- 事件绑定--参数传递：</span><br><span class="line">        1.如果事件直接绑定函数名称，那么默认传递事件对象作为第一个参数（即$event)</span><br><span class="line">        2.r如果事件绑定函数调用（带有括号），那么事件对象必须作为最后一个参数显示传递，并且事件对象的名称必须是$event --&gt;</span><br><span class="line">        &lt;div&gt;&#123;&#123;msg&#125;&#125;&lt;&#x2F;div&gt;</span><br><span class="line">        &lt;button v-on:click&#x3D;&quot;msg++&quot;&gt;点击自增&lt;&#x2F;button&gt;</span><br><span class="line">        &lt;button v-on:click&#x3D;&quot;add&quot;&gt;点击自增&lt;&#x2F;button&gt;</span><br><span class="line">        &lt;button v-on:click&#x3D;&quot;add($event)&quot;&gt;点击自增&lt;&#x2F;button&gt;</span><br><span class="line">        &lt;button @click&#x3D;&quot;canshu(123, 456, $event)&quot;&gt;参数&lt;&#x2F;button&gt;</span><br><span class="line"></span><br><span class="line">    &lt;&#x2F;div&gt;</span><br><span class="line">    &lt;script src&#x3D;&quot;js&#x2F;vue.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        var app &#x3D; new Vue(&#123;</span><br><span class="line">            el: &quot;#app&quot;,</span><br><span class="line">            data: &#123;</span><br><span class="line">                msg: 0</span><br><span class="line">            &#125;,</span><br><span class="line">            methods: &#123;</span><br><span class="line">                add: function (event) &#123;</span><br><span class="line">                    this.msg++</span><br><span class="line">                    console.log(event.target);</span><br><span class="line">                &#125;,</span><br><span class="line">                canshu: function (a, b, event) &#123;</span><br><span class="line">                    console.log(a, b);</span><br><span class="line">                    console.log(event.target.innerHTML);</span><br><span class="line">                    console.log(event.target);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    &lt;&#x2F;script&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure><p>4.事件修饰符：</p><p>（1）.stop阻止冒泡 </p><p>格式：@click.stop = “handel”</p><p>（2）.prevent阻止默认行为</p><p>格式：@click.prevent = “handel”</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang&#x3D;&quot;en&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset&#x3D;&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;meta name&#x3D;&quot;viewport&quot; content&#x3D;&quot;width&#x3D;device-width, initial-scale&#x3D;1.0&quot;&gt;</span><br><span class="line">    &lt;title&gt;07-事件绑定之事件修饰符&lt;&#x2F;title&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;div id&#x3D;&quot;app&quot;&gt;</span><br><span class="line">        &lt;div v-html&#x3D;&quot;nums&quot;&gt; &lt;&#x2F;div&gt;</span><br><span class="line">        &lt;div @click&#x3D;&quot;add&quot;&gt;</span><br><span class="line">            &lt;!-- 阻止冒泡 --&gt;</span><br><span class="line">            &lt;button @click.stop&#x3D;&quot;add1&quot;&gt;自增&lt;&#x2F;button&gt;</span><br><span class="line">        &lt;&#x2F;div&gt;</span><br><span class="line">        &lt;div&gt;</span><br><span class="line">            &lt;a href&#x3D;&quot;https:&#x2F;&#x2F;www.baidu.com&quot; @click.prevent&#x3D;&quot;prevent&quot;&gt;百度&lt;&#x2F;a&gt;</span><br><span class="line">        &lt;&#x2F;div&gt;</span><br><span class="line">    &lt;&#x2F;div&gt;</span><br><span class="line">    &lt;script src&#x3D;&quot;js&#x2F;vue.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        var app &#x3D; new Vue(&#123;</span><br><span class="line">            el: &quot;#app&quot;,</span><br><span class="line">            data: &#123;</span><br><span class="line">                nums: 0</span><br><span class="line">            &#125;,</span><br><span class="line">            methods: &#123;</span><br><span class="line">                add: function () &#123;</span><br><span class="line">                    this.nums++</span><br><span class="line">                &#125;,</span><br><span class="line">                add1: function (event) &#123;</span><br><span class="line">                    &#x2F;&#x2F; 阻止冒泡（传统方法）</span><br><span class="line">                    &#x2F;&#x2F; event.stopPropagation();</span><br><span class="line">                    console.log(&quot;阻止了冒泡&quot;);</span><br><span class="line">                &#125;,</span><br><span class="line">                prevent: function (event) &#123;</span><br><span class="line">                    &#x2F;&#x2F; 阻止默认行为</span><br><span class="line">                    &#x2F;&#x2F; event.preventDefault()</span><br><span class="line">                    console.log(&quot;阻止默认行为&quot;);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    &lt;&#x2F;script&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure><p>5.按键修饰符</p><p>（1）.enter回车键</p><p>格式：</p><p>@keyup.enter = “handel”</p><p>（2）.delete删除键</p><p>格式：</p><p>@keyup.delete = “handel”</p><p>6.自定义按键修饰符</p><p>方法1：</p><p>@keyup.65 = “handle”    //（65是ascii码，对于按键a）</p><p>方法2：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">@keyup.a &#x3D; &quot;handle</span><br><span class="line">&lt;script&gt;</span><br><span class="line">Vue.config.keyCode.a &#x3D; 65</span><br><span class="line">&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><p>例子：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang&#x3D;&quot;en&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset&#x3D;&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;meta name&#x3D;&quot;viewport&quot; content&#x3D;&quot;width&#x3D;device-width, initial-scale&#x3D;1.0&quot;&gt;</span><br><span class="line">    &lt;title&gt;09-自定义按键修饰符&lt;&#x2F;title&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;div id&#x3D;&quot;app&quot;&gt;</span><br><span class="line">        &lt;div&gt;</span><br><span class="line">            姓名：</span><br><span class="line">            &lt;input type&#x3D;&quot;text&quot; @keyup.65&#x3D;&quot;showName&quot; v-model&#x3D;&quot;uname&quot;&gt;</span><br><span class="line">        &lt;&#x2F;div&gt;</span><br><span class="line">        &lt;div&gt;</span><br><span class="line">            年龄：</span><br><span class="line">            &lt;input type&#x3D;&quot;text&quot; @keyup.a&#x3D;&quot;showName&quot; v-model&#x3D;&quot;age&quot;&gt;</span><br><span class="line">        &lt;&#x2F;div&gt;</span><br><span class="line">    &lt;&#x2F;div&gt;</span><br><span class="line">    &lt;script src&#x3D;&quot;js&#x2F;vue.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        Vue.config.keyCodes.a &#x3D; 65</span><br><span class="line">        var app &#x3D; new Vue(&#123;</span><br><span class="line">            el: &quot;#app&quot;,</span><br><span class="line">            data: &#123;</span><br><span class="line">                uname: &quot;&quot;,</span><br><span class="line">                age: &quot;&quot;</span><br><span class="line"></span><br><span class="line">            &#125;,</span><br><span class="line">            methods: &#123;</span><br><span class="line"></span><br><span class="line">                showName: function (event) &#123;</span><br><span class="line">                    console.log(this.uname, event.keyCode);</span><br><span class="line">                &#125;,</span><br><span class="line">                showAge: function () &#123;</span><br><span class="line">                    console.log(this.age, event.keyCode);</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    &lt;&#x2F;script&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure><p>7.属性绑定</p><p>（1）v-bind指定：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;a v-bind:href &#x3D; &quot;url&quot;&gt;跳转&lt;&#x2F;a&gt;</span><br></pre></td></tr></table></figure><p>缩写：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;a :href &#x3D; &quot;url&quot;&gt;跳转&lt;&#x2F;a&gt;</span><br></pre></td></tr></table></figure><p>8.样式绑定</p><p>（1）class样式处理：（默认class不会被覆盖）</p><p>对象语法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;div v-bind:class &#x3D; &quot;&#123;active:isAcive&#125;&quot;&gt;&lt;&#x2F;div&gt;</span><br></pre></td></tr></table></figure><p>数组语法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;div v-bind:class&quot;[activeClass,errprClass]&quot;&gt;&lt;&#x2F;div&gt;</span><br></pre></td></tr></table></figure><p>（2）style样式处理</p><p>对象语法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;div v-bind:style &#x3D; &quot;&#123;color:activeColor, width:withds&#125;&quot;&gt;&lt;&#x2F;div&gt;</span><br></pre></td></tr></table></figure><p>数组语法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;div v-bind:style &#x3D; &quot;[baseStyle, overridingStyles]&quot;&gt;&lt;&#x2F;div&gt;</span><br></pre></td></tr></table></figure><h3 id="分支循环结构"><a href="#分支循环结构" class="headerlink" title="分支循环结构"></a>分支循环结构</h3><p>1.分支结构</p><p>v-if</p><p>v-else-if</p><p>v-else</p><p>v-show</p><p>2.v-if与v-show的区别</p><p>（1）v-if控制原始是否渲染到页面</p><p>（2）v-show控制元素是否显示（已经渲染到页面）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang&#x3D;&quot;en&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset&#x3D;&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;meta name&#x3D;&quot;viewport&quot; content&#x3D;&quot;width&#x3D;device-width, initial-scale&#x3D;1.0&quot;&gt;</span><br><span class="line">    &lt;title&gt;15分支结构&lt;&#x2F;title&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;div id&#x3D;&quot;app&quot;&gt;</span><br><span class="line">        &lt;div v-if&#x3D;&quot;score&gt;&#x3D;90&quot;&gt;优秀&lt;&#x2F;div&gt;</span><br><span class="line">        &lt;div v-else-if&#x3D;&quot;score&gt;&#x3D;80 &amp;&amp; score &lt; 90&quot;&gt;良好&lt;&#x2F;div&gt;</span><br><span class="line">        &lt;div v-else-if&#x3D;&quot;score&gt;&#x3D;60 &amp;&amp; score &lt; 80&quot;&gt;一般&lt;&#x2F;div&gt;</span><br><span class="line">        &lt;div v-else&gt;菜鸡&lt;&#x2F;div&gt;</span><br><span class="line">        &lt;div v-show&#x3D;&quot;flag&quot;&gt;哈哈哈哈&lt;&#x2F;div&gt;</span><br><span class="line">    &lt;&#x2F;div&gt;</span><br><span class="line">    &lt;script src&#x3D;&quot;js&#x2F;vue.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        var app &#x3D; new Vue(&#123;</span><br><span class="line">            el: &quot;#app&quot;,</span><br><span class="line">            data: &#123;</span><br><span class="line">                score: 99,</span><br><span class="line">                flag: true</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    &lt;&#x2F;script&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure><p>3.循环结构</p><p>（1）v-for遍历数组</p><p>（2）keyd作用：帮助Vue区分不同的元素，从而提供性能</p><p>格式：</p><p>:key = “item.id”</p><p>（3）v-for遍历对象</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;div v-for &#x3D; &quot;(value, key, index) in obj&quot;&gt;&lt;&#x2F;div&gt;</span><br></pre></td></tr></table></figure><p>例子：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang&#x3D;&quot;en&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset&#x3D;&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;meta name&#x3D;&quot;viewport&quot; content&#x3D;&quot;width&#x3D;device-width, initial-scale&#x3D;1.0&quot;&gt;</span><br><span class="line">    &lt;title&gt;16-循环结构v-for遍历数组&lt;&#x2F;title&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;div id&#x3D;&quot;app&quot;&gt;</span><br><span class="line">        &lt;ul&gt;</span><br><span class="line">            &lt;li v-for&#x3D;&#39;item in fruits&#39;&gt;&#123;&#123;item&#125;&#125;&lt;&#x2F;li&gt;</span><br><span class="line">            &lt;!-- key可以帮助Vue区分不同的元素，从而可以提高性能 --&gt;</span><br><span class="line">            &lt;li :key&#x3D;&#39;item.id&#39; v-for&#x3D;&#39;(item, index) in fruits&#39;&gt;&#123;&#123;item + &#39;---&#39; + index&#125;&#125;&lt;&#x2F;li&gt;</span><br><span class="line">            &lt;li v-for&#x3D;&#39;item in myFruits&#39;&gt;</span><br><span class="line">                &lt;span&gt;&#123;&#123;item.ename&#125;&#125;&lt;&#x2F;span&gt;</span><br><span class="line">                &lt;span&gt;&#123;&#123;item.cname&#125;&#125;&lt;&#x2F;span&gt;</span><br><span class="line">            &lt;&#x2F;li&gt;</span><br><span class="line">        &lt;&#x2F;ul&gt;</span><br><span class="line">    &lt;&#x2F;div&gt;</span><br><span class="line">    &lt;script src&#x3D;&quot;js&#x2F;vue.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        var app &#x3D; new Vue(&#123;</span><br><span class="line">            el: &quot;#app&quot;,</span><br><span class="line">            data: &#123;</span><br><span class="line">                fruits: [&#39;哈密瓜&#39;, &#39;西瓜&#39;, &#39;芒果&#39;],</span><br><span class="line">                myFruits: [</span><br><span class="line">                    &#123;</span><br><span class="line">                        id: 1,</span><br><span class="line">                        ename: &#39;xigua&#39;,</span><br><span class="line">                        cname: &#39;西瓜&#39;</span><br><span class="line">                    &#125;,</span><br><span class="line">                    &#123;</span><br><span class="line">                        id: 2,</span><br><span class="line">                        ename: &#39;hamigua&#39;,</span><br><span class="line">                        cname: &#39;哈密瓜&#39;</span><br><span class="line">                    &#125;,</span><br><span class="line">                    &#123;</span><br><span class="line">                        id: 1,</span><br><span class="line">                        ename: &#39;mangguo&#39;,</span><br><span class="line">                        cname: &#39;芒果&#39;</span><br><span class="line">                    &#125;</span><br><span class="line">                ]</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    &lt;&#x2F;script&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\js\APlayer.min.js&quot; class=&quot;aplayer-se
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>今日小结24</title>
    <link href="https://hgq169168.github.io/2020/09/02/%E4%BB%8A%E6%97%A5%E5%B0%8F%E7%BB%9324/"/>
    <id>https://hgq169168.github.io/2020/09/02/%E4%BB%8A%E6%97%A5%E5%B0%8F%E7%BB%9324/</id>
    <published>2020-09-02T12:36:45.000Z</published>
    <updated>2020-09-07T12:44:48.184Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><h2 id="今天终于接触vue框架了啦！（虽然说是基础，啊啊啊）"><a href="#今天终于接触vue框架了啦！（虽然说是基础，啊啊啊）" class="headerlink" title="今天终于接触vue框架了啦！（虽然说是基础，啊啊啊）"></a>今天终于接触vue框架了啦！（虽然说是基础，啊啊啊）</h2><h3 id="vue基础"><a href="#vue基础" class="headerlink" title="vue基础"></a>vue基础</h3><p>1.结构：</p><p>（1）导入开发版本的Vue.js</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"> &lt;!-- 开发环境版本，包含了有帮助的命令行警告 --&gt;</span><br><span class="line">&lt;script src&#x3D;&quot;https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;npm&#x2F;vue&#x2F;dist&#x2F;vue.js&quot;&gt;&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><p>（2）创建Vue实例对象，设置el属性和data属性</p><p>（3）使用简洁的模板语法把数据渲染到页面上</p><p>例子：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang&#x3D;&quot;en&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset&#x3D;&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;meta name&#x3D;&quot;viewport&quot; content&#x3D;&quot;width&#x3D;device-width, initial-scale&#x3D;1.0&quot;&gt;</span><br><span class="line">    &lt;title&gt;01-vue基础&lt;&#x2F;title&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;div id&#x3D;&quot;app&quot;&gt;</span><br><span class="line">        &#123;&#123; message &#125;&#125;</span><br><span class="line">    &lt;&#x2F;div&gt;</span><br><span class="line">    &lt;!-- 开发环境版本，包含了有帮助的命令行警告 --&gt;</span><br><span class="line">    &lt;script src&#x3D;&quot;https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;npm&#x2F;vue&#x2F;dist&#x2F;vue.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        var app &#x3D; new Vue(&#123;</span><br><span class="line">            el: &#39;#app&#39;,</span><br><span class="line">            data: &#123;</span><br><span class="line">                message: &#39;Hello Vue!&#39;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    &lt;&#x2F;script&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure><h3 id="el挂载点：用来设置vue实例挂载（管理）的元素"><a href="#el挂载点：用来设置vue实例挂载（管理）的元素" class="headerlink" title="el挂载点：用来设置vue实例挂载（管理）的元素"></a>el挂载点：用来设置vue实例挂载（管理）的元素</h3><p>1.Vue会管理el选项命中的元素机器内部的后代元素</p><p>2.可以使用其它选择器（建议使用id选择器，如el: “#app”）</p><p>3.可以私用其它双标签，但不能使用html和body标签</p><p>例子：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang&#x3D;&quot;en&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset&#x3D;&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;meta name&#x3D;&quot;viewport&quot; content&#x3D;&quot;width&#x3D;device-width, initial-scale&#x3D;1.0&quot;&gt;</span><br><span class="line">    &lt;title&gt;02-el挂载点&lt;&#x2F;title&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &#123;&#123;message&#125;&#125;</span><br><span class="line">    &lt;div id&#x3D;&quot;app&quot; class&#x3D;&quot;app1&quot;&gt;</span><br><span class="line">        &#123;&#123;message&#125;&#125;</span><br><span class="line">        &lt;p&gt;</span><br><span class="line">            &#123;&#123;message&#125;&#125;</span><br><span class="line">        &lt;&#x2F;p&gt;</span><br><span class="line">    &lt;&#x2F;div&gt;</span><br><span class="line">    &lt;script src&#x3D;&quot;https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;npm&#x2F;vue&#x2F;dist&#x2F;vue.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        var app &#x3D; new Vue(&#123;</span><br><span class="line">            &#x2F;&#x2F; el: &#39;#app&#39;,</span><br><span class="line">            &#x2F;&#x2F; el: &#39;.app1&#39;,</span><br><span class="line">            el: &#39;div&#39;,</span><br><span class="line">            data: &#123;</span><br><span class="line">                message: &#39;Hello Vuel&#39;&#x2F;&#x2F;message 可以自己命名</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    &lt;&#x2F;script&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure><h3 id="data数据对象："><a href="#data数据对象：" class="headerlink" title="data数据对象："></a>data数据对象：</h3><p>1.vue中用到的数据定义再data里面</p><p>2.渲染复杂数据类型时，遵守js的语法</p><p>例子：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang&#x3D;&quot;en&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset&#x3D;&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;meta name&#x3D;&quot;viewport&quot; content&#x3D;&quot;width&#x3D;device-width, initial-scale&#x3D;1.0&quot;&gt;</span><br><span class="line">    &lt;title&gt;03-data数据对象&lt;&#x2F;title&gt;</span><br><span class="line">    &lt;style&gt;</span><br><span class="line">        li &#123;</span><br><span class="line">            list-style: none;</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;&#x2F;style&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;div id&#x3D;&quot;app&quot;&gt;</span><br><span class="line">        &#123;&#123;message&#125;&#125;</span><br><span class="line">        &lt;p&gt;</span><br><span class="line">            &#123;&#123;school.name&#125;&#125;</span><br><span class="line">        &lt;&#x2F;p&gt;</span><br><span class="line">        &lt;p&gt;</span><br><span class="line">            &#123;&#123;school.number&#125;&#125;</span><br><span class="line">        &lt;&#x2F;p&gt;</span><br><span class="line">        &lt;ul&gt;</span><br><span class="line">            &lt;li&gt;</span><br><span class="line">                &#123;&#123;tuple1[0]&#125;&#125;</span><br><span class="line">            &lt;&#x2F;li&gt;</span><br><span class="line">            &lt;li&gt;</span><br><span class="line">                &#123;&#123; tuple1[1]&#125;&#125;</span><br><span class="line">            &lt;&#x2F;li&gt;</span><br><span class="line">        &lt;&#x2F;ul&gt;</span><br><span class="line">    &lt;&#x2F;div&gt;</span><br><span class="line">    &lt;script src&#x3D;&quot;https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;npm&#x2F;vue&#x2F;dist&#x2F;vue.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        var app &#x3D; new Vue(&#123;</span><br><span class="line">            el: &quot;#app&quot;,</span><br><span class="line">            data: &#123;</span><br><span class="line">                message: &quot;你好呀&quot;,</span><br><span class="line">                school: &#123;</span><br><span class="line">                    name: &quot;hhh&quot;,</span><br><span class="line">                    number: &#39;1234566&#39;</span><br><span class="line">                &#125;,</span><br><span class="line">                tuple1: [1, 2, 4, 6]</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;)</span><br><span class="line">    &lt;&#x2F;script&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure><h3 id="本地应用"><a href="#本地应用" class="headerlink" title="本地应用"></a>本地应用</h3><h4 id="内容本地、事件绑定：v-text、v-html、v-on"><a href="#内容本地、事件绑定：v-text、v-html、v-on" class="headerlink" title="内容本地、事件绑定：v-text、v-html、v-on"></a>内容本地、事件绑定：v-text、v-html、v-on</h4><p>1.v-text和v-html：</p><p>（1）格式：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;h2 v-html&#x3D;&quot;message&quot;&gt;&lt;&#x2F;h2&gt;</span><br><span class="line">&lt;h2 v-text&#x3D;&quot;message&quot;&gt;&lt;&#x2F;h2&gt;</span><br></pre></td></tr></table></figure><p>（1）都是修改文本内容，但v-html可以识别标签，v-text不能识别标签</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang&#x3D;&quot;en&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset&#x3D;&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;meta name&#x3D;&quot;viewport&quot; content&#x3D;&quot;width&#x3D;device-width, initial-scale&#x3D;1.0&quot;&gt;</span><br><span class="line">    &lt;title&gt;05-v-html指令&lt;&#x2F;title&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;div id&#x3D;&quot;app&quot;&gt;</span><br><span class="line">        &lt;h2 v-html&#x3D;&quot;message&quot;&gt;&lt;&#x2F;h2&gt;</span><br><span class="line">        &lt;h2 v-text&#x3D;&quot;message&quot;&gt;&lt;&#x2F;h2&gt;</span><br><span class="line">    &lt;&#x2F;div&gt;</span><br><span class="line">    &lt;script src&#x3D;&quot;https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;npm&#x2F;vue&#x2F;dist&#x2F;vue.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        var app &#x3D; new Vue(&#123;</span><br><span class="line">            el: &quot;#app&quot;,</span><br><span class="line">            data: &#123;</span><br><span class="line">                message: &quot;&lt;a href&#x3D;&#39;#&#39;&gt;帅哥&lt;&#x2F;a&gt;&quot;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    &lt;&#x2F;script&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure><p>2.v-on：为元素绑定事件</p><p>（1）格式：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;button v-on:click&#x3D;&quot;matter&quot;&gt;点击&lt;&#x2F;button&gt;</span><br></pre></td></tr></table></figure><p>（2）事件名不需要加on</p><p>（3）可以用@代替v-on:，即@click=”matter”</p><p>（4）绑定的方法定义再methods属性里面</p><p>（5）函数名可以带参数，不带参数时，可以省略小括号</p><p>例子：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang&#x3D;&quot;en&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset&#x3D;&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;meta name&#x3D;&quot;viewport&quot; content&#x3D;&quot;width&#x3D;device-width, initial-scale&#x3D;1.0&quot;&gt;</span><br><span class="line">    &lt;title&gt;10-v-bind指令&lt;&#x2F;title&gt;</span><br><span class="line">    &lt;style&gt;</span><br><span class="line">        .imgs &#123;</span><br><span class="line">            border: 1px solid pink;</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;&#x2F;style&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;div id&#x3D;&quot;app&quot;&gt;</span><br><span class="line">        &lt;img v-bind:src&#x3D;&quot;address&quot; v-bind:title&#x3D;&quot;titles&quot;&gt;&lt;br&gt;</span><br><span class="line">        &lt;!-- 可以省略v-bind --&gt;</span><br><span class="line">        &lt;!-- &lt;img :src&#x3D;&quot;address&quot; :title&#x3D;&quot;titles&quot; :class&#x3D;&quot;isshow ? &#39;imgs&#39; : &#39;&#39;&quot; id&#x3D;&quot;imgs&quot; @click&#x3D;&quot;imgClick&quot;&gt; --&gt;</span><br><span class="line">        &lt;img :src&#x3D;&quot;address&quot; :title&#x3D;&quot;titles&quot; :class&#x3D;&#123;imgs:isshow&#125; id&#x3D;&quot;imgs&quot; @click&#x3D;&quot;imgClick&quot;&gt;</span><br><span class="line">    &lt;&#x2F;div&gt;</span><br><span class="line">    &lt;script src&#x3D;&quot;https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;npm&#x2F;vue&#x2F;dist&#x2F;vue.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        var app &#x3D; new Vue(&#123;</span><br><span class="line">            el: &quot;#app&quot;,</span><br><span class="line">            data: &#123;</span><br><span class="line">                address: &quot;images&#x2F;公仔.png&quot;,</span><br><span class="line">                titles: &quot;小黄人&quot;,</span><br><span class="line">                isshow: true</span><br><span class="line">            &#125;,</span><br><span class="line">            methods: &#123;</span><br><span class="line">                imgClick: function () &#123;</span><br><span class="line">                    this.isshow &#x3D; !this.isshow</span><br><span class="line">                    &#x2F;&#x2F; console.log(this.isshow);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    &lt;&#x2F;script&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure><h4 id="显示切换：v-show、v-if、v-bind"><a href="#显示切换：v-show、v-if、v-bind" class="headerlink" title="显示切换：v-show、v-if、v-bind"></a>显示切换：v-show、v-if、v-bind</h4><p>1.v-show：根据表达式的真假，切换元素的显示和隐藏</p><p>（1）格式：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;img src&#x3D;&quot;images&#x2F;公仔.png&quot; alt&#x3D;&quot;&quot; v-show&#x3D;&quot;isshow&quot;&gt;</span><br></pre></td></tr></table></figure><p>2.v-if：根据表达式的真假，切换元素的显示和隐藏（操纵dom元素）</p><p>（1）格式：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;img src&#x3D;&quot;images&#x2F;公仔.png&quot; v-if&#x3D;&quot;isif&quot;&gt;</span><br></pre></td></tr></table></figure><p>3.v-show与v-if的区别：</p><p>（1）隐藏的时候，v-if所在元素再dom树找不到；v-show所在元素在dom树中找得到，只是display设置为none</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang&#x3D;&quot;en&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset&#x3D;&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;meta name&#x3D;&quot;viewport&quot; content&#x3D;&quot;width&#x3D;device-width, initial-scale&#x3D;1.0&quot;&gt;</span><br><span class="line">    &lt;title&gt;09-v-if指令&lt;&#x2F;title&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;div id&#x3D;&quot;app&quot;&gt;</span><br><span class="line">        &lt;button @click&#x3D;&quot;clicks&quot;&gt;按钮&lt;&#x2F;button&gt;&lt;br&gt;</span><br><span class="line">        &lt;img src&#x3D;&quot;images&#x2F;公仔.png&quot; v-if&#x3D;&quot;isif&quot;&gt;&lt;br&gt;</span><br><span class="line">        &lt;img src&#x3D;&quot;images&#x2F;公仔.png&quot; v-show&#x3D;&quot;isif&quot;&gt;</span><br><span class="line">        &lt;h2 v-if&#x3D;&quot;isif&quot;&gt;哈喽&lt;&#x2F;h2&gt;</span><br><span class="line">    &lt;&#x2F;div&gt;</span><br><span class="line">    &lt;script src&#x3D;&quot;https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;npm&#x2F;vue&#x2F;dist&#x2F;vue.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        var app &#x3D; new Vue(&#123;</span><br><span class="line">            el: &quot;#app&quot;,</span><br><span class="line">            data: &#123;</span><br><span class="line">                isif: true</span><br><span class="line">            &#125;,</span><br><span class="line">            methods: &#123;</span><br><span class="line">                clicks: function () &#123;</span><br><span class="line">                    &#x2F;&#x2F; 方法1</span><br><span class="line">                    &#x2F;&#x2F; if (this.isif &#x3D;&#x3D; false) &#123;</span><br><span class="line">                    &#x2F;&#x2F;     this.isif &#x3D; true</span><br><span class="line">                    &#x2F;&#x2F; &#125;</span><br><span class="line">                    &#x2F;&#x2F; else &#123;</span><br><span class="line">                    &#x2F;&#x2F;     this.isif &#x3D; false</span><br><span class="line">                    &#x2F;&#x2F; &#125;</span><br><span class="line">                    &#x2F;&#x2F; 方法2</span><br><span class="line">                    &#x2F;&#x2F; this.isif ? this.isif &#x3D; false : this.isif &#x3D; true</span><br><span class="line">                    &#x2F;&#x2F; 方法3</span><br><span class="line">                    this.isif &#x3D; !this.isif</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    &lt;&#x2F;script&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure><p>4.v-bind设置元素属性：</p><p>（1）格式：</p><p>v-bind:属性名=“表达式”</p><p>（2）简写方式：</p><p>:属性名=”表达式”</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;img v-bind:src&#x3D;&quot;address&quot; v-bind:title&#x3D;&quot;titles&quot;&gt;&lt;br&gt;</span><br></pre></td></tr></table></figure><h3 id="v-for和v-model"><a href="#v-for和v-model" class="headerlink" title="v-for和v-model"></a>v-for和v-model</h3><p>1.v-for用于遍历，生产列表结构：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang&#x3D;&quot;en&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset&#x3D;&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;meta name&#x3D;&quot;viewport&quot; content&#x3D;&quot;width&#x3D;device-width, initial-scale&#x3D;1.0&quot;&gt;</span><br><span class="line">    &lt;title&gt;12-v-for指令&lt;&#x2F;title&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;div id&#x3D;&quot;app&quot;&gt;</span><br><span class="line">        &lt;ul&gt;</span><br><span class="line">            &lt;li v-for&#x3D;&quot;item in arr&quot;&gt;</span><br><span class="line">                &#123;&#123;item&#125;&#125;</span><br><span class="line">            &lt;&#x2F;li&gt;</span><br><span class="line">            &lt;!-- item是参数内容，nums是下标 --&gt;</span><br><span class="line">            &lt;li v-for&#x3D;&quot;(item, nums) in arr&quot;&gt;</span><br><span class="line">                &#123;&#123;nums&#125;&#125;我爱吃&#123;&#123;item&#125;&#125;</span><br><span class="line">            &lt;&#x2F;li&gt;</span><br><span class="line">        &lt;&#x2F;ul&gt;</span><br><span class="line">        &lt;h4 v-for&#x3D;&quot;(item, nums) in arr&quot;&gt;</span><br><span class="line">            &#123;&#123;nums&#125;&#125;我爱吃&#123;&#123;item&#125;&#125;</span><br><span class="line">        &lt;&#x2F;h4&gt;</span><br><span class="line">        &lt;button @click&#x3D;&quot;attach&quot;&gt;添加菜品&lt;&#x2F;button&gt;</span><br><span class="line">        &lt;button @click&#x3D;&quot;remove&quot;&gt; 删除菜品&lt;&#x2F;button&gt;</span><br><span class="line">        &lt;h4 v-for&#x3D;&quot;item in arr1&quot; v-bind:title&#x3D;&quot;item.name&quot;&gt;</span><br><span class="line">            &#123;&#123;item.name&#125;&#125;</span><br><span class="line">        &lt;&#x2F;h4&gt;</span><br><span class="line">    &lt;&#x2F;div&gt;</span><br><span class="line">    &lt;script src&#x3D;&quot;https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;npm&#x2F;vue&#x2F;dist&#x2F;vue.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        var app &#x3D; new Vue(&#123;</span><br><span class="line">            el: &quot;#app&quot;,</span><br><span class="line">            data: &#123;</span><br><span class="line">                arr: [&quot;鸡肉&quot;, &quot;牛肉&quot;, &quot;鱼肉&quot;, &quot;羊肉&quot;],</span><br><span class="line">                arr1: [</span><br><span class="line">                    &#123; name: &quot;暴炒空心菜&quot; &#125;,</span><br><span class="line">                    &#123; name: &quot;韭黄炒鸡蛋&quot; &#125;</span><br><span class="line">                ]</span><br><span class="line">            &#125;,</span><br><span class="line">            methods: &#123;</span><br><span class="line">                remove: function () &#123;</span><br><span class="line">                    this.arr1.shift()</span><br><span class="line">                &#125;,</span><br><span class="line">                attach: function () &#123;</span><br><span class="line">                    this.arr1.push(&#123; name: &quot;鸡蛋炒韭黄&quot; &#125;)</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    &lt;&#x2F;script&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure><p>2.v-model获取或设置表单元素的值（双向数据绑定）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang&#x3D;&quot;en&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset&#x3D;&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;meta name&#x3D;&quot;viewport&quot; content&#x3D;&quot;width&#x3D;device-width, initial-scale&#x3D;1.0&quot;&gt;</span><br><span class="line">    &lt;title&gt;14-v-model指令&lt;&#x2F;title&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;div id&#x3D;&quot;app&quot;&gt;</span><br><span class="line">        &lt;input type&#x3D;&quot;text&quot; v-model&#x3D;&quot;messages&quot; @keyup.enter&#x3D;&quot;getM&quot;&gt;</span><br><span class="line">        &lt;input type&#x3D;&quot;button&quot; value&#x3D;&quot;点击修改&quot; @click&#x3D;&quot;setM&quot;&gt;</span><br><span class="line">        &lt;h4&gt;&#123;&#123;messages&#125;&#125;&lt;&#x2F;h4&gt;</span><br><span class="line">    &lt;&#x2F;div&gt;</span><br><span class="line">    &lt;script src&#x3D;&quot;https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;npm&#x2F;vue&#x2F;dist&#x2F;vue.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        var app &#x3D; new Vue(&#123;</span><br><span class="line">            el: &quot;#app&quot;,</span><br><span class="line">            data: &#123;</span><br><span class="line">                messages: &quot;嘿，小老弟&quot;</span><br><span class="line">            &#125;,</span><br><span class="line">            methods: &#123;</span><br><span class="line">                getM: function () &#123;</span><br><span class="line">                    alert(this.messages)</span><br><span class="line">                &#125;,</span><br><span class="line">                setM: function () &#123;</span><br><span class="line">                    this.messages &#x3D; &quot;干啥勒，老铁&quot;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    &lt;&#x2F;script&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\js\APlayer.min.js&quot; class=&quot;aplayer-se
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>今日小结23</title>
    <link href="https://hgq169168.github.io/2020/08/20/%E4%BB%8A%E6%97%A5%E5%B0%8F%E7%BB%9323/"/>
    <id>https://hgq169168.github.io/2020/08/20/%E4%BB%8A%E6%97%A5%E5%B0%8F%E7%BB%9323/</id>
    <published>2020-08-20T13:59:06.000Z</published>
    <updated>2020-08-21T04:03:15.049Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><p>##<center>今日依旧是Web APIs（好吧，其实今天没怎么复习）</center></p><h3 id="this指向问题"><a href="#this指向问题" class="headerlink" title="this指向问题"></a>this指向问题</h3><p>1.全局作用域、普通函数或定时器里的this指向的全局对象window</p><p>2.方法调用中谁调用this就指向谁</p><p>3.事件函数中，谁是触发对象，this就指向谁</p><p>4.构造函数中this指向构造函数的实例（给谁赋值了）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang&#x3D;&quot;en&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset&#x3D;&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;meta name&#x3D;&quot;viewport&quot; content&#x3D;&quot;width&#x3D;device-width, initial-scale&#x3D;1.0&quot;&gt;</span><br><span class="line">    &lt;meta http-equiv&#x3D;&quot;X-UA-Compatible&quot; content&#x3D;&quot;ie&#x3D;edge&quot;&gt;</span><br><span class="line">    &lt;title&gt;Document&lt;&#x2F;title&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;button&gt;点击&lt;&#x2F;button&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        &#x2F;&#x2F; this 指向问题 一般情况下this的最终指向的是那个调用它的对象</span><br><span class="line"></span><br><span class="line">        &#x2F;&#x2F; 1. 全局作用域或者普通函数中this指向全局对象window（ 注意定时器里面的this指向window）</span><br><span class="line">        console.log(this);</span><br><span class="line"></span><br><span class="line">        function fn() &#123;</span><br><span class="line">            console.log(this);</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        window.fn();</span><br><span class="line">        window.setTimeout(function () &#123;</span><br><span class="line">            console.log(this);</span><br><span class="line"></span><br><span class="line">        &#125;, 1000);</span><br><span class="line">        &#x2F;&#x2F; 2. 方法调用中谁调用this指向谁</span><br><span class="line">        var o &#x3D; &#123;</span><br><span class="line">            sayHi: function () &#123;</span><br><span class="line">                console.log(this); &#x2F;&#x2F; this指向的是 o 这个对象</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        o.sayHi();</span><br><span class="line">        var btn &#x3D; document.querySelector(&#39;button&#39;);</span><br><span class="line">        &#x2F;&#x2F; btn.onclick &#x3D; function() &#123;</span><br><span class="line">        &#x2F;&#x2F;     console.log(this); &#x2F;&#x2F; this指向的是btn这个按钮对象</span><br><span class="line"></span><br><span class="line">        &#x2F;&#x2F; &#125;</span><br><span class="line">        btn.addEventListener(&#39;click&#39;, function () &#123;</span><br><span class="line">            console.log(this); &#x2F;&#x2F; this指向的是btn这个按钮对象</span><br><span class="line"></span><br><span class="line">        &#125;)</span><br><span class="line">        btn.onclick &#x3D; function () &#123;</span><br><span class="line">            console.log(this); &#x2F;&#x2F;this指向的是btn这个按钮对象</span><br><span class="line">        &#125;</span><br><span class="line">        &#x2F;&#x2F; 3. 构造函数中this指向构造函数的实例</span><br><span class="line">        function Fun() &#123;</span><br><span class="line">            console.log(this); &#x2F;&#x2F; this 指向的是fun 实例对象</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        var fun &#x3D; new Fun();</span><br><span class="line">    &lt;&#x2F;script&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure><h3 id="JS执行机制：分同步任务和异步任务"><a href="#JS执行机制：分同步任务和异步任务" class="headerlink" title="JS执行机制：分同步任务和异步任务"></a>JS执行机制：分同步任务和异步任务</h3><p>1.同步任务：都在主线程上执行，形成一个执行栈</p><p>2.异步任务：是通过回调函数实现的，回调函数被放在任务队列中（消息队列）</p><p>异步任务的三种类型：</p><p>（1）普通事件，如click、resize等</p><p>（2）资源加载，如load、error等</p><p>（3）定时器，如setInterval、setTimeout</p><p>3.执行机制：<br>（1）先执行执行栈的同步任务</p><p>（2）异步任务（回调函数），先放到一部进程里面，通过异步进程处理来判断异步任务是否要放入任务队列，满足条件就放进任务队列中。</p><p>（3）执行栈中的所有同步任务执行完毕后，系统就会按次序读取任务队列中的异步任务，于是被读取的异步任务结束等待时间，进入执行栈，开始执行。（其中会有一个事件循环机制来反复查看任务队列的情况）</p><h3 id="location对象"><a href="#location对象" class="headerlink" title="location对象"></a>location对象</h3><p>1.URL：统一资源定位符，是互联网上标准资源的地址（唯一的）</p><p>URL语法格式：</p><p>protocol://host[:port]/path/[?query]#fragment</p><p>（1）protocol：通信协议，如http、ffp、maito等</p><p>（2）主机（域名）</p><p>（3）port：端口号，可省略，如http默认端口号为80</p><p>（4）path：路径</p><p>（5）query：参数，以键值对的形式，通过&amp;符号隔开</p><p>（6）fragment：片段，#后面内容常见域链接、锚点等</p><p>2.location对象：是window提供的一个属性，用于获取或设置URL，并且可以解析URL，该参数返回的是一个对象</p><p>3.location对象属性：<br>（1）location.href：获取或设置整个URL</p><p>（2）location.host：返回主机（域名）<br>（3）location.port：返回端口，如果未写，返回空字符串</p><p>（4）location.pathname：返回路径</p><p>（5）location.search：返回参数</p><p>（6）location.hash：返回片段</p><p>（7）location.assign()：跟href一样，可以跳转页面</p><p>（8）location.replace()：替换当前页面，因为不记录历史，所以不能后退</p><p>（9）location.reload()：重新加载页面，相当于刷新（F5键），参数写true表示强制刷新（ctrl+F5）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang&#x3D;&quot;en&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset&#x3D;&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;meta name&#x3D;&quot;viewport&quot; content&#x3D;&quot;width&#x3D;device-width, initial-scale&#x3D;1.0&quot;&gt;</span><br><span class="line">    &lt;title&gt;location常用方法&lt;&#x2F;title&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;button&gt;点击&lt;&#x2F;button&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        var btn &#x3D; document.querySelector(&#39;button&#39;);</span><br><span class="line">        btn.addEventListener(&#39;click&#39;, function () &#123;</span><br><span class="line">            &#x2F;&#x2F;assign(&#39;url&#39;)跳转页面  记录浏览历史，所以可以实现后退功能</span><br><span class="line">            &#x2F;&#x2F; location.assign(&#39;http:&#x2F;&#x2F;www.itcast.cn&#39;);</span><br><span class="line">            &#x2F;&#x2F;replace(&#39;url&#39;)替换当前页面  不记录浏览历史，所以不可以实现后退功能</span><br><span class="line">            location.replace(&#39;http:&#x2F;&#x2F;www.itcast.cn&#39;);</span><br><span class="line">            &#x2F;&#x2F;reload()重新加载(f5) 括号里面加true 表示强制加载（ctrl + f5)</span><br><span class="line">            &#x2F;&#x2F; location.reload();</span><br><span class="line">        &#125;)</span><br><span class="line">    &lt;&#x2F;script&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure><h3 id="navigator对象"><a href="#navigator对象" class="headerlink" title="navigator对象"></a>navigator对象</h3><p>1.navigator的属性</p><p>（1）userAgent：返回由客户机发生服务器的user-agent的头部值</p><h3 id="history对象"><a href="#history对象" class="headerlink" title="history对象"></a>history对象</h3><p>方法：</p><p>1.back()：后退功能</p><p>2.forward()：前进功能</p><p>3.go(参数)：前进或后退功能，参数为1，前进1个页面；参数为-1，后退1个页面</p><h3 id="元素偏移量offset系列"><a href="#元素偏移量offset系列" class="headerlink" title="元素偏移量offset系列"></a>元素偏移量offset系列</h3><p>1.常用属性：<br>（1）element.offsetParent：返回作为该元素带有定位的父级（祖先）元素，如果父级都没有定位，返回body</p><p>（2）element.offsetTop：返回元素相对于带有定位父元素的上方偏移量，不带单位</p><p>（3）element.offsetLeft：返回元素相对于带有定位父元素的左侧偏移量，不带单位</p><p>（4）element.offsetWidth：返回自身包括padding、边框和内容区的宽度，不带单位</p><p>（5）element.offsetHeight：返回自身包括padding、边框和内容区的高度，不带单位</p><p>2.offset与style的区别：</p><p>ofset中：</p><p>（1）可以得到任意样式表中的样式值</p><p>（2）获得的数值不带单位的数字</p><p>（3）offsetWidth包含pading+border+width</p><p>（4）offsetWidth等属性是只读属性，不能赋值</p><p>style中：</p><p>（1）只能获取行内样式表中的样式值</p><p>（2）获得的是带单位的字符串</p><p>（3）style.width获得的只包含width</p><p>（4）style.width等属性不仅是可读属性，而且可以赋值</p><h3 id="元素可视区client系列"><a href="#元素可视区client系列" class="headerlink" title="元素可视区client系列"></a>元素可视区client系列</h3><p>1.常用属性：<br>（1）element.clientTop：返回元素上边框大小，不带单位</p><p>（2）element.clientLeft：返回元素左边框大小，不带单位</p><p>（3）element.clientWidth：返回自身包括padding、width，不包含边框的宽度，不带单位</p><p>（4）element.clientHeight：返回自身包括padding、height，不包含边框高度，不带单位</p><h3 id="元素滚动scroll系列"><a href="#元素滚动scroll系列" class="headerlink" title="元素滚动scroll系列"></a>元素滚动scroll系列</h3><p>1.scroll系列属性</p><p>（1）element.scrollTop：返回被卷去的上侧距离，不带单位</p><p>（2）element.scrollLeft：返回被卷去的左侧距离，不带单位</p><p>（3）element.scrollWidth：返回自身实际的内容宽度（如果内容超出盒子范围，以内容准；否则，以盒子宽度和pading为准），不带单位</p><p>（4）element.scrollHeight：返回自身实际的内容宽度（如果内容超出盒子范围，以内容准；否则，以盒子宽度和pading为准），不带单位</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang&#x3D;&quot;en&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset&#x3D;&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;meta name&#x3D;&quot;viewport&quot; content&#x3D;&quot;width&#x3D;device-width, initial-scale&#x3D;1.0&quot;&gt;</span><br><span class="line">    &lt;title&gt;scroll系列&lt;&#x2F;title&gt;</span><br><span class="line">    &lt;style&gt;</span><br><span class="line">        div &#123;</span><br><span class="line">            width: 200px;</span><br><span class="line">            height: 200px;</span><br><span class="line">            background-color: pink;</span><br><span class="line">            border: 10px solid red;</span><br><span class="line">            padding: 10px;</span><br><span class="line">            overflow: auto;</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;&#x2F;style&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;div&gt;</span><br><span class="line">        我是内容 我是内容 我是内容 我是内容 我是内容 我是内容 我是内容 我是内容 我是内容 我是内容 我是内容 我是内容 我是内容 我是内容 我是内容 我是内容 我是内容 我是内容 我是内容 我是内容 我是内容 我是内容</span><br><span class="line">        我是内容 我是内容 我是内容 我是内容 我是内容 我是内容 我是内容 我是内容 我是内容 我是内容 我是内容 我是内容</span><br><span class="line">    &lt;&#x2F;div&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        &#x2F;&#x2F;scroll返回的值都不带单位</span><br><span class="line">        var div &#x3D; document.querySelector(&#39;div&#39;);</span><br><span class="line">        console.log(div.scrollHeight); &#x2F;&#x2F;返回盒子的真实高度 如果盒子了的内容超过盒子的高度 则是返回内容的实际高度 否证 返回盒子高度和padding</span><br><span class="line">        console.log(div.clientHeight);&#x2F;&#x2F;返回盒子高度和padding</span><br><span class="line">        &#x2F;&#x2F;scroll滚动事件 当我们滚动条发生变化会触发的事件</span><br><span class="line">        div.addEventListener(&#39;scroll&#39;, function () &#123;</span><br><span class="line">            console.log(div.scrollTop);&#x2F;&#x2F;返回被卷取的上侧距离</span><br><span class="line">        &#125;)</span><br><span class="line">    &lt;&#x2F;script&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure><p>2.window.pageYoffset可以获得页面被卷去的头部，同理window.pageXoffset得到被卷去的左侧</p><p>注意：</p><p>（1）offset系列经常用于获取元素位置：offsetLeft、offsetTop</p><p>（2）client经常用于获取元素大小：clientWidth、clientHeight</p><p>（3）scroll经常用于获取滚动距离：scrollTop、scrollLeft</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\js\APlayer.min.js&quot; class=&quot;aplayer-se
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>今日小结22</title>
    <link href="https://hgq169168.github.io/2020/08/19/%E4%BB%8A%E6%97%A5%E5%B0%8F%E7%BB%9322/"/>
    <id>https://hgq169168.github.io/2020/08/19/%E4%BB%8A%E6%97%A5%E5%B0%8F%E7%BB%9322/</id>
    <published>2020-08-19T14:09:41.000Z</published>
    <updated>2020-08-19T15:12:37.796Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><h2 id="今日依旧是Web-APIs"><a href="#今日依旧是Web-APIs" class="headerlink" title="今日依旧是Web APIs"></a><center>今日依旧是Web APIs</center></h2><h3 id="常用键盘事件"><a href="#常用键盘事件" class="headerlink" title="常用键盘事件"></a>常用键盘事件</h3><p>1.onkeyup：某个键盘按键被松开时触发，不区分字母大小写</p><p>2.onkeydown：某个键盘按键被按下时触发，不区分字母大小写</p><p>3.onkeypress：某个键盘按键被按下实时触发，区分字母大小写，但不能识别功能键，如ctrl、方向键</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang&#x3D;&quot;en&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset&#x3D;&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;meta name&#x3D;&quot;viewport&quot; content&#x3D;&quot;width&#x3D;device-width, initial-scale&#x3D;1.0&quot;&gt;</span><br><span class="line">    &lt;title&gt;常用键盘事件&lt;&#x2F;title&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        &#x2F;&#x2F;1.keyup 按键弹起来时触发</span><br><span class="line">        document.addEventListener(&#39;keyup&#39;, function () &#123;</span><br><span class="line">            console.log(&#39;我弹起来了&#39;);</span><br><span class="line">        &#125;)</span><br><span class="line">        &#x2F;&#x2F;3.keypress 按键按下时触发</span><br><span class="line">        document.addEventListener(&#39;keypress&#39;, function () &#123;</span><br><span class="line">            console.log(&#39;我按下了press&#39;);</span><br><span class="line">        &#125;)</span><br><span class="line">        &#x2F;&#x2F;2.keydown 按键按下时触发</span><br><span class="line">        document.addEventListener(&#39;keydown&#39;, function () &#123;</span><br><span class="line">            console.log(&#39;我按下了down&#39;);</span><br><span class="line">        &#125;)</span><br><span class="line">        &#x2F;&#x2F;执行顺序：keydown--&gt;keypress--&gt;keyup</span><br><span class="line">    &lt;&#x2F;script&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure><h3 id="常用的键盘事件对象"><a href="#常用的键盘事件对象" class="headerlink" title="常用的键盘事件对象"></a>常用的键盘事件对象</h3><p>1.keycode：返回该键的ASCII值</p><h3 id="BOM概述："><a href="#BOM概述：" class="headerlink" title="BOM概述："></a>BOM概述：</h3><p>1.BOM的顶级对象时window，DOM的顶级对象是document，BOM比DOM大，它包含DOM</p><p>2.window对象是浏览器的顶级对象，它具有双重角色：<br>（1）它是js访问浏览器窗口的一个接口</p><p>（2）它是一个全局变量，定义在全局作用域中的变量、函数都会变成window的属性和方法。在调用时，可以省略window，如alert()可以写成window.alerta()</p><h3 id="widow对象常见事件"><a href="#widow对象常见事件" class="headerlink" title="widow对象常见事件"></a>widow对象常见事件</h3><p>1.窗口加载事件：当文档内容完全加载（包括样式表、图片、flash等）完成时，触发该事件，就调用处理函数</p><p>格式：</p><p>（1）window.onload = function() {} 或</p><p>（2）window.addEventListener(‘load’, function() {})</p><p>注意：</p><p>document.addEventListener(‘DOMContenLoaded’, function() {})，仅当DOM加载完成（不包括样式表、图片、flash等），就触发该事件，进而调用处理函数。ie9+才开始支持</p><p>2.跳转窗口大小事件：当窗口大小发生变化时就会触发事件，进而调用处理函数</p><p>格式：</p><p>（1）window.onresize = function() {} 或</p><p>（2）window.addEventListener(‘resize’, function() {})</p><p>注意：常用于响应式布局，innerWidth是窗口宽度</p><h3 id="定时器"><a href="#定时器" class="headerlink" title="定时器"></a>定时器</h3><p>1.setTimeout()：用于设置一个定时器，到期后执行调用函数</p><p>window.setTimeout(调用函数[, 延迟的毫秒数]);</p><p>注意：</p><p>（1）调用函数可以直接写函数、函数名或者’函数名()’，不直接写 函数名()，而不加引号，否证延迟事件无效，会立刻执行</p><p>（2）由于定时器可能会有多个，通常会给定时器添加标识符，即赋值命名。（也为后期停止定时器做准备）</p><p>（3）window可以省略</p><p>2.停止setTimeout()定时器</p><p>window.clearTimeout(tiemout);</p><p>注意：</p><p>（1）tiemoutID是定时器的名字（标识符）</p><p>（2）window可以省略</p><p>3.setInterval()定时器：重复调用一个函数，每隔某个时间，就去调用一次回调函数</p><p>window.setInterval(调用函数[, 间隔的毫秒数])</p><p>注意：</p><p>（1）window可以省略</p><p>（2）调用函数可以直接写函数、函数名或者’函数名()’，不直接写 函数名()，而不加引号，否证延迟事件无效，会立刻执行</p><p>（3）由于定时器可能会有多个，通常会给定时器添加标识符，即赋值命名。（也为后期停止定时器做准备）</p><p>4.停止setInterval()定时器</p><p>window.clearsetInterval(intervalID)</p><p>注意：</p><p>（1）window可以省略</p><p>（2）interval是定时器的名字（标识符）</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\js\APlayer.min.js&quot; class=&quot;aplayer-se
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>今日小结21</title>
    <link href="https://hgq169168.github.io/2020/08/18/%E4%BB%8A%E6%97%A5%E5%B0%8F%E7%BB%9321/"/>
    <id>https://hgq169168.github.io/2020/08/18/%E4%BB%8A%E6%97%A5%E5%B0%8F%E7%BB%9321/</id>
    <published>2020-08-18T14:05:47.000Z</published>
    <updated>2020-08-19T14:39:05.221Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><h2 id="今日依旧是复习Web-APIs"><a href="#今日依旧是复习Web-APIs" class="headerlink" title="今日依旧是复习Web APIs"></a><center>今日依旧是复习Web APIs</center></h2><h3 id="三种动态创建元素的区别"><a href="#三种动态创建元素的区别" class="headerlink" title="三种动态创建元素的区别"></a>三种动态创建元素的区别</h3><p>1.document.write()</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">document.write(&#39;&lt;a href&#x3D;&quot;#&quot;&gt;百度&lt;&#x2F;a&gt;&#39;)</span><br></pre></td></tr></table></figure><p>2.element.innerHTML：直接赋值，如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">element.innerHTML &#x3D;&#39;&lt;a href&#x3D;&quot;#&quot;&gt;百度&lt;&#x2F;a&gt;&#39; ;</span><br></pre></td></tr></table></figure><p>3.document.creatElenment()</p><p>区别：</p><p>（1）document.write()是直接将内容写入页面的内容流，但是文档流执行完毕后，它会导致页面全部重绘（直接写没啥影响，添加事件再写就会重绘）</p><p>（2）innerHTML是将内容写入某个DOM节点，不会导致页面全部重绘</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang&#x3D;&quot;en&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset&#x3D;&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;meta name&#x3D;&quot;viewport&quot; content&#x3D;&quot;width&#x3D;device-width, initial-scale&#x3D;1.0&quot;&gt;</span><br><span class="line">    &lt;title&gt;三种创建元素方法区别&lt;&#x2F;title&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;button&gt;点击&lt;&#x2F;button&gt;</span><br><span class="line">    &lt;p&gt;abc&lt;&#x2F;p&gt;</span><br><span class="line">    &lt;div class&#x3D;&quot;inner&quot;&gt;&lt;&#x2F;div&gt;</span><br><span class="line">    &lt;div class&#x3D;&quot;create&quot;&gt;2&lt;&#x2F;div&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        &#x2F;&#x2F; window.onload &#x3D; function() &#123;</span><br><span class="line">        &#x2F;&#x2F;     document.write(&#39;&lt;div&gt;123&lt;&#x2F;div&gt;&#39;)</span><br><span class="line">        &#x2F;&#x2F; &#125;  &#x2F;&#x2F;跟方法1的原理一样</span><br><span class="line">        &#x2F;&#x2F;三种创建元素方式区别</span><br><span class="line">        &#x2F;&#x2F;1.document.write() 创建元素 如果页面文档流加载完毕，在调用这句代码会导致页面重绘</span><br><span class="line">        var btn &#x3D; document.querySelector(&#39;button&#39;);</span><br><span class="line">        btn.onclick &#x3D; function () &#123;</span><br><span class="line">            document.write(&#39;&lt;div&gt;123&lt;&#x2F;div&gt;&#39;)</span><br><span class="line">        &#125;</span><br><span class="line">        &#x2F;&#x2F;2.innerHTML 创建元素</span><br><span class="line">        var inner &#x3D; document.querySelector(&#39;.inner&#39;);</span><br><span class="line">        &#x2F;&#x2F; for (var i &#x3D; 0; i &lt;&#x3D; 100; i++) &#123;</span><br><span class="line">        &#x2F;&#x2F;     inner.innerHTML +&#x3D; &#39;&lt;a href&#x3D;&quot;#&quot;&gt;百度&lt;&#x2F;a&gt;&#39;</span><br><span class="line">        &#x2F;&#x2F; &#125;</span><br><span class="line">        var arr &#x3D; [];</span><br><span class="line">        for (var i &#x3D; 0; i &lt;&#x3D; 100; i++) &#123;</span><br><span class="line">            arr.push(&#39;&lt;a href&#x3D;&quot;#&quot;&gt;百度&lt;&#x2F;a&gt;&#39;);</span><br><span class="line">        &#125;</span><br><span class="line">        inner.innerHTML &#x3D; arr.join(&#39;&#39;);</span><br><span class="line">        &#x2F;&#x2F; 3. document.createElement() 创建元素</span><br><span class="line">        var create &#x3D; document.querySelector(&#39;.create&#39;);</span><br><span class="line">        for (var i &#x3D; 0; i &lt;&#x3D; 100; i++) &#123;</span><br><span class="line">            var a &#x3D; document.createElement(&#39;a&#39;);</span><br><span class="line">            create.appendChild(a);</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;&#x2F;script&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure><p>（3）innerHTML创建多个元素效率更高（不要拼接字符串，采取数组形式拼接），结构稍微复杂</p><p>（4）creatElement()创建多个元素效率稍低一些，但结构更清晰</p><h3 id="注册事件两种方式："><a href="#注册事件两种方式：" class="headerlink" title="注册事件两种方式："></a>注册事件两种方式：</h3><p>1.传统方式：利用on开头的事件，如onclick，特点是注册事件的唯一性，同一元素的同一事件只能设置一个处理函数（起作用的只有一个），以最后一个为准。</p><p>2.方法监听方式：</p><p>（1）ie9之前的：attachEvent()，是一个方法，特点是同一个事件，元素可以注册多个监听器（事件），按注册顺序执行</p><p>（2）ie9之后的：addEventListener()，是一个方法，特点是同一个事件，元素可以注册多个监听器（事件），按注册顺序执行</p><ol start="3"><li><p>addEventListener事件监听方式：</p><p>eventTarget.addEventListener(type, listener[,useCapture])</p></li></ol><p>（1）eventTarget：目标对象</p><p>（2）type：事件类型（要加引号），如’click’、’mouseover’，前面不要加on</p><p>（3）listener：事件处理函数</p><p>（4）useCapture：一个布尔值，默认是false（不写也是false）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">button.addEventListener(&#39;click&#39;, function() &#123;</span><br><span class="line">aler(&#39;hi&#39;);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>4.attachEvent事件监听方式：</p><p>eventTarget.attachEvent(eventNameWithOn, callback)</p><p>（1）eventNameWithOn：事件类型（要加引号），如’onclick’、’onmouseover’，前面要加on</p><p>（2）callback：事件处理函数</p><p>（3）eventTarget：目标对象</p><h3 id="删除（解绑）事件"><a href="#删除（解绑）事件" class="headerlink" title="删除（解绑）事件"></a>删除（解绑）事件</h3><p>1.传统方式删除事件：赋值一个null，如div.onclick = null;</p><p>2.方法监听注册方式删除事件（ie9之后的）：removeEventListener(type, listener[, useCapture])，其中listener是函数名</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;div&gt;hhh&lt;&#x2F;div&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">var div &#x3D; doucment.querySelector(&#39;div&#39;);</span><br><span class="line">div.addEventListenver(&#39;click&#39;, fn);&#x2F;&#x2F;fn不用加括号()</span><br><span class="line">funcion fn() &#123;</span><br><span class="line">alert(&#39;hhhh&#39;);</span><br><span class="line">div.removeEventListener(&#39;click&#39;, fn);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><p>3.方法监听注册方式删除事件（ie9之前的）：detachEvent(eventNameWithon, callback);，其中callback是函数名</p><h3 id="DOM事件流分为3个阶段：铺获阶段、当前目标阶段、冒泡阶段"><a href="#DOM事件流分为3个阶段：铺获阶段、当前目标阶段、冒泡阶段" class="headerlink" title="DOM事件流分为3个阶段：铺获阶段、当前目标阶段、冒泡阶段"></a>DOM事件流分为3个阶段：铺获阶段、当前目标阶段、冒泡阶段</h3><p>注意：</p><p>（1）js代码只能只能铺铺获或着冒泡阶段其中的一个阶段</p><p>（2）onclick（前面加油on的）和attachEvent(eventNameWithOn, callback)只能得到冒泡阶段</p><p>（3）addEventListener(type, listener[,useCapture])第三个参数为true，表示事件铺获阶段调用函数事件处理程序；如果为false（或者不写），表示事件冒泡阶段调用事件处理程序</p><h3 id="事件对象：在注册事件的函数小括号里面些形参名（一般为event、evt、e，其它的也行）"><a href="#事件对象：在注册事件的函数小括号里面些形参名（一般为event、evt、e，其它的也行）" class="headerlink" title="事件对象：在注册事件的函数小括号里面些形参名（一般为event、evt、e，其它的也行）"></a>事件对象：在注册事件的函数小括号里面些形参名（一般为event、evt、e，其它的也行）</h3><p>注意</p><p>（1）不需要我们传递实参，系统自动传递，只有有了事件，才会存在事件对象</p><p>（2）ie6~8要通过window.event来命名，也可以利用event = event|| windwo.event来解决兼容性问题</p><h3 id="常见事件对象的属性方法："><a href="#常见事件对象的属性方法：" class="headerlink" title="常见事件对象的属性方法："></a>常见事件对象的属性方法：</h3><p>1.e.target：返回触发事件的对象，标准</p><p>2.e.srcElement：返回触发事件的对象，非标准，ie6~8使用</p><p>3.e.type：返回事件类型，如click，不带on</p><p>4.e.canelBubble：阻止冒泡，ie6~8使用 e.cancelBubble=true</p><p>5.e.stopPropagation()：阻止冒泡，标准</p><p>6.e.returnValue：阻止默认事件（行为），如不让链接跳转，ie6~8使用</p><p>7.e.preventDefault()：阻止默认事件（行为），标准</p><p>注意：</p><p>（1）this返回的是绑定事件的对象（元素），可能由于冒泡原理引起的</p><p>（2）e.target返回的是触发事件的对象（元素），如被点击的对象</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang&#x3D;&quot;en&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset&#x3D;&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;meta name&#x3D;&quot;viewport&quot; content&#x3D;&quot;width&#x3D;device-width, initial-scale&#x3D;1.0&quot;&gt;</span><br><span class="line">    &lt;title&gt;常见的事件对象的属性和方法&lt;&#x2F;title&gt;</span><br><span class="line">    &lt;style&gt;</span><br><span class="line">        div &#123;</span><br><span class="line">            width: 100px;</span><br><span class="line">            height: 100px;</span><br><span class="line">            background-color: pink;</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;&#x2F;style&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;div&gt;hh&lt;&#x2F;div&gt;</span><br><span class="line">    &lt;ul&gt;</span><br><span class="line">        &lt;li&gt;11&lt;&#x2F;li&gt;</span><br><span class="line">        &lt;li&gt;22&lt;&#x2F;li&gt;</span><br><span class="line">        &lt;li&gt;33&lt;&#x2F;li&gt;</span><br><span class="line">    &lt;&#x2F;ul&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        &#x2F;&#x2F;1. e.target 返回的是触发事件的对象（元素） this返回的是绑定事件的对象（元素）</span><br><span class="line">        var div &#x3D; document.querySelector(&#39;div&#39;);</span><br><span class="line">        div.addEventListener(&#39;click&#39;, function (e) &#123;</span><br><span class="line">            console.log(e.target); &#x2F;&#x2F;&lt;div&gt;hh&lt;&#x2F;div&gt;</span><br><span class="line">            console.log(this); &#x2F;&#x2F;&lt;div&gt;hh&lt;&#x2F;div&gt;</span><br><span class="line">            &#x2F;&#x2F; console.log(currentTarget); &#x2F;&#x2F;&lt;div&gt;hh&lt;&#x2F;div&gt;</span><br><span class="line">        &#125;)</span><br><span class="line">        var ul &#x3D; document.querySelector(&#39;ul&#39;);</span><br><span class="line">        ul.addEventListener(&#39;click&#39;, function (e) &#123;</span><br><span class="line">            &#x2F;&#x2F;我们给ul绑定了事件 那么this 就指向ul</span><br><span class="line">            console.log(this);</span><br><span class="line">            &#x2F;&#x2F;e.target 指向我们点击的那个对象 谁触发了这个事件 （我们点击的是li ） e.target指向的就是li</span><br><span class="line">            console.log(e.target);</span><br><span class="line">        &#125;)</span><br><span class="line"></span><br><span class="line">        &#x2F;&#x2F;兼容问题 ie678 </span><br><span class="line">        &#x2F;&#x2F; var div &#x3D; document.querySelector(&#39;div&#39;);</span><br><span class="line">        &#x2F;&#x2F; div.onclick &#x3D; function (e) &#123;</span><br><span class="line">        &#x2F;&#x2F;     e &#x3D; e || window.event</span><br><span class="line">        &#x2F;&#x2F;     var target &#x3D; e.target || e.srcElement;</span><br><span class="line">        &#x2F;&#x2F;     console.log(target);</span><br><span class="line">        &#x2F;&#x2F; &#125;</span><br><span class="line">        &#x2F;&#x2F;了解 更this有个非常相似的属性 currentTarget ie678不认识</span><br><span class="line">    &lt;&#x2F;script&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure><p>阻止默认事件例子：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang&#x3D;&quot;en&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset&#x3D;&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;meta name&#x3D;&quot;viewport&quot; content&#x3D;&quot;width&#x3D;device-width, initial-scale&#x3D;1.0&quot;&gt;</span><br><span class="line">    &lt;title&gt;事件对象阻止默认行为&lt;&#x2F;title&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;div&gt;123&lt;&#x2F;div&gt;</span><br><span class="line">    &lt;a href&#x3D;&quot;http:&#x2F;&#x2F;www.baidu.com&quot;&gt;百度&lt;&#x2F;a&gt;</span><br><span class="line">    &lt;form action&#x3D;&quot;http:&#x2F;&#x2F;www.baidu.com&quot;&gt;</span><br><span class="line">        &lt;input type&#x3D;&quot;submit&quot; value&#x3D;&quot;提交&quot; name&#x3D;&quot;sub&quot;&gt;</span><br><span class="line">    &lt;&#x2F;form&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        &#x2F;&#x2F;1.返回事件类型</span><br><span class="line">        var div &#x3D; document.querySelector(&#39;div&#39;);</span><br><span class="line">        div.addEventListener(&#39;click&#39;, fn);</span><br><span class="line">        div.addEventListener(&#39;mouseover&#39;, fn);</span><br><span class="line">        div.addEventListener(&#39;mouseout&#39;, fn);</span><br><span class="line">        function fn(e) &#123;</span><br><span class="line">            console.log(e.type);</span><br><span class="line">        &#125;</span><br><span class="line">        &#x2F;&#x2F; 2. 阻止默认行为（事件） 让链接不跳转 或者让提交按钮不提交</span><br><span class="line">        var a &#x3D; document.querySelector(&#39;a&#39;);</span><br><span class="line">        a.addEventListener(&#39;click&#39;, function (e) &#123;</span><br><span class="line">            e.preventDefault(); &#x2F;&#x2F;  dom 标准写法</span><br><span class="line">        &#125;)</span><br><span class="line">        &#x2F;&#x2F; 3. 传统的注册方式</span><br><span class="line">        a.onclick &#x3D; function (e) &#123;</span><br><span class="line">            &#x2F;&#x2F; 普通浏览器 e.preventDefault();  方法</span><br><span class="line">            &#x2F;&#x2F; e.preventDefault();</span><br><span class="line">            &#x2F;&#x2F; 低版本浏览器 ie678  returnValue  属性</span><br><span class="line">            &#x2F;&#x2F; e.returnValue;</span><br><span class="line">            &#x2F;&#x2F; 我们可以利用return false 也能阻止默认行为 没有兼容性问题 特点： return 后面的代码不执行了， 而且只限于传统的注册方式</span><br><span class="line">            return false;</span><br><span class="line">            alert(11);</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;&#x2F;script&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure><p>阻止冒泡例子：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang&#x3D;&quot;en&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset&#x3D;&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;meta name&#x3D;&quot;viewport&quot; content&#x3D;&quot;width&#x3D;device-width, initial-scale&#x3D;1.0&quot;&gt;</span><br><span class="line">    &lt;meta http-equiv&#x3D;&quot;X-UA-Compatible&quot; content&#x3D;&quot;ie&#x3D;edge&quot;&gt;</span><br><span class="line">    &lt;title&gt;Document&lt;&#x2F;title&gt;</span><br><span class="line">    &lt;style&gt;</span><br><span class="line">        .father &#123;</span><br><span class="line">            overflow: hidden;</span><br><span class="line">            width: 300px;</span><br><span class="line">            height: 300px;</span><br><span class="line">            margin: 100px auto;</span><br><span class="line">            background-color: pink;</span><br><span class="line">            text-align: center;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        .son &#123;</span><br><span class="line">            width: 200px;</span><br><span class="line">            height: 200px;</span><br><span class="line">            margin: 50px;</span><br><span class="line">            background-color: purple;</span><br><span class="line">            line-height: 200px;</span><br><span class="line">            color: #fff;</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;&#x2F;style&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;div class&#x3D;&quot;father&quot;&gt;</span><br><span class="line">        &lt;div class&#x3D;&quot;son&quot;&gt;son儿子&lt;&#x2F;div&gt;</span><br><span class="line">    &lt;&#x2F;div&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        &#x2F;&#x2F; 常见事件对象的属性和方法</span><br><span class="line">        &#x2F;&#x2F; 阻止冒泡  dom 推荐的标准 stopPropagation() </span><br><span class="line">        var son &#x3D; document.querySelector(&#39;.son&#39;);</span><br><span class="line">        son.addEventListener(&#39;click&#39;, function (e) &#123;</span><br><span class="line">            alert(&#39;son&#39;);</span><br><span class="line">            e.stopPropagation(); &#x2F;&#x2F; stop 停止  Propagation 传播</span><br><span class="line">            &#x2F;&#x2F; e.cancelBubble &#x3D; true; &#x2F;&#x2F; 非标准 cancel 取消 bubble 泡泡</span><br><span class="line">        &#125;, false);</span><br><span class="line"></span><br><span class="line">        var father &#x3D; document.querySelector(&#39;.father&#39;);</span><br><span class="line">        father.addEventListener(&#39;click&#39;, function (e) &#123;</span><br><span class="line">            alert(&#39;father&#39;);</span><br><span class="line">            &#x2F;&#x2F;照顾兼容性问题（低版本的ie678）</span><br><span class="line">            if (e &amp;&amp; e.stopPropagation) &#123;</span><br><span class="line">                e.stopPropagation();</span><br><span class="line">            &#125; else &#123;</span><br><span class="line">                window.envet.cancelBubble &#x3D; true;</span><br><span class="line">            &#125;</span><br><span class="line">            &#x2F;&#x2F; e.stopPropagation(); &#x2F;&#x2F; stop 停止  Propagation 传播</span><br><span class="line">            &#x2F;&#x2F; e.cancelBubble &#x3D; true; &#x2F;&#x2F; 非标准 cancel 取消 bubble 泡泡</span><br><span class="line">        &#125;, false);</span><br><span class="line">        document.addEventListener(&#39;click&#39;, function () &#123;</span><br><span class="line">            alert(&#39;document&#39;);</span><br><span class="line">        &#125;)</span><br><span class="line">    &lt;&#x2F;script&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure><h3 id="事件委托（代理、委派）"><a href="#事件委托（代理、委派）" class="headerlink" title="事件委托（代理、委派）"></a>事件委托（代理、委派）</h3><p>原理：不是每个子节点单独设置事件监听器，而是事件监听器设置在其父阶段上，然后利用冒泡原理影响设置每个子节点</p><h3 id="鼠标常用事件"><a href="#鼠标常用事件" class="headerlink" title="鼠标常用事件"></a>鼠标常用事件</h3><p>1.禁止鼠标右键菜单</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">document.addEventListener(&#39;contextmenu&#39;, function(e) &#123;</span><br><span class="line">e.prevertDefault();</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>注意：contextmenu主要控制应该何时显示上下文菜单，主要用于取消默认的上下文菜单</p><p>2.禁止鼠标选中</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">doument.addEventListener(&#39;selectstart&#39;, function(e) &#123;</span><br><span class="line">e.preventDfault();</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>注意：selectstart是开始选中</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang&#x3D;&quot;en&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset&#x3D;&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;meta name&#x3D;&quot;viewport&quot; content&#x3D;&quot;width&#x3D;device-width, initial-scale&#x3D;1.0&quot;&gt;</span><br><span class="line">    &lt;meta http-equiv&#x3D;&quot;X-UA-Compatible&quot; content&#x3D;&quot;ie&#x3D;edge&quot;&gt;</span><br><span class="line">    &lt;title&gt;Document&lt;&#x2F;title&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">    我是一段不愿意分享的文字</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        &#x2F;&#x2F; 1. contextmenu 我们可以禁用右键菜单</span><br><span class="line">        document.addEventListener(&#39;contextmenu&#39;, function(e) &#123;</span><br><span class="line">                e.preventDefault();</span><br><span class="line">            &#125;)</span><br><span class="line">            &#x2F;&#x2F; 2. 禁止选中文字 selectstart</span><br><span class="line">        document.addEventListener(&#39;selectstart&#39;, function(e) &#123;</span><br><span class="line">            e.preventDefault();</span><br><span class="line"></span><br><span class="line">        &#125;)</span><br><span class="line">    &lt;&#x2F;script&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure><h3 id="鼠标事件对象"><a href="#鼠标事件对象" class="headerlink" title="鼠标事件对象"></a>鼠标事件对象</h3><p>1.e.clientX：返回鼠标相对浏览器窗口可视区的X坐标</p><p>2.e.clientY：返回鼠标相对浏览器窗口可视区的Y坐标</p><p>3.e.pageX：返回鼠标相对于文档页面的X坐标，ie9+支持</p><p>4.e.pageY：返回鼠标相对于文档页面的Y坐标，ie9+支持</p><p>5.e.screenX：返回鼠标相对屏幕的X坐标</p><p>6.e.screenY：返回鼠标相对屏幕的Y坐标</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang&#x3D;&quot;en&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset&#x3D;&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;meta name&#x3D;&quot;viewport&quot; content&#x3D;&quot;width&#x3D;device-width, initial-scale&#x3D;1.0&quot;&gt;</span><br><span class="line">    &lt;meta http-equiv&#x3D;&quot;X-UA-Compatible&quot; content&#x3D;&quot;ie&#x3D;edge&quot;&gt;</span><br><span class="line">    &lt;title&gt;Document&lt;&#x2F;title&gt;</span><br><span class="line">    &lt;style&gt;</span><br><span class="line">        body &#123;</span><br><span class="line">            height: 3000px;</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;&#x2F;style&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        &#x2F;&#x2F; 鼠标事件对象 MouseEvent</span><br><span class="line">        document.addEventListener(&#39;click&#39;, function(e) &#123;</span><br><span class="line">            &#x2F;&#x2F; 1. client 鼠标在可视区的x和y坐标</span><br><span class="line">            console.log(e.clientX);</span><br><span class="line">            console.log(e.clientY);</span><br><span class="line">            console.log(&#39;---------------------&#39;);</span><br><span class="line"></span><br><span class="line">            &#x2F;&#x2F; 2. page 鼠标在页面文档的x和y坐标</span><br><span class="line">            console.log(e.pageX);</span><br><span class="line">            console.log(e.pageY);</span><br><span class="line">            console.log(&#39;---------------------&#39;);</span><br><span class="line"></span><br><span class="line">            &#x2F;&#x2F; 3. screen 鼠标在电脑屏幕的x和y坐标</span><br><span class="line">            console.log(e.screenX);</span><br><span class="line">            console.log(e.screenY);</span><br><span class="line"></span><br><span class="line">        &#125;)</span><br><span class="line">    &lt;&#x2F;script&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\js\APlayer.min.js&quot; class=&quot;aplayer-se
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>今日小结20</title>
    <link href="https://hgq169168.github.io/2020/08/17/%E4%BB%8A%E6%97%A5%E5%B0%8F%E7%BB%9320/"/>
    <id>https://hgq169168.github.io/2020/08/17/%E4%BB%8A%E6%97%A5%E5%B0%8F%E7%BB%9320/</id>
    <published>2020-08-17T14:12:37.000Z</published>
    <updated>2020-08-18T14:18:42.309Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><h2 id="今日复习Web-APIs"><a href="#今日复习Web-APIs" class="headerlink" title="今日复习Web APIs"></a><cener>今日复习Web APIs</cener></h2><h3 id="操作元素"><a href="#操作元素" class="headerlink" title="操作元素"></a>操作元素</h3><p>1.改变元素内容（普通元素的，表单元素用value）：</p><p>（1）elemen.innerText：从起始位置到终止位置的内容，读取时：去除html标签、空格和换行（修改时：不能识别html标签、空格、换行）</p><p>（2）element.innerHTML：从起始位置到终止位置的内容，读取时：包括html标签、空格和换行（修改时：能识别html标签、空格、换行）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang&#x3D;&quot;en&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset&#x3D;&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;meta name&#x3D;&quot;viewport&quot; content&#x3D;&quot;width&#x3D;device-width, initial-scale&#x3D;1.0&quot;&gt;</span><br><span class="line">    &lt;title&gt;element.innerText与element.innerHTML的区别&lt;&#x2F;title&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;div&gt;&lt;&#x2F;div&gt;</span><br><span class="line">    &lt;p&gt;</span><br><span class="line">        我是文字</span><br><span class="line">        &lt;span&gt;123&lt;&#x2F;span&gt;</span><br><span class="line">    &lt;&#x2F;p&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        &#x2F;&#x2F;1. innerText 不识别html标签 非标准  去除空格和换行</span><br><span class="line">        var div &#x3D; document.querySelector(&#39;div&#39;);</span><br><span class="line">        &#x2F;&#x2F;div.innerText &#x3D; &#39;&lt;strong&gt;今天是：&lt;&#x2F;strong&gt; 22019&#39;;</span><br><span class="line">        &#x2F;&#x2F;2. innerHTML 识别html标签 wc3标准 保留空格和换行</span><br><span class="line">        div.innerHTML &#x3D; &#39;&lt;strong&gt;今天是：&lt;&#x2F;strong&gt; 2019&#39;;</span><br><span class="line">        &#x2F;&#x2F;这两个属性是可读写的 可以获取元素里面的内容</span><br><span class="line">        var p &#x3D; document.querySelector(&#39;p&#39;);</span><br><span class="line">        console.log(p.innerText);</span><br><span class="line">        console.log(p.innerHTML);</span><br><span class="line">    &lt;&#x2F;script&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure><p>2.常用元素的属性操作</p><p>（1）innerText、innerHTML 改变内容</p><p>（2）src、href</p><p>（3）id、alt、title</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang&#x3D;&quot;en&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset&#x3D;&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;meta name&#x3D;&quot;viewport&quot; content&#x3D;&quot;width&#x3D;device-width, initial-scale&#x3D;1.0&quot;&gt;</span><br><span class="line">    &lt;meta http-equiv&#x3D;&quot;X-UA-Compatible&quot; content&#x3D;&quot;ie&#x3D;edge&quot;&gt;</span><br><span class="line">    &lt;title&gt;操作元素之修改元素属性&lt;&#x2F;title&gt;</span><br><span class="line">    &lt;style&gt;</span><br><span class="line">        img &#123;</span><br><span class="line">            width: 300px;</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;&#x2F;style&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;button id&#x3D;&quot;ldh&quot;&gt;刘德华&lt;&#x2F;button&gt;</span><br><span class="line">    &lt;button id&#x3D;&quot;zxy&quot;&gt;张学友&lt;&#x2F;button&gt; &lt;br&gt;</span><br><span class="line">    &lt;img src&#x3D;&quot;images&#x2F;ldh.jpg&quot; alt&#x3D;&quot;&quot; title&#x3D;&quot;刘德华&quot;&gt;</span><br><span class="line"></span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        &#x2F;&#x2F; 修改元素属性  src</span><br><span class="line">        &#x2F;&#x2F; 1. 获取元素</span><br><span class="line">        var ldh &#x3D; document.getElementById(&#39;ldh&#39;);</span><br><span class="line">        var zxy &#x3D; document.getElementById(&#39;zxy&#39;);</span><br><span class="line">        var img &#x3D; document.querySelector(&#39;img&#39;);</span><br><span class="line">        &#x2F;&#x2F; 2. 注册事件  处理程序</span><br><span class="line">        zxy.onclick &#x3D; function () &#123;</span><br><span class="line">            img.src &#x3D; &#39;images&#x2F;zxy.jpg&#39;;</span><br><span class="line">            img.title &#x3D; &#39;张学友思密达&#39;;</span><br><span class="line">        &#125;</span><br><span class="line">        ldh.onclick &#x3D; function () &#123;</span><br><span class="line">            img.src &#x3D; &#39;images&#x2F;ldh.jpg&#39;;</span><br><span class="line">            img.title &#x3D; &#39;刘德华&#39;;</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;&#x2F;script&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure><p>3.表单元素属性操作：type、value、checked、select、disabled（禁用按钮）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;button&gt;按钮&lt;&#x2F;button&gt;</span><br><span class="line">&lt;input type&#x3D;&quot;text&quot; value&#x3D;&quot;输入内容&quot;&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">var btn &#x3D; doucment.querySelector(&#39;button&#39;);</span><br><span class="line">var input &#x3D; doucment.querySelector(&#39;input&#39;);</span><br><span class="line">btn.onclick &#x3D; function() &#123;</span><br><span class="line">input.value &#x3D; &#39;被点击了&#39;</span><br><span class="line">this.disabled &#x3D; true;</span><br><span class="line">&#125;</span><br><span class="line">&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><p>4.样式属性操作：修改元素的大小、颜色‘位置等</p><p>（1）element.style   行内样式操作</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang&#x3D;&quot;en&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset&#x3D;&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;meta name&#x3D;&quot;viewport&quot; content&#x3D;&quot;width&#x3D;device-width, initial-scale&#x3D;1.0&quot;&gt;</span><br><span class="line">    &lt;title&gt;操作元素之修改样式属性&lt;&#x2F;title&gt;</span><br><span class="line">    &lt;style&gt;</span><br><span class="line">        div &#123;</span><br><span class="line">            width: 300px;</span><br><span class="line">            height: 200px;</span><br><span class="line">            background-color: pink;</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;&#x2F;style&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;div&gt;&lt;&#x2F;div&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        var div &#x3D; document.querySelector(&#39;div&#39;);</span><br><span class="line">        div.onclick &#x3D; function () &#123;</span><br><span class="line">            this.style.backgroundColor &#x3D; &#39;purple&#39;;  &#x2F;&#x2F;element.style 是行内样式操作</span><br><span class="line">            this.style.width &#x3D; &#39;400px&#39;;</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;&#x2F;script&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure><p>（2）element.className  类名样式操作 （事先写好一个样式属性，并为之去一个类名（如：change），事件触发时，引用，如：elment.className = “change”）</p><p>注意：calssName会直接更改元素的类名（原先的会被取代）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang&#x3D;&quot;en&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset&#x3D;&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;meta name&#x3D;&quot;viewport&quot; content&#x3D;&quot;width&#x3D;device-width, initial-scale&#x3D;1.0&quot;&gt;</span><br><span class="line">    &lt;title&gt;通过className修改元素样式&lt;&#x2F;title&gt;</span><br><span class="line">    &lt;style&gt;</span><br><span class="line">        div &#123;</span><br><span class="line">            width: 100px;</span><br><span class="line">            height: 100px;</span><br><span class="line">            background-color: pink;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        .change &#123;</span><br><span class="line">            background-color: purple;</span><br><span class="line">            color: #fff;</span><br><span class="line">            font-size: 25px;</span><br><span class="line">            margin-top: 100px;</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;&#x2F;style&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;div class&#x3D;&quot;first&quot;&gt;文本&lt;&#x2F;div&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        var text &#x3D; document.querySelector(&#39;div&#39;);</span><br><span class="line">        text.onclick &#x3D; function () &#123;</span><br><span class="line">            &#x2F;&#x2F;通过修改元素的className更改元素的样式 适合与样式较多或功能复杂的情况</span><br><span class="line">            &#x2F;&#x2F; text.className &#x3D; &#39;change&#39;;  &#x2F;&#x2F;原先的类名会被取代 不可再用</span><br><span class="line">            text.className &#x3D; &#39;first change&#39;  &#x2F;&#x2F; 保留原先的类名 多类名选择器</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &lt;&#x2F;script&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure><p>5.排他思想：如果有同一组元素，要某个元素实现某种样式，就要用到排他思想算法</p><p>（1）同一组所有元素清除样式</p><p>（2）给当前元素设置样式</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang&#x3D;&quot;en&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset&#x3D;&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;meta name&#x3D;&quot;viewport&quot; content&#x3D;&quot;width&#x3D;device-width, initial-scale&#x3D;1.0&quot;&gt;</span><br><span class="line">    &lt;title&gt;排他思想（算法）&lt;&#x2F;title&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;div&gt;</span><br><span class="line">        &lt;button&gt;按钮1&lt;&#x2F;button&gt;</span><br><span class="line">        &lt;button&gt;按钮2&lt;&#x2F;button&gt;</span><br><span class="line">        &lt;button&gt;按钮3&lt;&#x2F;button&gt;</span><br><span class="line">        &lt;button&gt;按钮4&lt;&#x2F;button&gt;</span><br><span class="line">        &lt;button&gt;按钮5&lt;&#x2F;button&gt;</span><br><span class="line">    &lt;&#x2F;div&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        var btns &#x3D; document.querySelectorAll(&#39;button&#39;);</span><br><span class="line">        for (var i &#x3D; 0; i &lt; btns.length; i++) &#123;</span><br><span class="line">            btns[i].onclick &#x3D; function () &#123;</span><br><span class="line">                &#x2F;&#x2F;1.先去掉所有的按钮背景颜色</span><br><span class="line">                for (var i &#x3D; 0; i &lt; btns.length; i++) &#123;</span><br><span class="line">                    btns[i].style.backgroundColor &#x3D; &#39;&#39;;</span><br><span class="line">                &#125;</span><br><span class="line">                &#x2F;&#x2F;2.然后才让当前的元素背景颜色为pink</span><br><span class="line">                this.style.backgroundColor &#x3D; &#39;pink&#39;;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &lt;&#x2F;script&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure><h3 id="自定义属性的操作（程序员自己添加的属性）"><a href="#自定义属性的操作（程序员自己添加的属性）" class="headerlink" title="自定义属性的操作（程序员自己添加的属性）"></a>自定义属性的操作（程序员自己添加的属性）</h3><p>1.获取属性值</p><p>（1）element.属性：只能获取内置属性值</p><p>（2）element.getAttribute(‘属性’)：主要用于获取自定义属性值，也可以获取内置属性值</p><p>2.设置属性值：</p><p>（1）element.属性 = ‘值’：设置内置属性值</p><p>（2）element.setAttribute(‘属性’, ‘值’)：主要针对自定义属性，也可以设置内置属性值</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang&#x3D;&quot;en&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset&#x3D;&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;meta name&#x3D;&quot;viewport&quot; content&#x3D;&quot;width&#x3D;device-width, initial-scale&#x3D;1.0&quot;&gt;</span><br><span class="line">    &lt;title&gt;自定义属性操作&lt;&#x2F;title&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;div id&#x3D;&quot;demo&quot; index&#x3D;&#39;1&#39; class&#x3D;&quot;list&quot;&gt;&lt;&#x2F;div&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        var div &#x3D; document.querySelector(&#39;div&#39;);</span><br><span class="line">        &#x2F;&#x2F;1. 获取元素的属性值</span><br><span class="line">        &#x2F;&#x2F;（1）elmemet.属性</span><br><span class="line">        console.log(div.id);</span><br><span class="line">        console.log(div.index);</span><br><span class="line">        &#x2F;&#x2F; console.log(div.index);  &#x2F;&#x2F;返回undefined</span><br><span class="line">        &#x2F;&#x2F;(2)element.getArribute(&#39;属性&#39;) get得获取 attribute 属性的意思 我们程序员自己天加的属性 即自定义属性 index</span><br><span class="line">        console.log(div.getAttribute(&#39;id&#39;));</span><br><span class="line">        console.log(div.getAttribute(&#39;index&#39;));</span><br><span class="line">        &#x2F;&#x2F;2.设置元素属性值</span><br><span class="line">        &#x2F;&#x2F;（1）elemnt.属性</span><br><span class="line">        div.id &#x3D; &#39;test&#39;;</span><br><span class="line">        div.className &#x3D; &#39;navs&#39;;</span><br><span class="line">        &#x2F;&#x2F;(2)element.setAttribute(&#39;属性&#39;,&#39;值&#39;) 主要针对自定义属性  也可以对自身属性进行修改</span><br><span class="line">        div.setAttribute(&#39;index&#39;, 2);</span><br><span class="line">        div.setAttribute(&#39;class&#39;, &#39;footer&#39;);&#x2F;&#x2F;class 特殊 写class 不写className</span><br><span class="line">        div.setAttribute(&#39;id&#39;, &#39;3&#39;);</span><br><span class="line">    &lt;&#x2F;script&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure><p>3.H5自定义属性：</p><p>规范：要以data-开头来命名属性名</p><p>获取H5自定义属性：</p><p>（1）兼容性获取：element.getAttribute(‘data-index’);  </p><p>（2）ie11以上才支持：element.dataset.index 或element.dataset[’data]，dataset是一个集合，里面存放了所有以data-开头的自定义属性。如果自定义属性里面有多个-链接的单词，我们获取的时候采取 驼峰命名法</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang&#x3D;&quot;en&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset&#x3D;&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;meta name&#x3D;&quot;viewport&quot; content&#x3D;&quot;width&#x3D;device-width, initial-scale&#x3D;1.0&quot;&gt;</span><br><span class="line">    &lt;meta http-equiv&#x3D;&quot;X-UA-Compatible&quot; content&#x3D;&quot;ie&#x3D;edge&quot;&gt;</span><br><span class="line">    &lt;title&gt;H5自定义属性&lt;&#x2F;title&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;div getTime&#x3D;&quot;20&quot; data-index&#x3D;&quot;2&quot; data-list-name&#x3D;&quot;andy&quot;&gt;&lt;&#x2F;div&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        var div &#x3D; document.querySelector(&#39;div&#39;);</span><br><span class="line">        &#x2F;&#x2F; console.log(div.getTime);</span><br><span class="line">        console.log(div.getAttribute(&#39;getTime&#39;));</span><br><span class="line">        div.setAttribute(&#39;data-time&#39;, 20);</span><br><span class="line">        console.log(div.getAttribute(&#39;data-index&#39;));</span><br><span class="line">        console.log(div.getAttribute(&#39;data-list-name&#39;));</span><br><span class="line">        &#x2F;&#x2F; h5新增的获取自定义属性的方法 它只能获取data-开头的  上面的getTime是不规范的自定义属性</span><br><span class="line">        &#x2F;&#x2F; dataset 是一个集合里面存放了所有以data开头的自定义属性</span><br><span class="line">        console.log(div.dataset);&#x2F;&#x2F;DOMStringMap</span><br><span class="line">        console.log(div.dataset.index);</span><br><span class="line">        console.log(div.dataset[&#39;index&#39;]);</span><br><span class="line">        &#x2F;&#x2F; 如果自定义属性里面有多个-链接的单词，我们获取的时候采取 驼峰命名法</span><br><span class="line">        console.log(div.dataset.listName);</span><br><span class="line">        console.log(div.dataset[&#39;listName&#39;]);  &#x2F;&#x2F;IE 11 才开始支持</span><br><span class="line">    &lt;&#x2F;script&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure><h3 id="节点操作"><a href="#节点操作" class="headerlink" title="节点操作"></a>节点操作</h3><p>1.节点只有拥有nodeType（节点类型）、nodeName（节点名称）和nodeValue（节点类型）</p><p>（1）元素节点的nodeType为1</p><p>（2）属性节点的nodeType为2</p><p>（3）文本节点的nodeType为3</p><p>2.父级节点：node.parentNode，得到节点最近的父级节点，没有则返回null</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang&#x3D;&quot;en&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset&#x3D;&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;meta name&#x3D;&quot;viewport&quot; content&#x3D;&quot;width&#x3D;device-width, initial-scale&#x3D;1.0&quot;&gt;</span><br><span class="line">    &lt;title&gt;父级节点的操作&lt;&#x2F;title&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;!-- 节点的优点 --&gt;</span><br><span class="line">    &lt;div&gt;我是div&lt;&#x2F;div&gt;</span><br><span class="line">    &lt;span&gt;我是span&lt;&#x2F;span&gt;</span><br><span class="line">    &lt;ul&gt;</span><br><span class="line">        &lt;li&gt;我是li&lt;&#x2F;li&gt;</span><br><span class="line">        &lt;li&gt;我是li&lt;&#x2F;li&gt;</span><br><span class="line">        &lt;li&gt;我是li&lt;&#x2F;li&gt;</span><br><span class="line">        &lt;li&gt;我是li&lt;&#x2F;li&gt;</span><br><span class="line">    &lt;&#x2F;ul&gt;</span><br><span class="line">    &lt;div class&#x3D;&quot;demo&quot;&gt;</span><br><span class="line">        &lt;div class&#x3D;&quot;box&quot;&gt;</span><br><span class="line">            &lt;span class&#x3D;&quot;erweima&quot;&gt;×&lt;&#x2F;span&gt;</span><br><span class="line">        &lt;&#x2F;div&gt;</span><br><span class="line">    &lt;&#x2F;div&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        &#x2F;&#x2F;1.node.parentNode父级节点</span><br><span class="line">        var erweima &#x3D; document.querySelector(&#39;.erweima&#39;);</span><br><span class="line">        console.log(erweima.parentNode);&#x2F;&#x2F;得到离元素最近的父级节点  如果找不到就返回null</span><br><span class="line">        console.log(erweima.parentElement);</span><br><span class="line">    &lt;&#x2F;script&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure><p>3.子节点：<br>（1）node.chilNodes：得到所有子节点（爆款元素、文本等节点），是一个集合</p><p>（2）node.children：得到所有子元素节点，是一个集合</p><p>（3）node.firstChild：第一个子节点</p><p>（4）node.lastChild：最后一个子节点</p><p>（5）node.firstElementChild：第一个子元素节点</p><p>（6）node.lastElementChild：最后一个子元素节点</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang&#x3D;&quot;en&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset&#x3D;&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;meta name&#x3D;&quot;viewport&quot; content&#x3D;&quot;width&#x3D;device-width, initial-scale&#x3D;1.0&quot;&gt;</span><br><span class="line">    &lt;meta http-equiv&#x3D;&quot;X-UA-Compatible&quot; content&#x3D;&quot;ie&#x3D;edge&quot;&gt;</span><br><span class="line">    &lt;title&gt;Document&lt;&#x2F;title&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;ul&gt;</span><br><span class="line">        &lt;li&gt;我是li&lt;&#x2F;li&gt;</span><br><span class="line">        &lt;li&gt;我是li&lt;&#x2F;li&gt;</span><br><span class="line">        &lt;li&gt;我是li&lt;&#x2F;li&gt;</span><br><span class="line">        &lt;li&gt;我是li&lt;&#x2F;li&gt;</span><br><span class="line"></span><br><span class="line">    &lt;&#x2F;ul&gt;</span><br><span class="line">    &lt;ol&gt;</span><br><span class="line">        &lt;li&gt;我是li1&lt;&#x2F;li&gt;</span><br><span class="line">        &lt;li&gt;我是li2&lt;&#x2F;li&gt;</span><br><span class="line">        &lt;li&gt;我是li3&lt;&#x2F;li&gt;</span><br><span class="line">        &lt;li&gt;我是li4&lt;&#x2F;li&gt;</span><br><span class="line">        &lt;li&gt;我是li5&lt;&#x2F;li&gt;</span><br><span class="line">    &lt;&#x2F;ol&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">    &#x2F;&#x2F;DOM 提供的方法（API）获取</span><br><span class="line">        var ul &#x3D; document.querySelector(&#39;ul&#39;);</span><br><span class="line">        var lis &#x3D; ul.querySelectorAll(&#39;li&#39;);</span><br><span class="line">        &#x2F;&#x2F;1.子节点 chilNodes 所有的子节点 包含 元素节点 文本节点等</span><br><span class="line">        console.log(ul.childNodes);</span><br><span class="line">        console.log(ul.childNodes[0].nodeType);&#x2F;&#x2F;返回3 表示是文本节点</span><br><span class="line">        console.log(ul.childNodes[1].nodeType);&#x2F;&#x2F;返回1 表示是元素（标签）节点</span><br><span class="line">        &#x2F;&#x2F;2.children 获取所有的子元素节点 经常使用的方法</span><br><span class="line">        console.log(ul.children);</span><br><span class="line">        </span><br><span class="line">        var ol &#x3D; document.querySelector(&#39;ol&#39;);</span><br><span class="line">        &#x2F;&#x2F; 1. firstChild 第一个子节点 不管是文本节点还是元素节点</span><br><span class="line">        console.log(ol.firstChild);</span><br><span class="line">        console.log(ol.lastChild);</span><br><span class="line">        &#x2F;&#x2F; 2. firstElementChild 返回第一个子元素节点 ie9才支持</span><br><span class="line">        console.log(ol.firstElementChild);</span><br><span class="line">        console.log(ol.lastElementChild);</span><br><span class="line">        &#x2F;&#x2F; 3. 实际开发的写法  既没有兼容性问题又返回第一个子元素</span><br><span class="line">        console.log(ol.children[0]);</span><br><span class="line">        console.log(ol.children[ol.children.length - 1]);</span><br><span class="line">    &lt;&#x2F;script&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure><p>4.兄弟节点：</p><p>（1）node.nextSiblig：返回下一个兄弟节点（包含元素、文本等节点），没有则返回null</p><p>（2）node.previousSiblig：返回上一个兄弟节点（包含元素、文本等节点），没有则返回null</p><p>（3）node.nextElementSibling：返回下一个兄弟元素节点，没有则返回null（ie9以上才支持）</p><p>（4）node.previousElementSibling：返回上一个兄弟元素节点，没有则返回null（ie9以上才支持）</p><p>5.创建节点（元素节点）</p><p>document.creatElement(‘tagName’)</p><p>6.添加节点：</p><p>（1）node.appendChild(child)：在父节点的子节点后面添加</p><p>（2）onde.insertBefor(child, ‘指定元素’)：将一个节点添加到父节点的指定子节点前面</p><p>注意：先创建节点，再添加节点。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang&#x3D;&quot;en&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset&#x3D;&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;meta name&#x3D;&quot;viewport&quot; content&#x3D;&quot;width&#x3D;device-width, initial-scale&#x3D;1.0&quot;&gt;</span><br><span class="line">    &lt;title&gt;创建和添加节点&lt;&#x2F;title&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;ul&gt;</span><br><span class="line">        &lt;li&gt;123&lt;&#x2F;li&gt;</span><br><span class="line">    &lt;&#x2F;ul&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        &#x2F;&#x2F;先创建再添加</span><br><span class="line">        &#x2F;&#x2F;1.创建元素节点</span><br><span class="line">        var li &#x3D; document.createElement(&#39;li&#39;);</span><br><span class="line">        &#x2F;&#x2F;2.添加节点 node.appendChild(child) node:父级  child：子级   在后面追加元素 类似数组中的push</span><br><span class="line">        var ul &#x3D; document.querySelector(&#39;ul&#39;);</span><br><span class="line">        ul.appendChild(li)</span><br><span class="line">        &#x2F;&#x2F;3.添加节点 node.insertBefore(child, 指定元素)；</span><br><span class="line">        var lili &#x3D; document.createElement(&#39;li&#39;);</span><br><span class="line">        ul.insertBefore(lili, ul.children[0]);</span><br><span class="line">    &lt;&#x2F;script&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure><p>7.删除节点：</p><p>node.removeChild(child)：删除一个子节点，返回删除的子节点</p><p>注意：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;a href&#x3D;&quot;javascript:;&quot;&gt;&lt;&#x2F;a&gt;&#x2F;&#x2F;可以阻止连接跳转</span><br><span class="line">&lt;a href&#x3D;&quot;javascript:void();&quot;&gt;&lt;&#x2F;a&gt;&#x2F;&#x2F;可以阻止连接跳转</span><br></pre></td></tr></table></figure><p>8.克隆节点</p><p>node.cloneNode()</p><p>注意：</p><p>（1）括号里的参数为空或为false，则是浅拷贝，只能克隆节点本身，不能克隆里面的子节点（内容、元素等）</p><p>（2）括号里的参数为true，则是深拷贝，会克隆节点本身以及里面的所有子节点</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang&#x3D;&quot;en&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset&#x3D;&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;meta name&#x3D;&quot;viewport&quot; content&#x3D;&quot;width&#x3D;device-width, initial-scale&#x3D;1.0&quot;&gt;</span><br><span class="line">    &lt;title&gt;节点操作之克隆节点&lt;&#x2F;title&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;ul&gt;</span><br><span class="line">        &lt;li&gt;111&lt;&#x2F;li&gt;</span><br><span class="line">        &lt;li&gt;22&lt;&#x2F;li&gt;</span><br><span class="line">        &lt;li&gt;3&lt;&#x2F;li&gt;</span><br><span class="line">    &lt;&#x2F;ul&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        var ul &#x3D; document.querySelector(&#39;ul&#39;);</span><br><span class="line">        &#x2F;&#x2F;1.node.cloneNode(); 括号为空或false 浅拷贝 只复制标签不复制里面的内容</span><br><span class="line">        &#x2F;&#x2F;2.node.cloneNode(true); 括号为true 深拷贝 复制标签里面的内容</span><br><span class="line">        var lili &#x3D; ul.children[0].cloneNode(true);</span><br><span class="line">        ul.appendChild(lili);</span><br><span class="line">    &lt;&#x2F;script&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure><h3 id="记住一种表格结构："><a href="#记住一种表格结构：" class="headerlink" title="记住一种表格结构："></a>记住一种表格结构：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;table&gt;</span><br><span class="line">&lt;thead&gt;</span><br><span class="line">&lt;tr&gt;</span><br><span class="line">&lt;th&gt;&lt;&#x2F;th&gt;</span><br><span class="line">&lt;th&gt;&lt;&#x2F;th&gt;</span><br><span class="line">&lt;&#x2F;tr&gt;</span><br><span class="line">&lt;&#x2F;thead&gt;</span><br><span class="line">&lt;tbody&gt;</span><br><span class="line">&lt;tr&gt;</span><br><span class="line">&lt;td&gt;&lt;&#x2F;td&gt;</span><br><span class="line">&lt;td&gt;&lt;&#x2F;td&gt;</span><br><span class="line">&lt;&#x2F;tr&gt;</span><br><span class="line">&lt;&#x2F;tbody&gt;</span><br><span class="line">&lt;&#x2F;table&gt;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\js\APlayer.min.js&quot; class=&quot;aplayer-se
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>今日小结19</title>
    <link href="https://hgq169168.github.io/2020/08/16/%E4%BB%8A%E6%97%A5%E5%B0%8F%E7%BB%9319/"/>
    <id>https://hgq169168.github.io/2020/08/16/%E4%BB%8A%E6%97%A5%E5%B0%8F%E7%BB%9319/</id>
    <published>2020-08-16T13:51:08.000Z</published>
    <updated>2020-08-17T14:43:52.593Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><h2 id="今天复习Web-APIs啦"><a href="#今天复习Web-APIs啦" class="headerlink" title="今天复习Web APIs啦"></a><center>今天复习Web APIs啦</center></h2><h3 id="DOM树"><a href="#DOM树" class="headerlink" title="DOM树"></a>DOM树</h3><p>1.文档：一个页面就是一个文档，即document</p><p>2.元素：页面的所有标签，即element</p><p>3.节点：页面中的所有内容（标签、属性、文本、注释等），即node</p><h3 id="获取页面元素"><a href="#获取页面元素" class="headerlink" title="获取页面元素"></a>获取页面元素</h3><p>1.getElementById()：根据ID获取，有则返回元素对象，没有则返回null</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang&#x3D;&quot;en&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset&#x3D;&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;meta name&#x3D;&quot;viewport&quot; content&#x3D;&quot;width&#x3D;device-width, initial-scale&#x3D;1.0&quot;&gt;</span><br><span class="line">    &lt;title&gt;getElementById()获取元素&lt;&#x2F;title&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;div id&#x3D;&quot;time&quot;&gt;2020-07-16&lt;&#x2F;div&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        &#x2F;&#x2F;参数id是大小敏感的字符串</span><br><span class="line">        &#x2F;&#x2F;返回的是一个元素对象 object</span><br><span class="line">        var timer &#x3D; document.getElementById(&#39;time&#39;);</span><br><span class="line">        console.log(timer);</span><br><span class="line">        console.log(typeof timer);&#x2F;&#x2F;object</span><br><span class="line">        &#x2F;&#x2F;console.dir() 打印我们返回的元素对象 更好的查看里面的属性和方法</span><br><span class="line">        console.dir(timer);</span><br><span class="line">    &lt;&#x2F;script&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure><p>2.getElementByTagName()：根据标签名获取，有则返回元素对象集合（伪数组形式），没有则返回一个空的伪数组，有一个标签返回的依旧元素对象（伪数组形式）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang&#x3D;&quot;en&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset&#x3D;&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;meta name&#x3D;&quot;viewport&quot; content&#x3D;&quot;width&#x3D;device-width, initial-scale&#x3D;1.0&quot;&gt;</span><br><span class="line">    &lt;title&gt;getElementsByTagName()获取某标签元素&lt;&#x2F;title&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;ul&gt;</span><br><span class="line">        &lt;li&gt;知否知否，应是绿肥红瘦1&lt;&#x2F;li&gt;</span><br><span class="line">        &lt;li&gt;知否知否，应是绿肥红瘦2&lt;&#x2F;li&gt;</span><br><span class="line">        &lt;li&gt;知否知否，应是绿肥红瘦3&lt;&#x2F;li&gt;</span><br><span class="line">        &lt;li&gt;知否知否，应是绿肥红瘦4&lt;&#x2F;li&gt;</span><br><span class="line">        &lt;li&gt;知否知否，应是绿肥红瘦5&lt;&#x2F;li&gt;</span><br><span class="line">    &lt;&#x2F;ul&gt;</span><br><span class="line">    &lt;ol id&#x3D;&#39;hh&#39;&gt;</span><br><span class="line">        &lt;li&gt;世界那么大，我想去走走1&lt;&#x2F;li&gt;</span><br><span class="line">        &lt;li&gt;世界那么大，我想去走走2&lt;&#x2F;li&gt;</span><br><span class="line">        &lt;li&gt;世界那么大，我想去走走3&lt;&#x2F;li&gt;</span><br><span class="line">        &lt;li&gt;世界那么大，我想去走走4&lt;&#x2F;li&gt;</span><br><span class="line">        &lt;li&gt;世界那么大，我想去走走5&lt;&#x2F;li&gt;</span><br><span class="line">    &lt;&#x2F;ol&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        &#x2F;&#x2F;1.返回的是 获取过来元素对象的集合 以伪数组的形式存储</span><br><span class="line">        var lis &#x3D; document.getElementsByTagName(&#39;li&#39;);  &#x2F;&#x2F;doucument 获取页面中所有的li</span><br><span class="line">        console.log(lis);</span><br><span class="line">        console.log(lis[0]);</span><br><span class="line">        &#x2F;&#x2F;2.通过遍历依次打印元素</span><br><span class="line">        for (i &#x3D; 0; i &lt; lis.length; i++) &#123;</span><br><span class="line">            console.log(lis[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        &#x2F;&#x2F;3.如果只有1个li 返回的还是一个伪数组</span><br><span class="line">        &#x2F;&#x2F;4.如果没有li 返回一个空的伪数组</span><br><span class="line">        &#x2F;&#x2F;5.获取ol里面的li element.getElementsByTagName(&#39;标签名&#39;)</span><br><span class="line">        var ol &#x3D; document.getElementsByTagName(&#39;ol&#39;);  &#x2F;&#x2F;返回一个伪数组不能作为父元素  需要变成ol[0]</span><br><span class="line">        console.log(ol[0].getElementsByTagName(&#39;li&#39;));</span><br><span class="line">        &#x2F;&#x2F;6.通过id获取父级标签，在通过element.getElementsByTagName(&#39;标签名&#39;)  更常用</span><br><span class="line">        var ol &#x3D; document.getElementById(&#39;hh&#39;);  &#x2F;&#x2F;返回一个元素对象，可以作为父元素</span><br><span class="line">        console.log(ol.getElementsByTagName(&#39;li&#39;));</span><br><span class="line">        var div &#x3D; document.getElementsByTagName(&#39;div&#39;);</span><br><span class="line">        console.log(div);&#x2F;&#x2F;空的伪数组形式</span><br><span class="line"></span><br><span class="line">    &lt;&#x2F;script&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure><p>3.getElementByClassName()：根据类名获取（H5新增的），有则返回元素对象集合（伪数组形式），没有则返回一个空的伪数组，有一个标签返回的依旧元素对象（伪数组形式）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang&#x3D;&quot;en&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset&#x3D;&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;meta name&#x3D;&quot;viewport&quot; content&#x3D;&quot;width&#x3D;device-width, initial-scale&#x3D;1.0&quot;&gt;</span><br><span class="line">    &lt;title&gt;H5新增获取元素的方式&lt;&#x2F;title&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;div class&#x3D;&quot;box&quot;&gt;hello world1&lt;&#x2F;div&gt;</span><br><span class="line">    &lt;div class&#x3D;&quot;box&quot;&gt;hello world2&lt;&#x2F;div&gt;</span><br><span class="line">    &lt;div&gt;hello world3&lt;&#x2F;div&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        &#x2F;&#x2F;1.getElementsByClassName 根据类名获取某些元素集合 伪数组</span><br><span class="line">        var boxs &#x3D; document.getElementsByClassName(&#39;box&#39;);</span><br><span class="line">        console.log(boxs); &#x2F;&#x2F;HTMLCollection(2)[div.box, div.box]  &#x2F;&#x2F;伪数组</span><br><span class="line">        var boxs1 &#x3D; document.getElementsByClassName(&#39;box1&#39;);&#x2F;&#x2F;没有，则返回空的伪数组</span><br><span class="line">        console.log(boxs)</span><br><span class="line">    &lt;&#x2F;script&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure><p>4.querySelector()：返回指定选择器的第一个元素对象</p><p>（1）类名前要加’.’;</p><p>（2）id名前要加’#’;</p><p>（3）标签名直接写</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang&#x3D;&quot;en&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset&#x3D;&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;meta name&#x3D;&quot;viewport&quot; content&#x3D;&quot;width&#x3D;device-width, initial-scale&#x3D;1.0&quot;&gt;</span><br><span class="line">    &lt;title&gt;H5新增获取元素的方式&lt;&#x2F;title&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;div class&#x3D;&quot;box&quot;&gt;hello world1&lt;&#x2F;div&gt;</span><br><span class="line">    &lt;div class&#x3D;&quot;box&quot;&gt;hello world2&lt;&#x2F;div&gt;</span><br><span class="line">    &lt;div&gt;hello world3&lt;&#x2F;div&gt;</span><br><span class="line">    &lt;div id&#x3D;&quot;nav&quot;&gt;</span><br><span class="line">        &lt;ul&gt;</span><br><span class="line">            &lt;li&gt;你好&lt;&#x2F;li&gt;</span><br><span class="line">            &lt;li&gt;你好2&lt;&#x2F;li&gt;</span><br><span class="line">        &lt;&#x2F;ul&gt;</span><br><span class="line">    &lt;&#x2F;div&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        &#x2F;&#x2F;2. querSelector 返回指定选择器的第一个元素对象 切记 里面的选择器需要加符号</span><br><span class="line">        var firstBox &#x3D; document.querySelector(&#39;.box&#39;);  &#x2F;&#x2F;.box  表示类名选择器</span><br><span class="line">        console.log(firstBox);</span><br><span class="line">        var nav &#x3D; document.querySelector(&#39;#nav&#39;);  &#x2F;&#x2F; #nav 表示id选择器</span><br><span class="line">        console.log(nav);</span><br><span class="line">        var li &#x3D; document.querySelector(&#39;li&#39;); &#x2F;&#x2F; 标签选择器</span><br><span class="line">        console.log(li);</span><br><span class="line">    &lt;&#x2F;script&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure><p>5.querySelectorAll()：返回指定选择器的所有元素对象集合（伪数组形式）</p><p>（1）类名前要加’.’;</p><p>（2）id名前要加’#’;</p><p>（3）标签名直接写</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang&#x3D;&quot;en&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset&#x3D;&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;meta name&#x3D;&quot;viewport&quot; content&#x3D;&quot;width&#x3D;device-width, initial-scale&#x3D;1.0&quot;&gt;</span><br><span class="line">    &lt;title&gt;H5新增获取元素的方式&lt;&#x2F;title&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;div class&#x3D;&quot;box&quot;&gt;hello world1&lt;&#x2F;div&gt;</span><br><span class="line">    &lt;div class&#x3D;&quot;box&quot;&gt;hello world2&lt;&#x2F;div&gt;</span><br><span class="line">    &lt;div&gt;hello world3&lt;&#x2F;div&gt;</span><br><span class="line">    &lt;div id&#x3D;&quot;nav&quot;&gt;</span><br><span class="line">        &lt;ul&gt;</span><br><span class="line">            &lt;li&gt;你好&lt;&#x2F;li&gt;</span><br><span class="line">            &lt;li&gt;你好2&lt;&#x2F;li&gt;</span><br><span class="line">        &lt;&#x2F;ul&gt;</span><br><span class="line">    &lt;&#x2F;div&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        &#x2F;&#x2F;3. querySelectorAll() 返回指定选择器的所有元素对象集合 伪数组</span><br><span class="line">        var allBox &#x3D; document.querySelectorAll(&#39;.box&#39;);</span><br><span class="line">        console.log(allBox);  &#x2F;&#x2F; NodeList(2) [div.box, div.box]  伪数组</span><br><span class="line">        console.log(allBox[1]);&#x2F;&#x2F;&lt;div class&#x3D;&quot;box&quot;&gt;hello world2&lt;&#x2F;div&gt;</span><br><span class="line">        var lis &#x3D; document.querySelectorAll(&#39;li&#39;)</span><br><span class="line">        console.log(lis); &#x2F;&#x2F; NodeList(2) [li, li] 伪数组</span><br><span class="line">        console.log(lis[0])&#x2F;&#x2F;&lt;li&gt;你好&lt;&#x2F;li&gt;</span><br><span class="line">    &lt;&#x2F;script&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure><p>6.获取特殊元素（body、html）</p><p>（1）获取body元素：document.body;</p><p>（2）获取html元素：document.documentElemnt;</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang&#x3D;&quot;en&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset&#x3D;&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;meta name&#x3D;&quot;viewport&quot; content&#x3D;&quot;width&#x3D;device-width, initial-scale&#x3D;1.0&quot;&gt;</span><br><span class="line">    &lt;title&gt;获取html、body元素&lt;&#x2F;title&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        &#x2F;&#x2F;1. 获取body元素</span><br><span class="line">        var bodyEle &#x3D; document.body;</span><br><span class="line">        console.log(bodyEle); &#x2F;&#x2F;返回 body元素对象</span><br><span class="line">        console.dir(bodyEle);</span><br><span class="line"></span><br><span class="line">        &#x2F;&#x2F;2. 获取html元素</span><br><span class="line">        var htmlEle &#x3D; document.documentElement;</span><br><span class="line">        console.log(htmlEle); &#x2F;&#x2F; 返回 html元素对象</span><br><span class="line">    &lt;&#x2F;script&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure><h3 id="事件基础"><a href="#事件基础" class="headerlink" title="事件基础"></a>事件基础</h3><p>1.事件三要素：事件源、事件类型、事件处理程序</p><p>（1）事件源：事件被触发的对象</p><p>（2）事件类型：如何触发，比如鼠标点击、键盘按下等</p><p>（3）事件处理程序：通过一个函数赋值的方式来完成</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang&#x3D;&quot;en&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset&#x3D;&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;meta name&#x3D;&quot;viewport&quot; content&#x3D;&quot;width&#x3D;device-width, initial-scale&#x3D;1.0&quot;&gt;</span><br><span class="line">    &lt;title&gt;事件三要素&lt;&#x2F;title&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;button id&#x3D;&quot;btn&quot;&gt;唐伯虎&lt;&#x2F;button&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        &#x2F;&#x2F;点击一个按钮， 弹出对话框</span><br><span class="line">        &#x2F;&#x2F;1. 事件有三个部分组成 事件源 事件类型 事件处理程序  </span><br><span class="line">        &#x2F;&#x2F;(1) 事件源 事件被触发的对象 谁 按钮</span><br><span class="line">        var btn &#x3D; document.getElementById(&#39;btn&#39;);</span><br><span class="line">        &#x2F;&#x2F;(2) 事件类型  如何触发 什么事件 比如鼠标点击（onlick) 还是鼠标经过  还是键盘按下</span><br><span class="line">        &#x2F;&#x2F;（3）事件处理程序 通过一个函数赋值的方式</span><br><span class="line">        btn.onclick &#x3D; function () &#123;</span><br><span class="line">            alert(&#39;点秋香&#39;);</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;&#x2F;script&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure><p>2.执行事件三步骤：</p><p>（1）获取始建于</p><p>（2）注册事件（绑定事件）</p><p>（3）添加使劲按处理程序（采取函数赋值的方式）</p><p>3常用鼠标事件</p><p>（1）onclick：鼠标左键点击触发</p><p>（2）onmouseover：鼠标经过触发</p><p>（3）onmouseout：鼠标离开触发</p><p>（4）onfocus：获得鼠标焦点触发</p><p>（5）onblur：失去鼠标焦点触发</p><p>（6）onmousemove：鼠标移动触发</p><p>（7）onmouseup：鼠标弹起触发</p><p>（8）onmousedown：鼠标按下触发</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\js\APlayer.min.js&quot; class=&quot;aplayer-se
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>今日小结18</title>
    <link href="https://hgq169168.github.io/2020/08/15/%E4%BB%8A%E6%97%A5%E5%B0%8F%E7%BB%9318/"/>
    <id>https://hgq169168.github.io/2020/08/15/%E4%BB%8A%E6%97%A5%E5%B0%8F%E7%BB%9318/</id>
    <published>2020-08-15T08:55:20.000Z</published>
    <updated>2020-08-16T14:44:11.841Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><p>##<center>今天依旧是复习js基础（怪我太懒了）</center></p><h3 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h3><p>1.创建方式：</p><p>（1）利用new创建数组</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">var arr &#x3D; new Array();&#x2F;&#x2F;创建一个空的数组</span><br><span class="line">var arr1 &#x3D; new Array(1, 2, &#39;dd&#39;);&#x2F;&#x2F;[1, 2, &#39;dd&#39;]</span><br></pre></td></tr></table></figure><p>（2）利用数组字面量创建数组</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">var arr &#x3D; [];</span><br><span class="line">var arr1 &#x3D; [1, 2, &#39;dd&#39;];</span><br></pre></td></tr></table></figure><p>2.获取数组元素（通过下标）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">var arr &#x3D; [1, 2, 4, 5];</span><br><span class="line">console.log(arr[0]);&#x2F;&#x2F;1</span><br><span class="line">console.log(arr[4]);&#x2F;&#x2F;undefined  没有则返回undefined</span><br></pre></td></tr></table></figure><p>3.获取数组长度（arr.length)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">var arr &#x3D; [1, 2, 4];</span><br><span class="line">console.log(arr.length);&#x2F;&#x2F;3</span><br></pre></td></tr></table></figure><p>4.新增数组元素</p><p>（1）通过修改length来增加数组元素</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">var arr &#x3D; [1, 2, 4];</span><br><span class="line">arr.length &#x3D; 5;</span><br><span class="line">console.log(arr);&#x2F;&#x2F;[1, 2, 4, undefined, undefined]</span><br></pre></td></tr></table></figure><p>（2）通过修改数组索引号追加数组元素</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">var arr &#x3D; [1, 2, 4];</span><br><span class="line">arr[3] &#x3D; 6; &#x2F;&#x2F;追加</span><br><span class="line">arr[4] &#x3D; 66; &#x2F;&#x2F;追加</span><br><span class="line">arr[0] &#x3D; 666; &#x2F;&#x2F;替换</span><br><span class="line">console.log(arr); &#x2F;&#x2F;[666, 2, 4, 6, 66]</span><br></pre></td></tr></table></figure><p>注意：不要轻易给数组名赋值，否证会覆盖掉以前的数据</p><p>冒泡排序案例：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">var arr &#x3D; [6, 7, 3, 2, 4, 1]</span><br><span class="line">for (var i &#x3D; 0; i &lt; arr.length; i++) &#123;</span><br><span class="line">for (var j &#x3D; 0; j &lt; arr.length - i - 1; j++) &#123;</span><br><span class="line">if (arr[j] &gt; arr[j + 1]) &#123;</span><br><span class="line">var temp &#x3D; arr[j];</span><br><span class="line">arr[j] &#x3D; arr[j + 1];</span><br><span class="line">arr[j + 1] &#x3D; temp;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">console.log(arr);&#x2F;&#x2F;[1, 2, 3, 4, 6, 7]</span><br></pre></td></tr></table></figure><h3 id="函数使用分为两步：声明函数和调用函数"><a href="#函数使用分为两步：声明函数和调用函数" class="headerlink" title="函数使用分为两步：声明函数和调用函数"></a>函数使用分为两步：声明函数和调用函数</h3><p>1.声明函数： function 函数名() {函数体}  //括号里可以写形参</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">function sayHi() &#123;</span><br><span class="line">console.log(&#39;Hi~&#39;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2.调用函数：函数名();  //括号里可以写实参</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sayHi();</span><br></pre></td></tr></table></figure><p>例子：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">function cook(aru) &#123;</span><br><span class="line">console.log(aru);</span><br><span class="line">&#125;</span><br><span class="line">cook(&#39;暴炒空心菜&#39;);</span><br></pre></td></tr></table></figure><p>注意：如果实参个数多以形参个数，会取到形参的个数参与运算；如果实参个数少于形参个数，多余的形参个数为undefined。（如果形参参与加法运算，就会返回NaN)</p><p>3.形参的返回值格式：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;function 函数名()&#123;</span><br><span class="line">&#x2F;&#x2F;return 需要返回的结果;</span><br><span class="line">&#x2F;&#x2F;&#125;</span><br><span class="line">function cook(aru) &#123;</span><br><span class="line">retun aru;</span><br><span class="line">console.log(&#39;你好&#39;); &#x2F;&#x2F;不执行</span><br><span class="line">&#125;</span><br><span class="line">console.log(cook(&#39;暴炒空心菜&#39;));</span><br></pre></td></tr></table></figure><p>注意：</p><p>（1）return后面的语句不会再执行，起到终止函数的功能</p><p>（2）return只能返回一个值。如果有逗号隔开，以最后一个为准</p><p>（3）函数如果没有return，则返回undefined；</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">function fn(a, b) &#123;</span><br><span class="line">var num &#x3D; 0;</span><br><span class="line">num &#x3D; a + b;</span><br><span class="line">console.log(num);</span><br><span class="line">&#125;</span><br><span class="line">fn(3, 4);&#x2F;&#x2F;7</span><br><span class="line">console.log(fn(3, 4));&#x2F;&#x2F;undefined</span><br></pre></td></tr></table></figure><p>4.函数表达式（匿名函数）：var 变量 = function() {}</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">var fun &#x3D; function() &#123;</span><br><span class="line">console.log(Hi~);</span><br><span class="line">&#125;</span><br><span class="line">fun();&#x2F;&#x2F;fun是变量名，不是函数名</span><br></pre></td></tr></table></figure><p>5.arguments的使用（只用函数才有）：所有的函数都内置了一个arguments对象，其存储了传递过来的所有实参。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">function fn() &#123;</span><br><span class="line">console.log(arguments); &#x2F;&#x2F;伪数组[1, 2, 4]</span><br><span class="line">&#125;</span><br><span class="line">fn(1, 2, 4);</span><br></pre></td></tr></table></figure><p>arguments展现形式是一个伪数组，因此可以遍历。</p><p>伪数组特点：</p><p>（1）具有length属性</p><p>（2）按索引方式存储数据</p><p>（3）不具有push、pop等方法</p><p>纳尼，写到这，才发现，上面的内容，昨天好像写过了！！！！！瞬间，，，崩溃<del>~</del>·        啊啊啊！</p><p>老实人，继续写<del>~</del></p><h3 id="对象：由属性和方法组成"><a href="#对象：由属性和方法组成" class="headerlink" title="对象：由属性和方法组成"></a>对象：由属性和方法组成</h3><p>属性：事物的特征</p><p>方法：事物的行为</p><p>创建对象（object）的三种方式：利用字面量、利用new Objec、利用构造函数</p><p>1.利用对象字面量创建对象：或括号{}</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">var obj &#x3D; &#123;&#125;;&#x2F;&#x2F;创建一个空对象</span><br><span class="line">var obj1 &#x3D; &#123;</span><br><span class="line">uname: &#39;pink&#39;,</span><br><span class="line">age: 18,</span><br><span class="line">sex: &#39;男&#39;,</span><br><span class="line">sayHi: function() &#123;  &#x2F;&#x2F;括号里可以有形参</span><br><span class="line">console.log(&#39;Hi~&#39;);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2.使用对象：</p><p>（1）调用对象的属性：对象名.属性名  或  对象名[‘属性名’]</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">console.log(obj1.unmae);&#x2F;&#x2F;pink</span><br><span class="line">console.log(obj1[&#39;age&#39;]);&#x2F;&#x2F;18</span><br></pre></td></tr></table></figure><p>（2）调用对象的方法：对象名.方法名() </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">console.log(obj1.sayHi()); &#x2F;&#x2F;括号里可以有实参参</span><br></pre></td></tr></table></figure><p>3.利用new Object 创建对象：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">var obj &#x3D; new Object();&#x2F;&#x2F;创建一个空对象</span><br><span class="line">obj.uname &#x3D; &#39;pink&#39;;</span><br><span class="line">obj.age &#x3D; 18;</span><br><span class="line">obj.sex &#x3D; &#39;男&#39;;</span><br><span class="line">obj.sayHi &#x3D; function() &#123;</span><br><span class="line">console.log(Hi~);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>4.利用构造函数创建对象</p><p>语法格式：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">function 构造函数名() &#123;</span><br><span class="line">this.属性 &#x3D; 值;</span><br><span class="line">this.方法 &#x3D; function() &#123;&#125;</span><br><span class="line">&#125;</span><br><span class="line">new 构造函数名();</span><br></pre></td></tr></table></figure><p>例子：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">function Fn(uname, age, sex) &#123;</span><br><span class="line">this.name &#x3D; uname;</span><br><span class="line">this.age &#x3D; age;</span><br><span class="line">this.sex &#x3D; sex;</span><br><span class="line">&#125;</span><br><span class="line">var obj &#x3D; new Fn(&#39;pink&#39;, 18, &#39;男&#39;); &#x2F;&#x2F;返回的是一个对象</span><br><span class="line">console.log(obj);</span><br></pre></td></tr></table></figure><p>注意：</p><p>（1）构造函数名字首字母要大写</p><p>（2）构造函数不需要return就可以返回结果</p><p>（3）调用构造函数必须使用new</p><p>（4）属性和方法前必须加this</p><p>5.构造函数函数和对象：</p><p>构造函数泛指某一大类，对象是特指，是一个具体的事件；利用构造函数创建对象的过程也称为对象的实例化</p><p>对象是无序的：用for…in语句可以对数组或对象的属性和方法进行循环操作</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">var obj &#x3D; &#123;</span><br><span class="line">name: &#39;pink&#39;,</span><br><span class="line">age: 18,</span><br><span class="line">sex: &#39;男&#39;</span><br><span class="line">&#125;</span><br><span class="line">for (var k in obj) &#123;</span><br><span class="line">console.log(k);  &#x2F;&#x2F;得到属性名</span><br><span class="line">console.log(obj[k])&#x2F;&#x2F;得到属性值</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>6.变量和属性的区别：</p><p>（1）变量单独声明并赋值，使用时直接写变量名，单独存在的</p><p>（2）属性在对象里面的，不需要声明，使用时必须是 对象.属性   或    对象[’属性‘]</p><p>7.函数与方法：<br>相同点：都是实现某种功能</p><p>不同点：</p><p>（1）函数是单独声明和单独存在的，调用时是  函数名()</p><p>（2）方法在对象里面，调用时是 对象.方法名()</p><h3 id="Math内置对象（具有隐式转换特效）"><a href="#Math内置对象（具有隐式转换特效）" class="headerlink" title="Math内置对象（具有隐式转换特效）"></a>Math内置对象（具有隐式转换特效）</h3><p>1.Math.PI：圆周率</p><p>2.Math.max()：求最大值</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">console.log(Math.max(1, 99, 3));&#x2F;&#x2F;99</span><br><span class="line">console.log(Math.max());&#x2F;&#x2F;-Infinty</span><br><span class="line">console.log(Math.max(1, 4, &#39;dd&#39;));&#x2F;&#x2F;NaN</span><br></pre></td></tr></table></figure><p>3.Math.floor()：向下取整</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">console.log(Math.floor(4.7))&#x2F;&#x2F;4</span><br></pre></td></tr></table></figure><p>4.Math.ceil()：向上取整</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">console.log(Math.ceil(4.2))&#x2F;&#x2F;4</span><br></pre></td></tr></table></figure><p>5.Math.round()：四舍五入（向大取），注意：.5是特殊的，如-2.5，取值为2</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">console.log(Math.round(4.2));&#x2F;&#x2F;4</span><br><span class="line">console.log(Math.round(4.5));&#x2F;&#x2F;5</span><br><span class="line">console.log(Math.round(-1.3));&#x2F;&#x2F;-1</span><br><span class="line">console.log(Math.round(-1.7));&#x2F;&#x2F;-2</span><br><span class="line">console.log(Math.round(-1.5));&#x2F;&#x2F;-1</span><br></pre></td></tr></table></figure><p>6.Math.abs()：取绝对值</p><p>7.Math.min()：最小值</p><p>8.Math.random()：返回一个随机小数，范围[0, 1)</p><p>9.得到两个数之间的随机整数，并且包含这两整数：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">function getRandom( min, max) &#123;</span><br><span class="line">return Math.floor(Math.random() * (max - min + 1)) + min;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="日期对象：是一个构造函数，要使用new来调用创建日期对象"><a href="#日期对象：是一个构造函数，要使用new来调用创建日期对象" class="headerlink" title="日期对象：是一个构造函数，要使用new来调用创建日期对象"></a>日期对象：是一个构造函数，要使用new来调用创建日期对象</h3><p>1.var date = new Date();  没有参数，返回当前系统的当前时间</p><p>2.常用参数写法：</p><p>（1）数字型：2020， 08， 14</p><p>（2）字符型：’2020-08-14 16:42:00’</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">var date1 &#x3D; new Date(2020, 08, 14);</span><br><span class="line">console.log(date1);&#x2F;&#x2F;返回的9月的英文简写，而不是8月。因为月份是按（0~11）来排序的</span><br><span class="line">var date2 &#x3D; new Date(&#39;2020-08-14 16:47:00&#39;);</span><br><span class="line">console.log(date2)&#x2F;&#x2F;正常返回</span><br></pre></td></tr></table></figure><p>3.方法名</p><p>（1）getFullYear() ：获取年份</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">var date2 &#x3D; new Date(&#39;2020-08-14 16:47:00&#39;);</span><br><span class="line">console.log(date2.getFullYear());  &#x2F;&#x2F;2020</span><br></pre></td></tr></table></figure><p>（2）getMonth()：获取月份（0~11）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">var date1 &#x3D; new Date(2020, 08, 14);</span><br><span class="line">console.log(date1.getMouth());&#x2F;&#x2F;9 （参数如果用数字型，要注意）</span><br></pre></td></tr></table></figure><p>（3）getDate()：获取当天日期</p><p>（4）getDate()：获取星期几（0~6），星期天对应0，星期六对于6</p><p>（5）getHours()：获取当前的小时数</p><p>（6）getMinutes()：获取当前的分钟数</p><p>（7）getSections()：获取当前的秒数</p><p>（8）获取距离1970年的总毫秒数：</p><p>方法1：valueOf()或getTime()</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">var date &#x3D; new Date();</span><br><span class="line">console.log(date.valueOf());&#x2F;&#x2F;当前时间距离1970年的总毫秒数</span><br><span class="line">console.log(date.valueOf(&#39;2020-10-01&#39;));&#x2F;&#x2F;2020-10-01距离1970年的总毫秒数</span><br></pre></td></tr></table></figure><p>方法2：+new Date()返回的是总毫秒数</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">var date1 &#x3D; +new Date();</span><br><span class="line">console.log(date1);</span><br></pre></td></tr></table></figure><p>方法3：H5新增的获取总毫秒数方法</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">console.log(Date.now());</span><br></pre></td></tr></table></figure><h3 id="数组对象"><a href="#数组对象" class="headerlink" title="数组对象"></a>数组对象</h3><p>1.创建数组的两种方式：字面量和利用new Array()</p><p>2.检测是否为数组：</p><p>（1）instanceof运算符：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">var arr1 &#x3D; [1, 2];</span><br><span class="line">var obj &#x3D; &#123;&#125;;</span><br><span class="line">console.log(arr instanceof Array);&#x2F;&#x2F;返回true，不是则返回false</span><br><span class="line">console.log(obj instanceof Array);&#x2F;&#x2F;false</span><br><span class="line">console.log(obj instanceof Object);&#x2F;&#x2F;true</span><br></pre></td></tr></table></figure><p>（2）Array.isArray(参数)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">var arr &#x3D; [1, 2];</span><br><span class="line">var obj &#x3D; &#123;&#125;;</span><br><span class="line">console.log(Array.isArray(arr));&#x2F;&#x2F;true</span><br><span class="line">console.log(Array.isArray(obj));&#x2F;&#x2F;false</span><br></pre></td></tr></table></figure><p>3.添加删除数组元素的方法</p><p>（1）push(参数1…)：末尾添加1个或多个元素，返回新的数组长度值</p><p>（2）pop()：删除数组最后一个元素，返回删除的元素</p><p>（3）unshift(参数1…)：开头添加1个或多个元素，返回新的数组长度值</p><p>（4）shift()：删除数组第一个元素，返回删除的元素</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">var arr &#x3D; [1, 2, 3];</span><br><span class="line">console.log(arr.push(66));&#x2F;&#x2F;返回4</span><br><span class="line">console.log(arr);&#x2F;&#x2F;[1, 2, 3, 66]</span><br><span class="line">var arr1 &#x3D; [1, 2, 3, 5];</span><br><span class="line">conosole.log(arr1.pop());&#x2F;&#x2F;返回5</span><br><span class="line">console.log(arr);&#x2F;&#x2F;[1, 2, 3]</span><br></pre></td></tr></table></figure><p>4.数组排列</p><p>（1）reverse()：颠倒数组中元素的顺序</p><p>（2）sort()：对数组进行排序，注意：只适合个位数排序</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">var arr &#x3D; [1, 5, 6, 2, 4];</span><br><span class="line">arr.sort();</span><br><span class="line">console.log(arr);&#x2F;&#x2F;[1, 2, 4, 5, 6]</span><br><span class="line">var arr1 &#x3D; [1, 22, 4, 34, 6, 7];</span><br><span class="line">arr1.sort();</span><br><span class="line">console.log(arr1);&#x2F;&#x2F;[1, 22, 34, 4, 6, 7]，只比较第一个数字</span><br></pre></td></tr></table></figure><p>要实现正确的排序，需要如下操作：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">var arr1 &#x3D; [1, 22, 4, 34, 6, 7];</span><br><span class="line">arr1.sort(function(a, b)) &#123;</span><br><span class="line">&#x2F;&#x2F;return a-b;&#x2F;&#x2F;升序 [1, 4, 6, 7, 22, 34]</span><br><span class="line">retrun b-a;&#x2F;&#x2F;降序 [34, 22, 7, 6, 4, 1]</span><br><span class="line">&#125;</span><br><span class="line">console.log(arr1);</span><br></pre></td></tr></table></figure><p>5.数组索引方法</p><p>（1）indexOf(‘要查找的元素’[, 起始位置])：查找给定元素的第一个索引，存在则返回索引号，不存在返回-1</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">var arr &#x3D; [&#39;red&#39;, &#39;green&#39;, &#39;pink&#39;, &#39;blue&#39;, &#39;pink&#39;];</span><br><span class="line">console.log(arr.indexOf(&#39;pink&#39;));&#x2F;&#x2F;2</span><br><span class="line">console.log(arr.indexOf(&#39;pink&#39;, 3));&#x2F;&#x2F;4,从索引号为3的位置开始查找</span><br><span class="line">console.log(arr.indexOf(&#39;yellow&#39;));&#x2F;&#x2F;-1</span><br></pre></td></tr></table></figure><p>（2）lastIndexOf(‘要查找的元素’[, 起始位置])：查找给定元素的最后一个索引（从后面往前查找），存在则返回索引号，不存则返回-1</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">var arr &#x3D; [&#39;red&#39;, &#39;green&#39;, &#39;pink&#39;, &#39;blue&#39;, &#39;pink&#39;];</span><br><span class="line">console.log(arr.lastIndexOf(&#39;pink&#39;));&#x2F;&#x2F;4</span><br><span class="line">console.log(arr.lastIndexOf(&#39;yellow&#39;));&#x2F;&#x2F;-1</span><br></pre></td></tr></table></figure><p>数组去重案例：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">function unique(arr) &#123;</span><br><span class="line">var newArr &#x3D; [];</span><br><span class="line">for (var i &#x3D; 0; i &lt; arr.length; i++) &#123;</span><br><span class="line">if (newArr.indexOf(arr[i]) &#x3D;&#x3D;&#x3D; -1) &#123;</span><br><span class="line">newArr.push(arr[i]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">return newArr;</span><br><span class="line">&#125;</span><br><span class="line">var arr1 &#x3D; [&#39;c&#39;, &#39;d&#39;, &#39;a&#39;, &#39;c&#39;, &#39;a&#39;, &#39;k&#39;, &#39;a&#39;];</span><br><span class="line">console.log(unique(arr1));&#x2F;&#x2F;[&#39;c&#39;, &#39;d&#39;, &#39;a&#39;, &#39;k&#39;]</span><br></pre></td></tr></table></figure><p>6.数组转换为字符串</p><p>（1）soString()：把数组转换为字符串，逗号分隔每一项</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">var arr &#x3D; [&#39;a&#39;, &#39;b&#39;, &#39;c&#39;, &#39;d&#39;];</span><br><span class="line">console.log(arr.toString());&#x2F;&#x2F;a,b,c,d</span><br></pre></td></tr></table></figure><p>（2）join(‘分隔符’)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">var arr &#x3D; [&#39;a&#39;, &#39;b&#39;, &#39;c&#39;, &#39;d&#39;]; </span><br><span class="line">console.log(arr.join());&#x2F;&#x2F;a,b,c,d  没指定分隔符，默认是逗号</span><br><span class="line">console.log(arr.join(&#39;-&#39;));&#x2F;&#x2F;a-b-c-d</span><br></pre></td></tr></table></figure><h3 id="字符串对象"><a href="#字符串对象" class="headerlink" title="字符串对象"></a>字符串对象</h3><p>1.字符串的不可变性：内存里的值不可变，虽然看上去改变了内容，但是其实是地址发生了变化，在内存中开辟了一个新的内容空间</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">var num &#x3D; 1;  </span><br><span class="line">console.log(num);&#x2F;&#x2F;返回1</span><br><span class="line">num &#x3D; 2;&#x2F;&#x2F;与上面的地址不一样</span><br><span class="line">console.log(num);&#x2F;返回2</span><br></pre></td></tr></table></figure><p>注意：字符串的所有方法中，都不会修改字符串本身，操作完成会返回一个新的字符串（地址不一样）</p><p>2.根据字符串返回位置</p><p>（1）indexOf(‘要查找的字符’[,起始位置])</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">var str &#x3D; &#39;改革春风吹满地，春天来了&#39;</span><br><span class="line">console.log(str.indexOf(&#39;春&#39;));&#x2F;&#x2F;2</span><br><span class="line">console.log(str.indexOf(&#39;春&#39;, 3))&#x2F;&#x2F;8</span><br></pre></td></tr></table></figure><p>（2）lastIndexOf(‘要查找的字符’[,起始位置])：从后面往前查找</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">var str &#x3D; &#39;改革春风吹满地，春天来了&#39;</span><br><span class="line">console.log(str.lastIndexOf(&#39;春&#39;));&#x2F;&#x2F;8</span><br><span class="line">console.log(str.lastIndexOf(&#39;春&#39;, 3))&#x2F;&#x2F;2</span><br></pre></td></tr></table></figure><p>查找某字符串出现的位置及次数案例：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">var str &#x3D; &#39;adaoddklsdijgle&#39;;</span><br><span class="line">var index &#x3D; str.indexOf(&#39;a&#39;);&#x2F;&#x2F;查找a字符</span><br><span class="line">var num &#x3D; 0;</span><br><span class="line">while (index !&#x3D;&#x3D; -1) &#123;</span><br><span class="line">console.log(str(index);</span><br><span class="line">num++;</span><br><span class="line">index &#x3D; str.indexOf(&#39;a&#39;, index + 1);</span><br><span class="line">&#125;</span><br><span class="line">console.log(&#39;a出现的次数：&#39; + num);</span><br></pre></td></tr></table></figure><p>3.根据位置返回字符串</p><p>（1）charAt(index)：获取指定位置处的字符串</p><p>（2）charCodeAt(index)：获取指定位置处字符串的ASCII码</p><p>（3）str[index]</p><p>统计出现次数最多字符及次数案例：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">var str &#x3D; &#39;asdfjkdhfklasda&#39;;</span><br><span class="line">var obj &#x3D; &#123;&#125;;</span><br><span class="line">for (i &#x3D; 0; i &lt; str.length; i++) &#123;</span><br><span class="line">var chars &#x3D; str.charAt(i);</span><br><span class="line">if (obj[chars]) &#123;  &#x2F;&#x2F;没有obj[chars],返回undefined</span><br><span class="line">obj[chars]++;</span><br><span class="line">&#125;</span><br><span class="line">else &#123;</span><br><span class="line">obj[chars] &#x3D; 1;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">var max &#x3D; 0;</span><br><span class="line">var ch &#x3D; &#39;&#39;;</span><br><span class="line">for (var k in obj) &#123;  &#x2F;&#x2F;k是属性名，obj[k]是属性值</span><br><span class="line">if (obj[k] &gt; max) &#123;</span><br><span class="line">max &#x3D; obj[k];</span><br><span class="line">ch &#x3D; k;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">console.log(&#39;最多的字符是：&#39; + ch + &#39;有&#39; + max + &#39;个&#39;);</span><br></pre></td></tr></table></figure><p>4.字符串操作方法：</p><p>（1）concat(string1, straing2,….)：连接两个多多个字符串，等效于+</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">var str &#x3D; &#39;red&#39;;</span><br><span class="line">congsole.log(str.concat(&#39;blue&#39;, &#39;yellow&#39;));&#x2F;&#x2F;redblueyellow</span><br></pre></td></tr></table></figure><p>（2）substr(start, length)：截取字符串</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">var str &#x3D; &#39;改革春风吹满地，春天来了&#39;;</span><br><span class="line">console.log(str.substr(2, 2))&#x2F;&#x2F;春风</span><br></pre></td></tr></table></figure><p>（3）slice(start, end)：截取字符串，从start开始到end（不包含end，staet和end为小标）</p><p>（4）substring(start, end)：截取字符串，不允许为负值</p><p>（5）replace(‘被替换的字符串’, ‘替换为的字符串’)：只替换第一个</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">var str &#x3D; &#39;andyandy&#39;;</span><br><span class="line">console.log(str.replace(&#39;a&#39;, &#39;*&#39;));&#x2F;&#x2F;*ndyandy</span><br></pre></td></tr></table></figure><h3 id="简单数据类型与复杂数据类型"><a href="#简单数据类型与复杂数据类型" class="headerlink" title="简单数据类型与复杂数据类型"></a>简单数据类型与复杂数据类型</h3><p>1.简单数据类型（存储的是值本身）包括：string、number、Boolean、undefined、null</p><p>（1）简单数据类型是在栈里面直接开辟一个空间存放值的。</p><p>2.复杂数类型（存储的是地址）：通过new关键字创建的对象，如Object、Array、Date等</p><p>（1）复杂数据类型首先在栈里面存放一个地址（十六进制的），然这个指向堆里的数据（在堆里面存值）</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\js\APlayer.min.js&quot; class=&quot;aplayer-se
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>今日小结17</title>
    <link href="https://hgq169168.github.io/2020/08/14/%E4%BB%8A%E6%97%A5%E5%B0%8F%E7%BB%9317/"/>
    <id>https://hgq169168.github.io/2020/08/14/%E4%BB%8A%E6%97%A5%E5%B0%8F%E7%BB%9317/</id>
    <published>2020-08-14T13:38:47.000Z</published>
    <updated>2020-08-14T15:08:54.545Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><h2 id="今天复习js基础"><a href="#今天复习js基础" class="headerlink" title="今天复习js基础"></a><center>今天复习js基础</center></h2><h3 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h3><p>1.创建方式</p><p>（1）利用new创建数组</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">var arr &#x3D; new Array();&#x2F;&#x2F;创建一个长度为0的空数组</span><br><span class="line">var arr1 &#x3D;  new Array(2);&#x2F;&#x2F;创建一个长度为2新的空数组（包含两个undefined）</span><br><span class="line">var arr2 &#x3D; new Array(1, 2, &#39;dd&#39;);&#x2F;&#x2F;[1, 2, &#39;dd&#39;]</span><br></pre></td></tr></table></figure><p>（2）利用字面量创建数组</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">var arr &#x3D; [1, 2, 4];</span><br></pre></td></tr></table></figure><p>2.获取数组元素：通过下标</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">var arr &#x3D; [1, 2, 4];</span><br><span class="line">console.log(arr[0]);&#x2F;&#x2F;1</span><br><span class="line">console.log(arr[3]);&#x2F;&#x2F;返回undefined</span><br></pre></td></tr></table></figure><p>3.获取数组长度length</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">var arr &#x3D; [1, 2, 4];</span><br><span class="line">console.log(arr.length);&#x2F;&#x2F;3</span><br></pre></td></tr></table></figure><p>4.新增数组元素</p><p>（1）通过修改长度length来新增数组元素</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">var arr &#x3D; [1, 2, 4];</span><br><span class="line">arr.length &#x3D; 5;</span><br><span class="line">console.log(arr); &#x2F;&#x2F;[1, 2, 4, undefined, undefined]</span><br></pre></td></tr></table></figure><p>(2)通过修改数组索引号追加数组元素</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">var arr &#x3D; [1, 2, 4];</span><br><span class="line">arr[3] &#x3D; 6;&#x2F;&#x2F;追加</span><br><span class="line">arr[4] &#x3D; 8;&#x2F;&#x2F;追加</span><br><span class="line">arr[0] &#x3D; 9;&#x2F;&#x2F;替换</span><br></pre></td></tr></table></figure><p>注意：不要给数组名赋值，否证会覆盖以前的数据</p><p>冒泡排序：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">var arr &#x3D; [5, 4, 3, 2, 1];</span><br><span class="line">for (var i &#x3D; 0; i &lt; arr.length; i++) &#123;</span><br><span class="line">for (var j &#x3D; 0; j &lt; arr.length - i - 1; j ++) &#123;</span><br><span class="line">var temp &#x3D; arr[j];</span><br><span class="line">arr[j] &#x3D; arr[j + 1];</span><br><span class="line">arr[j + 1] &#x3D; temp;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">console.log(arr);&#x2F;&#x2F;[1, 2, 3, 4, 5]</span><br></pre></td></tr></table></figure><h3 id="函数使用分为两步：声明函数和调用函数"><a href="#函数使用分为两步：声明函数和调用函数" class="headerlink" title="函数使用分为两步：声明函数和调用函数"></a>函数使用分为两步：声明函数和调用函数</h3><p>1.声明函数： function 函数名() {函数体；}  //括号内可以写形参</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">function sayHi () &#123;</span><br><span class="line">console.log(&#39;Hi&#39;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2.调用函数：函数名();  //括号内可以写实参</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sayHi(); &#x2F;&#x2F;Hi</span><br></pre></td></tr></table></figure><p>注意：如果实参个数多于形参个数，会取形参的个数参与运算；如果过实参个数少于形参个数，多出的形参为undefined。</p><p>3.函数的返回值格式：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">function 函数名() &#123;</span><br><span class="line">return 需要返回的结构;</span><br><span class="line">&#125;</span><br><span class="line">函数名();</span><br><span class="line"></span><br><span class="line">function cook(aru) &#123;</span><br><span class="line">retrun aru;</span><br><span class="line">&#125;</span><br><span class="line">console.log(cook(&#39;空心菜&#39;));</span><br></pre></td></tr></table></figure><p>注意：（1）return后面的语句不再执行，起到终止函数的功能；</p><p>​            （2）return只能返回一个值。如果用逗号隔开，以最后一个为准；</p><p>​            （3）函数如果没有return，则返回undefined</p><p>4.函数表达式（匿名函数）：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;var 变量名 &#x3D; function() &#123;&#125;;</span><br><span class="line">var fn &#x3D; function() &#123;</span><br><span class="line">console.log(&#39;Hi&#39;);</span><br><span class="line">&#125;</span><br><span class="line">fn(); &#x2F;&#x2F;fn是变量名，不是函数名</span><br></pre></td></tr></table></figure><p>5.arguments（只有函数才有）：所有函数都内置了一个arguments对象，其存储了传递过来的所有实参。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">function fn() &#123;</span><br><span class="line">console.log(arguments); &#x2F;&#x2F;[1, 2, 4] 伪数组</span><br><span class="line">&#125;</span><br><span class="line">fn(1, 2, 4);</span><br></pre></td></tr></table></figure><p>伪数组特点：</p><p>（1）具有length属性</p><p>（2）按索引方式存储数据</p><p>（3）不具有数组的push、pop等方法</p><h3 id="全局变量和局部变量"><a href="#全局变量和局部变量" class="headerlink" title="全局变量和局部变量"></a>全局变量和局部变量</h3><p>1.全局变量：在全局作用域下的变量（在函数内部没有声明，直接赋值的变量属于全局变量）</p><p>2.局部变量：在局部作用域下的变量（如函数内部的变量，函数的形参可以当作一个局部变量）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">var num &#x3D; 10;</span><br><span class="line">function fn() &#123;</span><br><span class="line">var num1 &#x3D; 200;</span><br><span class="line">num2 &#x3D; 300;</span><br><span class="line">&#125;</span><br><span class="line">console.log(num)&#x2F;&#x2F; 100</span><br><span class="line">console.log(num1)&#x2F;&#x2F;报错</span><br><span class="line">console.log(num2)&#x2F;&#x2F;300</span><br></pre></td></tr></table></figure><p>注意：全局变量只有浏览器关闭时才会销毁，比较占资源</p><p>​            局部变量与程序执行完毕就会销毁，比较节省资源</p><h3 id="js引擎运行js分为两步：预解析和代码运行"><a href="#js引擎运行js分为两步：预解析和代码运行" class="headerlink" title="js引擎运行js分为两步：预解析和代码运行"></a>js引擎运行js分为两步：预解析和代码运行</h3><p>1.预解析：js引擎会把结束里面所有var和function提升到当前作用域的最前面</p><p>（1）变量预解析（变量提升）：把所有的变量声明提升到当前作用域最前面，不提升赋值操作</p><p>（2）函数预解析（函数提升）：把所有的函数声明都提升到当前作用域最前面，不调用函数</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;例子1</span><br><span class="line">console.log(num);&#x2F;&#x2F;报错</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;例子2</span><br><span class="line">console.log(num1);&#x2F;&#x2F;undefined</span><br><span class="line">var num1 &#x3D; 10;</span><br><span class="line">&#x2F;&#x2F;相当于执行以下代码：</span><br><span class="line">var num1;</span><br><span class="line">console.log(num1);</span><br><span class="line"> num1 &#x3D; 10;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;例子3</span><br><span class="line">fn();&#x2F;&#x2F;66</span><br><span class="line">function fn() &#123;</span><br><span class="line">console.log(66);</span><br><span class="line">&#125;</span><br><span class="line">&#x2F;&#x2F;相当于执行以下代码：</span><br><span class="line">function fn() &#123;</span><br><span class="line">console.log(66);</span><br><span class="line">&#125;</span><br><span class="line">fn();</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;例子4</span><br><span class="line">fun();&#x2F;&#x2F;报错</span><br><span class="line">var fun &#x3D; function() &#123;</span><br><span class="line">console.log(666);</span><br><span class="line">&#125;</span><br><span class="line">&#x2F;&#x2F;相当于执行以下代码：</span><br><span class="line">var fun;</span><br><span class="line">fun();</span><br><span class="line">fun &#x3D; function() &#123;</span><br><span class="line">console.log(666);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;例子5</span><br><span class="line">var num3 &#x3D; 10;</span><br><span class="line">fun();&#x2F;&#x2F;返回undefined</span><br><span class="line">function fun() &#123;</span><br><span class="line">console.log(num3);</span><br><span class="line">var num3 &#x3D; 20;</span><br><span class="line">&#125;</span><br><span class="line">&#x2F;&#x2F;相当于执行以下代码：</span><br><span class="line">var num3;</span><br><span class="line">function fun() &#123;</span><br><span class="line">var num3;</span><br><span class="line">console.log(num3);</span><br><span class="line">num3 &#x3D; 20;</span><br><span class="line">&#125;</span><br><span class="line">num3 &#x3D; 10;</span><br><span class="line">fun();</span><br></pre></td></tr></table></figure><p>2.代码执行：从上往下执行</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\js\APlayer.min.js&quot; class=&quot;aplayer-se
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>今日小结16</title>
    <link href="https://hgq169168.github.io/2020/08/13/%E4%BB%8A%E6%97%A5%E5%B0%8F%E7%BB%9316/"/>
    <id>https://hgq169168.github.io/2020/08/13/%E4%BB%8A%E6%97%A5%E5%B0%8F%E7%BB%9316/</id>
    <published>2020-08-13T14:10:46.000Z</published>
    <updated>2020-08-13T15:09:25.973Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><h2 id="今天复习js基础"><a href="#今天复习js基础" class="headerlink" title="今天复习js基础"></a><center>今天复习js基础</center></h2><h3 id="js须知"><a href="#js须知" class="headerlink" title="js须知"></a>js须知</h3><p>1.只声明不赋值：</p><p>var age;   console.log(age) ;  返回udefined</p><p>2.不声明不赋值：</p><p>console.log(age); 报错</p><p>3.不声明只赋值：</p><p>age = 10;  console.log(age); 返回10</p><h3 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h3><p>1.简单数据类型：Number，String，Boolean，udefined，Null</p><p>2.复杂数据类型：object</p><h3 id="Number数字类型："><a href="#Number数字类型：" class="headerlink" title="Number数字类型："></a>Number数字类型：</h3><p>最大值：Number.MAX_VALUE</p><p>最小值：Number.MIN_VALUE</p><p>无穷大：Infinity</p><p>无穷小：-Infinity</p><p>非数字：NaN</p><p>isNaN()可以判断给数字，是数字返回false，不是数字返回true</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">console.log(isNaN(666));  &#x2F;&#x2F;返回false</span><br><span class="line">console.log(isNaN(&quot;kkk&quot;); &#x2F;&#x2F;返回true</span><br></pre></td></tr></table></figure><h3 id="String字符串：用单引号或双引号括起来"><a href="#String字符串：用单引号或双引号括起来" class="headerlink" title="String字符串：用单引号或双引号括起来"></a>String字符串：用单引号或双引号括起来</h3><p>1.length获取字符串长度：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">var str &#x3D; &#39;hello&#39;; </span><br><span class="line">console.log(str.length)  &#x2F;&#x2F;返回5</span><br></pre></td></tr></table></figure><p>2.字符串 + 任何类型 = 拼接后的新字符串</p><h3 id="Boolean类型：只有true和false"><a href="#Boolean类型：只有true和false" class="headerlink" title="Boolean类型：只有true和false"></a>Boolean类型：只有true和false</h3><p>1.true与数字进行算数运算时，当中1来看；</p><p>2.false与数字进行算数运算时，当中0来看；</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">console.log(6 + true); &#x2F;&#x2F;7</span><br><span class="line">console.log(6 - false); &#x2F;&#x2F;6</span><br><span class="line">console.log(6 % true); &#x2F;&#x2F;0</span><br><span class="line">console.log(0 &#x2F; 6); &#x2F;&#x2F;0</span><br></pre></td></tr></table></figure><h3 id="undefined：一个变量声明未赋值，就时undefined"><a href="#undefined：一个变量声明未赋值，就时undefined" class="headerlink" title="undefined：一个变量声明未赋值，就时undefined"></a>undefined：一个变量声明未赋值，就时undefined</h3><p>1.undefined + 1 = NaN</p><p>2.undefined + ‘pink’ = ‘undefinedpink’</p><h3 id="null空值"><a href="#null空值" class="headerlink" title="null空值"></a>null空值</h3><p>1.null + 1 = 1</p><p>2.null + ‘pink’ = ‘nullpink’</p><h3 id="typeof-检测变量类型"><a href="#typeof-检测变量类型" class="headerlink" title="typeof 检测变量类型"></a>typeof 检测变量类型</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">var str &#x3D; &#39;pink&#39;;</span><br><span class="line">console.log(styeof str); &#x2F;&#x2F;返回String</span><br><span class="line">var timer &#x3D; null;</span><br><span class="line">console.log(styeof timer); &#x2F;&#x2F;返回object  （这个特殊）</span><br></pre></td></tr></table></figure><h3 id="转换字符串"><a href="#转换字符串" class="headerlink" title="转换字符串"></a>转换字符串</h3><p>1.toString()</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">var num &#x3D; 1;</span><br><span class="line">alert(num.toString());&#x2F;&#x2F;注意用法</span><br></pre></td></tr></table></figure><p>2.String()强制转换</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">var num &#x3D; 1;</span><br><span class="line">alert(String(num))</span><br></pre></td></tr></table></figure><p>3.+ 号拼接转换（常用）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">var num &#x3D; 1;</span><br><span class="line">alert(num + &#39;&#39;);</span><br></pre></td></tr></table></figure><h3 id="转换位数字类型"><a href="#转换位数字类型" class="headerlink" title="转换位数字类型"></a>转换位数字类型</h3><p>1.ParseInt(string)：转换位整数（注意：string是指字符串数字类型）</p><p>2.ParseFloat(string)：转换位浮点数</p><p>3.Number()：转换位数字类型</p><p>4.js隐式转换（-、*、/）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">var str &#x3D; &#39;11&#39;;</span><br><span class="line">alert(str - 0); 返回11</span><br></pre></td></tr></table></figure><h3 id="转换位布尔类型"><a href="#转换位布尔类型" class="headerlink" title="转换位布尔类型"></a>转换位布尔类型</h3><p>1.BOoolean()</p><p>注意：代表空、否定的值会被转为false，如0、NaN、null、undefined、“”等；其余值会被转换为true（空数组[],会被转换为true）</p><h3 id="编译器与解析器"><a href="#编译器与解析器" class="headerlink" title="编译器与解析器"></a>编译器与解析器</h3><p>1.编译器：在代码执行前编译，生产中间代码文件</p><p>2.解析器：在运行时进行及时解析并立即执行</p><h3 id="后置自增-：先返回原值，后自加1"><a href="#后置自增-：先返回原值，后自加1" class="headerlink" title="后置自增 ：先返回原值，后自加1"></a>后置自增 ：先返回原值，后自加1</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">var age &#x3D; 10;</span><br><span class="line">alert(age++ + 10) &#x2F;&#x2F;10</span><br><span class="line">alert(age) &#x2F;&#x2F;11</span><br></pre></td></tr></table></figure><h3 id="比较运算符："><a href="#比较运算符：" class="headerlink" title="比较运算符："></a>比较运算符：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">console.log(18 &#x3D;&#x3D; &quot;18&quot;);&#x2F;&#x2F;返回true，&#x3D;&#x3D; 默认把字符串的数字类型转换成数字型</span><br><span class="line">console.log(18 &#x3D;&#x3D;&#x3D; &quot;18&quot;)&#x2F;&#x2F;返回false，&#x3D;&#x3D;&#x3D; 要求值和类型都相同</span><br></pre></td></tr></table></figure><p>短路运算：当有多个表达式（值）时，左边的表达式值可以确定结果时，就不再基线运算右边的表达式的值</p><p>1.逻辑与：表达式1 &amp;&amp; 表达式2</p><p>（1）如果表达式1为真，则返回表达式2</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">console.log(33 &amp;&amp; 66) &#x2F;&#x2F;返回66</span><br></pre></td></tr></table></figure><p>（2）如果表达式1为假，则返回表达式1</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">console.log(0 &amp;&amp; 66) &#x2F;&#x2F;返回0</span><br></pre></td></tr></table></figure><p>2.逻辑或：表达式1 &amp;&amp; 表达式2</p><p>（1）如果表达式1为真，则返回表达式1</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">console.log(33 &amp;&amp; 66) &#x2F;&#x2F;返回33</span><br></pre></td></tr></table></figure><p>（1）如果表达式1为假，则返回表达式2</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">console.log(0 &amp;&amp; 66) &#x2F;&#x2F;返回66</span><br></pre></td></tr></table></figure><h3 id="运算符优先级"><a href="#运算符优先级" class="headerlink" title="运算符优先级"></a>运算符优先级</h3><p><img src= "/img/loading.gif" data-src="https://i.loli.net/2020/08/13/bzaRmvxKGuSYsTh.png" alt=""></p><h3 id="三元表达式：条件表达式-表达式1-表达式2"><a href="#三元表达式：条件表达式-表达式1-表达式2" class="headerlink" title="三元表达式：条件表达式 ? 表达式1 : 表达式2"></a>三元表达式：条件表达式 ? 表达式1 : 表达式2</h3><p>如果条件表达式 为真，则返回表达式1的值，否则返回表达式2的值</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">var num &#x3D; 5;</span><br><span class="line">var result &#x3D; num &gt; 2 ? &#39;是的&#39; : &#39;不是的&#39;;</span><br><span class="line">console.log(result)&#x2F;&#x2F;返回 是的</span><br></pre></td></tr></table></figure><h3 id="do-while循环：先执行一遍循环体，再判断条件"><a href="#do-while循环：先执行一遍循环体，再判断条件" class="headerlink" title="do while循环：先执行一遍循环体，再判断条件"></a>do while循环：先执行一遍循环体，再判断条件</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">var i &#x3D; 1;</span><br><span class="line">do &#123;</span><br><span class="line">console.log(&#39;hello&#39;);</span><br><span class="line">i++</span><br><span class="line">&#125; while ( i &lt;&#x3D; 100);</span><br></pre></td></tr></table></figure><h3 id="continue-和-break关键字"><a href="#continue-和-break关键字" class="headerlink" title="continue 和 break关键字"></a>continue 和 break关键字</h3><p>1.continue用于立即跳出本次循环，继续下一次循环</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">var num &#x3D; 0;</span><br><span class="line">for (var i &#x3D; 1; i &lt;&#x3D; 100; i++) &#123;</span><br><span class="line">if (i % 7 &#x3D;&#x3D; 0) &#123;</span><br><span class="line">continue;</span><br><span class="line">&#125;</span><br><span class="line">num +&#x3D; i;</span><br><span class="line">&#125;</span><br><span class="line">console.log(num) &#x2F;&#x2F;求1~100内非7倍速数的累加和</span><br></pre></td></tr></table></figure><p>2.break用与立即跳出整个循环（循环体结束）</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\js\APlayer.min.js&quot; class=&quot;aplayer-se
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>今日小结15</title>
    <link href="https://hgq169168.github.io/2020/08/12/%E4%BB%8A%E6%97%A5%E5%B0%8F%E7%BB%9315/"/>
    <id>https://hgq169168.github.io/2020/08/12/%E4%BB%8A%E6%97%A5%E5%B0%8F%E7%BB%9315/</id>
    <published>2020-08-12T14:09:06.000Z</published>
    <updated>2020-08-13T15:14:39.525Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><h2 id="携程网首页的flex布局"><a href="#携程网首页的flex布局" class="headerlink" title="携程网首页的flex布局"></a><center>携程网首页的flex布局</center></h2><p>放开那女孩，让我来……..（开个玩笑！我最喜欢开玩笑了）</p><p>1.首先让我来介绍一下携程网首页的大体结构吧：</p><p>携程网首页包括6个大模块，分别是头部搜索、焦点图、局部导航栏、nav主题部分、侧导航栏、销售模块</p><p>（1）头部搜索：有一个父级div标签，里面包含搜索输入框（用div表示）和一个a标签</p><p>（2）焦点图：有一个父级div标签，里面的img标签放入图片</p><p>（3）局部导航栏：父级ul标签包含5跟li标签，li标签里面含有一个a标签，a标签里有2个span标签，1个用来放背景图片，1个用来放文字简介</p><p>（4）nav主题部分：父级nav标签里包含三个div标签（用于排3行），div标签里面再放3个div标签（用于排3列），第1个div标签里面放1个a标签，第2个div标签放2个a标签，第3个div也放2个a标签。</p><p>（5）侧导航栏：父级ul标签里面包含10li标签，每个li标签里面包含1个a标签，a标签里面再包含2个span标签，第1个span标签放入背景图片，第2个span标签写入文字简介</p><p>（6）销售模块：父级div标签，包含2个div标签，第1个div标签包含1个h2标签（用于插入背景图标）和a标签，第2个div标签包含3个div标签，每个div标签都包含2个a标签，每个a标签里再包含1个img标签</p><p>都看懂了吧！，，，，什么，，，没看懂，，，那先看看图吧</p><p><img src= "/img/loading.gif" data-src="https://i.loli.net/2020/08/12/14aTkejrFdMZSlB.png" alt=""></p><p>这回看懂了吧！，，啥子，，还有点不清楚，，行，，咱们再看看.htlm文件代码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang&#x3D;&quot;en&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset&#x3D;&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;meta name&#x3D;&quot;viewport&quot;</span><br><span class="line">        content&#x3D;&quot;width&#x3D;device-width, initial-scale&#x3D;1.0, user-scalable&#x3D;no,maximum-scale&#x3D;1.0,minimum-scale&#x3D;1.0&quot;&gt;</span><br><span class="line">    &lt;meta http-equiv&#x3D;&quot;X-UA-Compatible&quot; content&#x3D;&quot;ie&#x3D;edge&quot;&gt;</span><br><span class="line">    &lt;!-- 引入我们的css初始化文件 --&gt;</span><br><span class="line">    &lt;link rel&#x3D;&quot;stylesheet&quot; href&#x3D;&quot;css&#x2F;normalize.css&quot;&gt;</span><br><span class="line">    &lt;!-- 引入我们首页的css --&gt;</span><br><span class="line">    &lt;link rel&#x3D;&quot;stylesheet&quot; href&#x3D;&quot;css&#x2F;index.css&quot;&gt;</span><br><span class="line">    &lt;title&gt;携程首页&lt;&#x2F;title&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;!-- 头部搜索 --&gt;</span><br><span class="line">    &lt;div class&#x3D;&quot;search-index&quot;&gt;</span><br><span class="line">        &lt;div class&#x3D;&quot;search&quot;&gt;搜索:目的地&#x2F;酒店&#x2F;景点&#x2F;航班号&lt;&#x2F;div&gt;</span><br><span class="line">        &lt;a href&#x3D;&quot;#&quot; class&#x3D;&quot;user&quot;&gt;我 的&lt;&#x2F;a&gt;</span><br><span class="line">    &lt;&#x2F;div&gt;</span><br><span class="line">    &lt;!-- 焦点图模块 --&gt;ce</span><br><span class="line">    &lt;div class&#x3D;&quot;focus&quot;&gt;</span><br><span class="line">        &lt;img src&#x3D;&quot;upload&#x2F;focus.jpg&quot; alt&#x3D;&quot;&quot;&gt;</span><br><span class="line">    &lt;&#x2F;div&gt;</span><br><span class="line">    &lt;!-- 局部导航栏 --&gt;</span><br><span class="line">    &lt;ul class&#x3D;&quot;local-nav&quot;&gt;</span><br><span class="line">        &lt;li&gt;</span><br><span class="line">            &lt;a href&#x3D;&quot;#&quot; title&#x3D;&quot;景点·玩乐&quot;&gt;</span><br><span class="line">                &lt;span class&#x3D;&quot;local-nav-icon-icon1&quot;&gt;&lt;&#x2F;span&gt;</span><br><span class="line">                &lt;span&gt;景点·玩乐&lt;&#x2F;span&gt;</span><br><span class="line">            &lt;&#x2F;a&gt;</span><br><span class="line">        &lt;&#x2F;li&gt;</span><br><span class="line">        &lt;li&gt;</span><br><span class="line">            &lt;a href&#x3D;&quot;#&quot; title&#x3D;&quot;周边游&quot;&gt;</span><br><span class="line">                &lt;span class&#x3D;&quot;local-nav-icon-icon2&quot;&gt;&lt;&#x2F;span&gt;</span><br><span class="line">                &lt;span&gt;周边游&lt;&#x2F;span&gt;</span><br><span class="line">            &lt;&#x2F;a&gt;</span><br><span class="line">        &lt;&#x2F;li&gt;</span><br><span class="line">        &lt;li&gt;</span><br><span class="line">            &lt;a href&#x3D;&quot;#&quot; title&#x3D;&quot;美食林&quot;&gt;</span><br><span class="line">                &lt;span class&#x3D;&quot;local-nav-icon-icon3&quot;&gt;&lt;&#x2F;span&gt;</span><br><span class="line">                &lt;span&gt;美食林&lt;&#x2F;span&gt;</span><br><span class="line">            &lt;&#x2F;a&gt;</span><br><span class="line">        &lt;&#x2F;li&gt;</span><br><span class="line">        &lt;li&gt;</span><br><span class="line">            &lt;a href&#x3D;&quot;#&quot; title&#x3D;&quot;一日游&quot;&gt;</span><br><span class="line">                &lt;span class&#x3D;&quot;local-nav-icon-icon4&quot;&gt;&lt;&#x2F;span&gt;</span><br><span class="line">                &lt;span&gt;一日游&lt;&#x2F;span&gt;</span><br><span class="line">            &lt;&#x2F;a&gt;</span><br><span class="line">        &lt;&#x2F;li&gt;</span><br><span class="line">        &lt;li&gt;</span><br><span class="line">            &lt;a href&#x3D;&quot;#&quot; title&#x3D;&quot;当地攻略&quot;&gt;</span><br><span class="line">                &lt;span class&#x3D;&quot;local-nav-icon-icon5&quot;&gt;&lt;&#x2F;span&gt;</span><br><span class="line">                &lt;span&gt;当地攻略&lt;&#x2F;span&gt;</span><br><span class="line">            &lt;&#x2F;a&gt;</span><br><span class="line">        &lt;&#x2F;li&gt;</span><br><span class="line">    &lt;&#x2F;ul&gt;</span><br><span class="line">    &lt;!-- nav主题部分 --&gt;</span><br><span class="line">    &lt;nav&gt;</span><br><span class="line">        &lt;div class&#x3D;&quot;nav-common&quot;&gt;</span><br><span class="line">            &lt;div class&#x3D;&quot;nav-items&quot;&gt;</span><br><span class="line">                &lt;a href&#x3D;&quot;#&quot; title&#x3D;&quot;酒店&quot;&gt;酒店&lt;&#x2F;a&gt;</span><br><span class="line">            &lt;&#x2F;div&gt;</span><br><span class="line">            &lt;div class&#x3D;&quot;nav-items&quot;&gt;</span><br><span class="line">                &lt;a href&#x3D;&quot;#&quot; title&#x3D;&quot;海外酒店&quot;&gt;海外酒店&lt;&#x2F;a&gt;</span><br><span class="line">                &lt;a href&#x3D;&quot;#&quot; title&#x3D;&quot;特价酒店&quot;&gt;特价酒店&lt;&#x2F;a&gt;</span><br><span class="line">            &lt;&#x2F;div&gt;</span><br><span class="line">            &lt;div class&#x3D;&quot;nav-items&quot;&gt;</span><br><span class="line">                &lt;a href&#x3D;&quot;#&quot; title&#x3D;&quot;团购&quot;&gt;团购&lt;&#x2F;a&gt;</span><br><span class="line">                &lt;a href&#x3D;&quot;#&quot; title&#x3D;&quot;名宿·客栈&quot;&gt;名宿·客栈&lt;&#x2F;a&gt;</span><br><span class="line">            &lt;&#x2F;div&gt;</span><br><span class="line">        &lt;&#x2F;div&gt;</span><br><span class="line">        &lt;div class&#x3D;&quot;nav-common&quot;&gt;</span><br><span class="line">            &lt;div class&#x3D;&quot;nav-items&quot;&gt;</span><br><span class="line">                &lt;a href&#x3D;&quot;#&quot; title&#x3D;&quot;酒店&quot;&gt;酒店&lt;&#x2F;a&gt;</span><br><span class="line">            &lt;&#x2F;div&gt;</span><br><span class="line">            &lt;div class&#x3D;&quot;nav-items&quot;&gt;</span><br><span class="line">                &lt;a href&#x3D;&quot;#&quot; title&#x3D;&quot;海外酒店&quot;&gt;海外酒店&lt;&#x2F;a&gt;</span><br><span class="line">                &lt;a href&#x3D;&quot;#&quot; title&#x3D;&quot;特价酒店&quot;&gt;特价酒店&lt;&#x2F;a&gt;</span><br><span class="line">            &lt;&#x2F;div&gt;</span><br><span class="line">            &lt;div class&#x3D;&quot;nav-items&quot;&gt;</span><br><span class="line">                &lt;a href&#x3D;&quot;#&quot; title&#x3D;&quot;团购&quot;&gt;团购&lt;&#x2F;a&gt;</span><br><span class="line">                &lt;a href&#x3D;&quot;#&quot; title&#x3D;&quot;名宿·客栈&quot;&gt;名宿·客栈&lt;&#x2F;a&gt;</span><br><span class="line">            &lt;&#x2F;div&gt;</span><br><span class="line">        &lt;&#x2F;div&gt;</span><br><span class="line">        &lt;div class&#x3D;&quot;nav-common&quot;&gt;</span><br><span class="line">            &lt;div class&#x3D;&quot;nav-items&quot;&gt;</span><br><span class="line">                &lt;a href&#x3D;&quot;#&quot; title&#x3D;&quot;酒店&quot;&gt;酒店&lt;&#x2F;a&gt;</span><br><span class="line">            &lt;&#x2F;div&gt;</span><br><span class="line">            &lt;div class&#x3D;&quot;nav-items&quot;&gt;</span><br><span class="line">                &lt;a href&#x3D;&quot;#&quot; title&#x3D;&quot;海外酒店&quot;&gt;海外酒店&lt;&#x2F;a&gt;</span><br><span class="line">                &lt;a href&#x3D;&quot;#&quot; title&#x3D;&quot;特价酒店&quot;&gt;特价酒店&lt;&#x2F;a&gt;</span><br><span class="line">            &lt;&#x2F;div&gt;</span><br><span class="line">            &lt;div class&#x3D;&quot;nav-items&quot;&gt;</span><br><span class="line">                &lt;a href&#x3D;&quot;#&quot; title&#x3D;&quot;团购&quot;&gt;团购&lt;&#x2F;a&gt;</span><br><span class="line">                &lt;a href&#x3D;&quot;#&quot; title&#x3D;&quot;名宿·客栈&quot;&gt;名宿·客栈&lt;&#x2F;a&gt;</span><br><span class="line">            &lt;&#x2F;div&gt;</span><br><span class="line">        &lt;&#x2F;div&gt;</span><br><span class="line">    &lt;&#x2F;nav&gt;</span><br><span class="line">    &lt;!-- 侧导航栏 --&gt;</span><br><span class="line">    &lt;ul class&#x3D;&quot;subnav-entry&quot;&gt;</span><br><span class="line">        &lt;li&gt;</span><br><span class="line">            &lt;a href&#x3D;&quot;#&quot; title&#x3D;&quot;wifi电话卡&quot;&gt;</span><br><span class="line">                &lt;span class&#x3D;&quot;subnav-entry-icon&quot;&gt;&lt;&#x2F;span&gt;</span><br><span class="line">                &lt;span&gt;wifi电话卡&lt;&#x2F;span&gt;</span><br><span class="line">            &lt;&#x2F;a&gt;</span><br><span class="line">        &lt;&#x2F;li&gt;</span><br><span class="line">        &lt;li&gt;</span><br><span class="line">            &lt;a href&#x3D;&quot;#&quot; title&#x3D;&quot;保险·签证&quot;&gt;</span><br><span class="line">                &lt;span class&#x3D;&quot;subnav-entry-icon&quot;&gt;&lt;&#x2F;span&gt;</span><br><span class="line">                &lt;span&gt;保险·签证&lt;&#x2F;span&gt;</span><br><span class="line">            &lt;&#x2F;a&gt;</span><br><span class="line">        &lt;&#x2F;li&gt;</span><br><span class="line">        &lt;li&gt;</span><br><span class="line">            &lt;a href&#x3D;&quot;#&quot; title&#x3D;&quot;外币兑换&quot;&gt;</span><br><span class="line">                &lt;span class&#x3D;&quot;subnav-entry-icon&quot;&gt;&lt;&#x2F;span&gt;</span><br><span class="line">                &lt;span&gt;外币兑换&lt;&#x2F;span&gt;</span><br><span class="line">            &lt;&#x2F;a&gt;</span><br><span class="line">        &lt;&#x2F;li&gt;</span><br><span class="line">        &lt;li&gt;</span><br><span class="line">            &lt;a href&#x3D;&quot;#&quot; title&#x3D;&quot;购物&quot;&gt;</span><br><span class="line">                &lt;span class&#x3D;&quot;subnav-entry-icon&quot;&gt;&lt;&#x2F;span&gt;</span><br><span class="line">                &lt;span&gt;购物&lt;&#x2F;span&gt;</span><br><span class="line">            &lt;&#x2F;a&gt;</span><br><span class="line">        &lt;&#x2F;li&gt;</span><br><span class="line">        &lt;li&gt;</span><br><span class="line">            &lt;a href&#x3D;&quot;#&quot; title&#x3D;&quot;当地向导&quot;&gt;</span><br><span class="line">                &lt;span class&#x3D;&quot;subnav-entry-icon&quot;&gt;&lt;&#x2F;span&gt;</span><br><span class="line">                &lt;span&gt;当地向导&lt;&#x2F;span&gt;</span><br><span class="line">            &lt;&#x2F;a&gt;</span><br><span class="line">        &lt;&#x2F;li&gt;</span><br><span class="line">        &lt;li&gt;</span><br><span class="line">            &lt;a href&#x3D;&quot;#&quot; title&#x3D;&quot;自由行&quot;&gt;</span><br><span class="line">                &lt;span class&#x3D;&quot;subnav-entry-icon&quot;&gt;&lt;&#x2F;span&gt;</span><br><span class="line">                &lt;span&gt;自由行&lt;&#x2F;span&gt;</span><br><span class="line">            &lt;&#x2F;a&gt;</span><br><span class="line">        &lt;&#x2F;li&gt;</span><br><span class="line">        &lt;li&gt;</span><br><span class="line">            &lt;a href&#x3D;&quot;#&quot; title&#x3D;&quot;境外玩乐&quot;&gt;</span><br><span class="line">                &lt;span class&#x3D;&quot;subnav-entry-icon&quot;&gt;&lt;&#x2F;span&gt;</span><br><span class="line">                &lt;span&gt;境外玩乐&lt;&#x2F;span&gt;</span><br><span class="line">            &lt;&#x2F;a&gt;</span><br><span class="line">        &lt;&#x2F;li&gt;</span><br><span class="line">        &lt;li&gt;</span><br><span class="line">            &lt;a href&#x3D;&quot;#&quot; title&#x3D;&quot;礼品卡&quot;&gt;</span><br><span class="line">                &lt;span class&#x3D;&quot;subnav-entry-icon&quot;&gt;&lt;&#x2F;span&gt;</span><br><span class="line">                &lt;span&gt;礼品卡&lt;&#x2F;span&gt;</span><br><span class="line">            &lt;&#x2F;a&gt;</span><br><span class="line">        &lt;&#x2F;li&gt;</span><br><span class="line">        &lt;li&gt;</span><br><span class="line">            &lt;a href&#x3D;&quot;#&quot; title&#x3D;&quot;信用卡&quot;&gt;</span><br><span class="line">                &lt;span class&#x3D;&quot;subnav-entry-icon&quot;&gt;&lt;&#x2F;span&gt;</span><br><span class="line">                &lt;span&gt;信用卡&lt;&#x2F;span&gt;</span><br><span class="line">            &lt;&#x2F;a&gt;</span><br><span class="line">        &lt;&#x2F;li&gt;</span><br><span class="line">        &lt;li&gt;</span><br><span class="line">            &lt;a href&#x3D;&quot;#&quot; title&#x3D;&quot;更多&quot;&gt;</span><br><span class="line">                &lt;span class&#x3D;&quot;subnav-entry-icon&quot;&gt;&lt;&#x2F;span&gt;</span><br><span class="line">                &lt;span&gt;更多&lt;&#x2F;span&gt;</span><br><span class="line">            &lt;&#x2F;a&gt;</span><br><span class="line">        &lt;&#x2F;li&gt;</span><br><span class="line">    &lt;&#x2F;ul&gt;</span><br><span class="line">    &lt;!-- 销售模块 --&gt;</span><br><span class="line">    &lt;div class&#x3D;&quot;sales-box&quot;&gt;</span><br><span class="line">        &lt;div class&#x3D;&quot;sales-hd&quot;&gt;</span><br><span class="line">            &lt;h2&gt;热门活动&lt;&#x2F;h2&gt;</span><br><span class="line">            &lt;a href&#x3D;&quot;#&quot; class&#x3D;&quot;more&quot;&gt;获取更多福利&lt;&#x2F;a&gt;</span><br><span class="line">        &lt;&#x2F;div&gt;</span><br><span class="line">        &lt;div class&#x3D;&quot;sales-bd&quot;&gt;</span><br><span class="line">            &lt;div class&#x3D;&quot;row&quot;&gt;</span><br><span class="line">                &lt;a href&#x3D;&quot;#&quot;&gt;&lt;img src&#x3D;&quot;upload&#x2F;pic1.jpg&quot; alt&#x3D;&quot;&quot;&gt;&lt;&#x2F;a&gt;</span><br><span class="line">                &lt;a href&#x3D;&quot;#&quot;&gt;&lt;img src&#x3D;&quot;upload&#x2F;pic2.jpg&quot; alt&#x3D;&quot;&quot;&gt;&lt;&#x2F;a&gt;</span><br><span class="line">            &lt;&#x2F;div&gt;</span><br><span class="line">            &lt;div class&#x3D;&quot;row&quot;&gt;</span><br><span class="line">                &lt;a href&#x3D;&quot;#&quot;&gt;&lt;img src&#x3D;&quot;upload&#x2F;pic3.jpg&quot; alt&#x3D;&quot;&quot;&gt;&lt;&#x2F;a&gt;</span><br><span class="line">                &lt;a href&#x3D;&quot;#&quot;&gt;&lt;img src&#x3D;&quot;upload&#x2F;pic4.jpg&quot; alt&#x3D;&quot;&quot;&gt;&lt;&#x2F;a&gt;</span><br><span class="line">            &lt;&#x2F;div&gt;</span><br><span class="line">            &lt;div class&#x3D;&quot;row&quot;&gt;</span><br><span class="line">                &lt;a href&#x3D;&quot;#&quot;&gt;&lt;img src&#x3D;&quot;upload&#x2F;pic5.jpg&quot; alt&#x3D;&quot;&quot;&gt;&lt;&#x2F;a&gt;</span><br><span class="line">                &lt;a href&#x3D;&quot;#&quot;&gt;&lt;img src&#x3D;&quot;upload&#x2F;pic6.jpg&quot; alt&#x3D;&quot;&quot;&gt;&lt;&#x2F;a&gt;</span><br><span class="line">            &lt;&#x2F;div&gt;</span><br><span class="line">        &lt;&#x2F;div&gt;</span><br><span class="line">    &lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure><p>好了好了，咱们聊聊今天碰到的知识点、坑与心得</p><p>先上css文件代码吧！</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br></pre></td><td class="code"><pre><span class="line">body &#123;</span><br><span class="line">    max-width: 540px;</span><br><span class="line">    min-width: 320px;</span><br><span class="line">    margin: 0 auto;</span><br><span class="line">    font: normal 14px&#x2F;1.5 Tahoma, &quot;Lucida Grande&quot;, Verdana, &quot;Microsoft Yahei&quot;, STXihei, hei;</span><br><span class="line">    color: #000;</span><br><span class="line">    background: #f2f2f2;</span><br><span class="line">    overflow-x: hidden;</span><br><span class="line">    -webkit-tap-highlight-color: transparent;</span><br><span class="line">&#125;</span><br><span class="line">a &#123;</span><br><span class="line">    text-decoration: none;</span><br><span class="line">    color: #222;</span><br><span class="line">&#125;</span><br><span class="line">div &#123;</span><br><span class="line">    box-sizing: border-box;</span><br><span class="line">&#125;</span><br><span class="line">ul &#123;</span><br><span class="line">    list-style: none;</span><br><span class="line">    margin: 0;</span><br><span class="line">    padding: 0;</span><br><span class="line">&#125;</span><br><span class="line">&#x2F;* 头部搜索 *&#x2F;</span><br><span class="line">.search-index &#123;</span><br><span class="line">    display: flex;</span><br><span class="line">    &#x2F;* 固定定位与父盒子没关系，它以屏幕为准 *&#x2F;</span><br><span class="line">    position: fixed;</span><br><span class="line">    &#x2F;* 实现水平居中条件1 *&#x2F;</span><br><span class="line">    left: 50%;</span><br><span class="line">    top: 0;</span><br><span class="line">    &#x2F;* 实现水平居中条件2 *&#x2F;</span><br><span class="line">    &#x2F;* 兼容低版本浏览器写法 *&#x2F;</span><br><span class="line">    -webkit-transform: translateX(-50%);</span><br><span class="line">    transform: translateX(-50%);</span><br><span class="line">    width: 100%;</span><br><span class="line">    height: 44px;</span><br><span class="line">    min-width: 320px;</span><br><span class="line">    max-width: 540px;</span><br><span class="line">    &#x2F;* background-color: pink; *&#x2F;</span><br><span class="line">    background-color: #f6f6f6;</span><br><span class="line">    border-top: 1px solid #ccc;</span><br><span class="line">    border-bottom: 1px solid #ccc;</span><br><span class="line">&#125;</span><br><span class="line">.search &#123;</span><br><span class="line">    position: relative;</span><br><span class="line">    height: 26px;</span><br><span class="line">    border: 1px solid #ccc;</span><br><span class="line">    color: #666666;</span><br><span class="line">    font-size: 12px;</span><br><span class="line">    line-height: 24px;</span><br><span class="line">    flex: 1;</span><br><span class="line">    margin: 7px 10px;</span><br><span class="line">    padding-left: 25px;</span><br><span class="line">    border-radius: 5px;</span><br><span class="line">    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);</span><br><span class="line">&#125;</span><br><span class="line">.search::before &#123;</span><br><span class="line">    content: &quot;&quot;;</span><br><span class="line">    position: absolute;</span><br><span class="line">    left: 0;</span><br><span class="line">    top: 0;</span><br><span class="line">    width: 15px;</span><br><span class="line">    height: 15px;</span><br><span class="line">    background: url(..&#x2F;images&#x2F;sprite.png) no-repeat -59px -279px;</span><br><span class="line">    background-size: 104px auto;</span><br><span class="line">    margin: 5px;</span><br><span class="line">&#125;</span><br><span class="line">.user &#123;</span><br><span class="line">    width: 44px;</span><br><span class="line">    height: 44px;</span><br><span class="line">    &#x2F;* background-color: powderblue; *&#x2F;</span><br><span class="line">    font-size: 12px;</span><br><span class="line">    color: #099fde;</span><br><span class="line">    text-align: center;</span><br><span class="line">&#125;</span><br><span class="line">.user::before &#123;</span><br><span class="line">    content: &quot;&quot;;</span><br><span class="line">    display: block;</span><br><span class="line">    width: 23px;</span><br><span class="line">    height: 23px;</span><br><span class="line">    background: url(..&#x2F;images&#x2F;sprite.png) no-repeat -59px -194px;</span><br><span class="line">    background-size: 104px auto;</span><br><span class="line">    margin: 3px auto -1px;</span><br><span class="line">&#125;</span><br><span class="line">.focus &#123;</span><br><span class="line">    margin-top: 44px;</span><br><span class="line">&#125;</span><br><span class="line">&#x2F;* 焦点模块 *&#x2F;</span><br><span class="line">.focus img&#123;</span><br><span class="line">    width: 100%;</span><br><span class="line">&#125;</span><br><span class="line">&#x2F;* 局部导航栏 *&#x2F;</span><br><span class="line">.local-nav &#123;</span><br><span class="line">    display: flex;</span><br><span class="line">    height: 64px;</span><br><span class="line">    margin: 3px 4px;</span><br><span class="line">    background-color: #fff;</span><br><span class="line">    border-radius: 8px;</span><br><span class="line">&#125;</span><br><span class="line">.local-nav li &#123;</span><br><span class="line">    flex: 1;</span><br><span class="line">&#125;</span><br><span class="line">.local-nav a &#123;</span><br><span class="line">    display: flex;</span><br><span class="line">    flex-direction: column;</span><br><span class="line">    &#x2F;* 侧轴居中对齐 *&#x2F;</span><br><span class="line">    align-items: center;</span><br><span class="line">    font-size: 12px;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#x2F;* 方法1  注意：index.html文件中.local-nav li a span（第一个）的class&#x3D;&quot;.local-nav-icon&quot;*&#x2F;</span><br><span class="line">&#x2F;* .local-nav-icon &#123;</span><br><span class="line">    width: 32px;</span><br><span class="line">    height: 32px;</span><br><span class="line">    background-color: pink;</span><br><span class="line">    margin-top: 8px;</span><br><span class="line">    background: url(..&#x2F;images&#x2F;localnav_bg.png) no-repeat 0 0px;</span><br><span class="line">    background-size: 32px auto;</span><br><span class="line">&#125;</span><br><span class="line">.local-nav li:nth-child(2) .local-nav-icon &#123;</span><br><span class="line">    background-position: 0 -32px;</span><br><span class="line">&#125;</span><br><span class="line">.local-nav li:nth-child(3) .local-nav-icon &#123;</span><br><span class="line">    background-position: 0 -64px;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">.local-nav li:nth-child(4) .local-nav-icon &#123;</span><br><span class="line">    background-position: 0 -96px;</span><br><span class="line">&#125;</span><br><span class="line">.local-nav li:nth-child(5) .local-nav-icon &#123;</span><br><span class="line">    background-position: 0 -128px;</span><br><span class="line">&#125; *&#x2F;</span><br><span class="line">&#x2F;* 方法2  注意：index.html文件中.local-nav li a span（第一个）的class&#x3D;&quot;.local-nav-icon-icon[n]&quot; n为1~5*&#x2F;</span><br><span class="line">&#x2F;* 用方法1，记得修改类名 *&#x2F;</span><br><span class="line">.local-nav li [class^&#x3D;&quot;local-nav-icon&quot;] &#123;</span><br><span class="line">    width: 32px;</span><br><span class="line">    height: 32px;</span><br><span class="line">    background-color: pink;</span><br><span class="line">    margin-top: 8px;</span><br><span class="line">    background: url(..&#x2F;images&#x2F;localnav_bg.png) no-repeat 0 0px;</span><br><span class="line">    background-size: 32px auto;</span><br><span class="line">&#125;</span><br><span class="line">.local-nav li .local-nav-icon-icon2 &#123;</span><br><span class="line">    background-position: 0 -32px;</span><br><span class="line">&#125;</span><br><span class="line">.local-nav li .local-nav-icon-icon3 &#123;</span><br><span class="line">    background-position: 0 -64px;</span><br><span class="line">&#125;</span><br><span class="line">.local-nav li .local-nav-icon-icon4 &#123;</span><br><span class="line">    background-position: 0 -96px;</span><br><span class="line">&#125;</span><br><span class="line">.local-nav li .local-nav-icon-icon5 &#123;</span><br><span class="line">    background-position: 0 -128px;</span><br><span class="line">&#125;</span><br><span class="line">&#x2F;* nav主体部分 *&#x2F;</span><br><span class="line">nav &#123;</span><br><span class="line">    border-radius: 8px;</span><br><span class="line">    margin: 0 4px 3px;</span><br><span class="line">    overflow: hidden;</span><br><span class="line">&#125;</span><br><span class="line">.nav-common &#123;</span><br><span class="line">    display: flex;</span><br><span class="line">    height: 88px;</span><br><span class="line">    &#x2F;* background-color: pink; *&#x2F;</span><br><span class="line">&#125;</span><br><span class="line">.nav-common:nth-child(2) &#123;</span><br><span class="line">    margin: 3px 0;</span><br><span class="line">&#125;</span><br><span class="line">.nav-items &#123;</span><br><span class="line">    flex: 1;</span><br><span class="line">    display: flex;</span><br><span class="line">    flex-direction: column;</span><br><span class="line">&#125;</span><br><span class="line">.nav-common a &#123;</span><br><span class="line">    flex: 1;</span><br><span class="line">    text-align: center;</span><br><span class="line">    line-height: 44px;</span><br><span class="line">    font-size: 14px;</span><br><span class="line">    color: #fff;</span><br><span class="line">    text-shadow: 1px 1px rgba(0, 0, 0, .2);</span><br><span class="line">&#125;</span><br><span class="line">.nav-common a:nth-child(1) &#123;</span><br><span class="line">    border-bottom: 1px solid #fff;</span><br><span class="line">&#125;</span><br><span class="line">.nav-items:nth-child(1) a &#123;</span><br><span class="line">    border: 0;</span><br><span class="line">    background: url(..&#x2F;images&#x2F;hotel.png) no-repeat bottom center;</span><br><span class="line">    background-size: 121px auto;</span><br><span class="line">&#125;</span><br><span class="line">&#x2F;* 前两个孩子 *&#x2F;</span><br><span class="line">.nav-items:nth-child(-n+2) &#123;</span><br><span class="line">    border-right: 1px solid #fff;</span><br><span class="line">&#125;</span><br><span class="line">.nav-common:nth-child(1) &#123;</span><br><span class="line">    background: -webkit-linear-gradient(left, #FA5A55, #FA994D);</span><br><span class="line">&#125;</span><br><span class="line">.nav-common:nth-child(2) &#123;</span><br><span class="line">    background: -webkit-linear-gradient(left, #4B90ED, #53BCED);</span><br><span class="line">&#125;</span><br><span class="line">.nav-common:nth-child(3) &#123;</span><br><span class="line">    background: -webkit-linear-gradient(left, #34C2A9, #6CD559);</span><br><span class="line">&#125;</span><br><span class="line"> &#x2F;* 侧导航栏  *&#x2F;</span><br><span class="line">.subnav-entry &#123;</span><br><span class="line">    display: flex;</span><br><span class="line">    flex-wrap: wrap;</span><br><span class="line">    border-radius: 8px;</span><br><span class="line">    background-color: #fff;</span><br><span class="line">    margin: 0 4px;</span><br><span class="line">    padding: 5px 0;</span><br><span class="line">    box-shadow: 1px 1px 2px rgba(0, 0, 0, .3);</span><br><span class="line">&#125;</span><br><span class="line">.subnav-entry li &#123;</span><br><span class="line">    flex: 20%;</span><br><span class="line">&#125;</span><br><span class="line">.subnav-entry a &#123;</span><br><span class="line">    display: flex;</span><br><span class="line">    flex-direction: column;</span><br><span class="line">    align-items: center;</span><br><span class="line">&#125;</span><br><span class="line">.subnav-entry-icon &#123;</span><br><span class="line">    width: 28px;</span><br><span class="line">    height: 28px;</span><br><span class="line">    margin-top: 4px;</span><br><span class="line">    background: url(..&#x2F;images&#x2F;subnav-bg.png) no-repeat;</span><br><span class="line">    background-size: 28px auto;</span><br><span class="line">&#125;</span><br><span class="line">.subnav-entry li:nth-child(2) .subnav-entry-icon &#123;</span><br><span class="line">    background-position: 0 -28px;</span><br><span class="line">&#125;</span><br><span class="line">.subnav-entry li:nth-child(3) .subnav-entry-icon &#123;</span><br><span class="line">    background-position: 0 -62px;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">.subnav-entry li:nth-child(4) .subnav-entry-icon &#123;</span><br><span class="line">    background-position: 0 -322px;</span><br><span class="line">&#125;</span><br><span class="line">.subnav-entry li:nth-child(5) .subnav-entry-icon &#123;</span><br><span class="line">    background-position: 0 -98px;</span><br><span class="line">&#125;</span><br><span class="line">.subnav-entry li:nth-child(6) .subnav-entry-icon &#123;</span><br><span class="line">    background-position: 5px -162px;</span><br><span class="line">&#125;</span><br><span class="line">.subnav-entry li:nth-child(7) .subnav-entry-icon &#123;</span><br><span class="line">    background-position: 0 -197px;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">.subnav-entry li:nth-child(8) .subnav-entry-icon &#123;</span><br><span class="line">    background-position: 0 -129px;</span><br><span class="line">&#125;</span><br><span class="line">.subnav-entry li:nth-child(9) .subnav-entry-icon &#123;</span><br><span class="line">    background-position: 0 -228px;</span><br><span class="line">&#125;</span><br><span class="line">.subnav-entry li:nth-child(10) .subnav-entry-icon &#123;</span><br><span class="line">    background-position: 4px -285px;</span><br><span class="line">&#125;</span><br><span class="line">&#x2F;* 销售模块 *&#x2F;</span><br><span class="line">.sales-box &#123;</span><br><span class="line">    border-top: 1px solid #bbb;</span><br><span class="line">    background-color: #fff;</span><br><span class="line">    margin: 4px;</span><br><span class="line">&#125;</span><br><span class="line">.sales-hd &#123;</span><br><span class="line">    position: relative;</span><br><span class="line">    height: 44px;</span><br><span class="line">    border-bottom: 1px solid #ccc;</span><br><span class="line">&#125;</span><br><span class="line">.sales-hd h2 &#123;</span><br><span class="line">    position: relative;</span><br><span class="line">    text-indent: -999px;</span><br><span class="line">    overflow: hidden;</span><br><span class="line">&#125;</span><br><span class="line">.sales-hd h2::after &#123;</span><br><span class="line">    position: absolute;</span><br><span class="line">    top: 8px;</span><br><span class="line">    left: 20px;</span><br><span class="line">    content: &quot;&quot;;</span><br><span class="line">    width: 79px;</span><br><span class="line">    height: 15px;</span><br><span class="line">    background: url(..&#x2F;images&#x2F;hot.png) no-repeat 0 -20px;</span><br><span class="line">    background-size: 79px auto;</span><br><span class="line">&#125;</span><br><span class="line">.more &#123;</span><br><span class="line">    position: absolute;</span><br><span class="line">    top: 0px;</span><br><span class="line">    right: 10px;</span><br><span class="line">    background: -webkit-linear-gradient(left, #FF506C, #FF6BC6);</span><br><span class="line">    border-radius: 15px;</span><br><span class="line">    padding: 3px 20px 3px 10px;</span><br><span class="line">    color: #fff;</span><br><span class="line">&#125;</span><br><span class="line">.more::after &#123;</span><br><span class="line">    content: &quot;&quot;;</span><br><span class="line">    position: absolute;</span><br><span class="line">    top: 9px;</span><br><span class="line">    right: 9px;</span><br><span class="line">    width: 7px;</span><br><span class="line">    height: 7px;</span><br><span class="line">    border-top: 2px solid #fff;</span><br><span class="line">    border-right: 2px solid #fff;</span><br><span class="line">    transform: rotate(45deg);</span><br><span class="line">&#125;</span><br><span class="line">.row &#123;</span><br><span class="line">    display: flex;</span><br><span class="line">&#125;</span><br><span class="line">.row a &#123;</span><br><span class="line">    flex: 1;</span><br><span class="line">    border-bottom: 1px solid #eee;</span><br><span class="line">&#125;</span><br><span class="line">.row a:nth-child(1) &#123;</span><br><span class="line">    border-right: 1px solid #eee;</span><br><span class="line">&#125;</span><br><span class="line">.row a img &#123;</span><br><span class="line">    width: 100%;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>知识点：</p><p>1.添加box-sizing: border-box;后，padding（内边距）和borer（边框）不会撑大盒子</p><p>2.当给盒子添加绝对定位或固定定位后，margin: 0 atuo;不能使盒子水平居中，此时可以left: 50%，再transform: translateX(-50%);来实现水平居中</p><p>3.margin中的auto值对行内元素无效，只有x轴去具体值时，才对行内元素有效，无论y取何值，对行内元素都无效；margin中的auto值对行内块元素无效，x轴和y轴取具体值时，对行内块元素都有效。</p><p>4.行内块元素加了padding会撑大盒子（行内块盒子），利用此性质可以时行内块盒子里面的文字水平垂直居中。</p><p>5.常见flex布局思路：默认主轴是x轴–&gt;把主轴设置为y轴–&gt;把侧轴设为垂直居中</p><p><img src= "/img/loading.gif" data-src="https://i.loli.net/2020/08/12/zQCbFUkTMuKlVvO.png" alt=""></p><p>6.结构伪类选择器E:nth-child(n)、E:nth-of-type(n)</p><p>7.属性选择器：E[att^=”val”]（开头）、E[att$=”val”]（结尾）、E[att*=”val”]（含有）</p><p>8.背景渐变效果：background: -webkit-linear-gradient(left, red, yellow);从左边开始，由红色向黄色渐变。也可以background: -webkit-linear-gradient(left top, red, yellow);从左上角开始</p><p>9.父级盒子加了display: flex;子级盒子可以写flex: 20%;来实现占一行的20%宽度（子盒子不用写宽度）</p><p>10.把盒子里面的文字隐藏起来，可以添加text-index: -999px;，再添加overflo: hidden;来实现</p><p>巨坑：</p><p>午觉醒来，天昏地暗</p><p>心得：</p><p>好好学习，天天向上！我们永远只是个需要努力的菜鸟</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\js\APlayer.min.js&quot; class=&quot;aplayer-se
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>今日小结14</title>
    <link href="https://hgq169168.github.io/2020/08/11/%E4%BB%8A%E6%97%A5%E5%B0%8F%E7%BB%9314/"/>
    <id>https://hgq169168.github.io/2020/08/11/%E4%BB%8A%E6%97%A5%E5%B0%8F%E7%BB%9314/</id>
    <published>2020-08-11T14:08:39.000Z</published>
    <updated>2020-08-11T14:56:55.910Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><h2 id="flex布局"><a href="#flex布局" class="headerlink" title="flex布局"></a><center>flex布局</center></h2><h3 id="flex原理"><a href="#flex原理" class="headerlink" title="flex原理"></a>flex原理</h3><p>1.为父盒子添加flex布局后，子元素的float、clear、vertical-align属性失效</p><p>2.采用flex布局的元素，为flex容器，它的所有子元素自动成为容器成员，称为flex子项目</p><h3 id="常见的父项属性"><a href="#常见的父项属性" class="headerlink" title="常见的父项属性"></a>常见的父项属性</h3><p>1.flex-direction：设置主轴的方向（默认主轴是x轴，则侧轴就是y轴）</p><p>属性：</p><p>（1）row：从左往右</p><p>（2）row-reverse：从右往左</p><p>（3）column：从上往上 （此时，主轴变为y轴，则侧轴变为x轴）</p><p>（4）column-reverse：从上往下（此时，主轴变为y轴，则侧轴变为x轴）</p><p>2.justifly-content：设置主轴上子元素的排列方式（所有子元素都被控制）</p><p>（1）flex-start：从头开始排列（默认）</p><p>（2）flex-end：从尾部开始排列</p><p>（3）center：居中对齐</p><p>（4）space-around：平分剩余空间</p><p>（5）space-between：先两边贴边，再平分剩余空间</p><p>3.flex-wrap：设置子元素是否换行</p><p>（1）nowrap：不换行（默认）</p><p>（2）wrap：换行</p><p>4.flex-items：设置侧轴上的子元素排列方式（单行）（默认侧轴是y轴）</p><p>（1）flex-start：从头部开始</p><p>（2）flex-end：从尾部开始</p><p>（3）center：居中对齐</p><p>（4）stretch：拉伸（默认），子元素不可以设置高度</p><p>5.flex-content：设置侧轴上的子元素排列方式（多行）（默认侧轴是y轴），只能用于子项目出现换行的情况（多行），在单行没有效果</p><p>（1）flex-start：从头部开始</p><p>（2）flex-end：从尾部开始</p><p>（3）center：居中对齐</p><p>（4）stretch：拉伸（默认），子元素不可以设置高度</p><p>（5）space-around：平分剩余空间</p><p>（6）space-between：先两边贴边，再平分剩余空间</p><p>6.flex-flow：flex-directon和flex-wrap的复合写法</p><p>​    flex-flow: column wrap;</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang&#x3D;&quot;en&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset&#x3D;&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;meta name&#x3D;&quot;viewport&quot; content&#x3D;&quot;width&#x3D;device-width, initial-scale&#x3D;1.0&quot;&gt;</span><br><span class="line">    &lt;title&gt;07align-content设置侧轴上子元素的排列方式&lt;&#x2F;title&gt;</span><br><span class="line">    &lt;style&gt;</span><br><span class="line">        div &#123;</span><br><span class="line">            display: flex;</span><br><span class="line">            &#x2F;* 默认的是主轴即x轴，同时y轴为侧轴，从左到右排列  我们的子元素是跟着主轴来排列的*&#x2F;</span><br><span class="line">            flex-direction: row;</span><br><span class="line">            &#x2F;* 设置主轴子元素的排列方式 *&#x2F;</span><br><span class="line">            &#x2F;* justify-content: center; *&#x2F;</span><br><span class="line">            &#x2F;* 子元素是否换行 默认不换行（nowrap）、换行（wrap）*&#x2F;</span><br><span class="line">            flex-wrap: wrap;</span><br><span class="line">            &#x2F;* 设置侧轴子元素的对齐方式( 单行的 ) 默认是拉伸（stretch），此时子元素不能有高度*&#x2F;</span><br><span class="line">            align-items: stretch;</span><br><span class="line">            &#x2F;* 侧轴子元素居中对齐 *&#x2F;</span><br><span class="line">            &#x2F;* align-items: center; *&#x2F;</span><br><span class="line"></span><br><span class="line">            &#x2F;* 设置侧轴子元素的对齐方式( 多行的 ) 默认是flex-start（从头部开始），此时子元素不能有高度*&#x2F;</span><br><span class="line">            &#x2F;* align-content: flex-start; *&#x2F;</span><br><span class="line">            &#x2F;* 侧轴子元素居中对齐 *&#x2F;</span><br><span class="line">            &#x2F;* align-content: center; *&#x2F;</span><br><span class="line">            &#x2F;* align-content: space-between; *&#x2F;</span><br><span class="line">            &#x2F;* align-content: space-around; *&#x2F;</span><br><span class="line">            &#x2F;* align-content: stretch; *&#x2F;</span><br><span class="line">            width: 800px;</span><br><span class="line">            height: 500px;</span><br><span class="line">            background-color: greenyellow;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        span &#123;</span><br><span class="line">            width: 100px;</span><br><span class="line">            height: 100px;</span><br><span class="line">            margin: 5px;</span><br><span class="line">            background-color: hotpink;</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;&#x2F;style&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;div&gt;</span><br><span class="line">        &lt;span&gt;1&lt;&#x2F;span&gt;</span><br><span class="line">        &lt;span&gt;2&lt;&#x2F;span&gt;</span><br><span class="line">        &lt;span&gt;3&lt;&#x2F;span&gt;</span><br><span class="line">        &lt;span&gt;4&lt;&#x2F;span&gt;</span><br><span class="line">        &lt;span&gt;5&lt;&#x2F;span&gt;</span><br><span class="line">        &lt;span&gt;1&lt;&#x2F;span&gt;</span><br><span class="line">        &lt;span&gt;2&lt;&#x2F;span&gt;</span><br><span class="line">        &lt;span&gt;3&lt;&#x2F;span&gt;</span><br><span class="line">        &lt;span&gt;4&lt;&#x2F;span&gt;</span><br><span class="line"></span><br><span class="line">    &lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure><h3 id="flex布局子元素常见属性"><a href="#flex布局子元素常见属性" class="headerlink" title="flex布局子元素常见属性"></a>flex布局子元素常见属性</h3><p>1.flex：子项目占的份数，分配子项目剩余空间</p><p>​    flex: 3; 默认是0</p><p>2.align-self：控制子项目自己在侧轴的排列方式，允许单个项目有与其他子项目不一样的对齐方式，可以覆盖align-items属性。</p><p>​    align-self: flex-end; 默认值是auto，不行或写auto，会继承父元素的align-items属性</p><p>3.order：数值越小，排列越靠前，默认值为0</p><p>​    order: -1;</p><h3 id="今日知识点"><a href="#今日知识点" class="headerlink" title="今日知识点"></a>今日知识点</h3><p>1.固定（fixed）盒子要有宽度</p><p>2.加了绝对对位、固定定位的盒子，不可以通过margin: auto; 实现水平居中，可以通过left: 50%, 在transform: translate(-50%); 来实现。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang&#x3D;&quot;en&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset&#x3D;&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;meta name&#x3D;&quot;viewport&quot; content&#x3D;&quot;width&#x3D;device-width, initial-scale&#x3D;1.0&quot;&gt;</span><br><span class="line">    &lt;title&gt;10 alig-self和order&lt;&#x2F;title&gt;</span><br><span class="line">    &lt;style&gt;</span><br><span class="line">        div &#123;</span><br><span class="line">            display: flex;</span><br><span class="line">            width: 80%;</span><br><span class="line">            height: 300px;</span><br><span class="line">            background-color: khaki;</span><br><span class="line">            &#x2F;* 会让三个子盒子都往下移动，沿着底侧对齐 *&#x2F;</span><br><span class="line">            &#x2F;* align-items: flex-end; *&#x2F;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        div span &#123;</span><br><span class="line">            width: 100px;</span><br><span class="line">            height: 100px;</span><br><span class="line">            background-color: lawngreen;</span><br><span class="line">            margin: 5px;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        div span:nth-child(2) &#123;</span><br><span class="line">            &#x2F;* 让第二个自盒子向下移动，沿着底侧对齐 *&#x2F;</span><br><span class="line">            align-self: flex-end;</span><br><span class="line">            order: -1;</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;&#x2F;style&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;div&gt;</span><br><span class="line">        &lt;span&gt;1&lt;&#x2F;span&gt;</span><br><span class="line">        &lt;span&gt;2&lt;&#x2F;span&gt;</span><br><span class="line">        &lt;span&gt;3&lt;&#x2F;span&gt;</span><br><span class="line">    &lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\js\APlayer.min.js&quot; class=&quot;aplayer-se
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>今日小结13</title>
    <link href="https://hgq169168.github.io/2020/08/10/%E4%BB%8A%E6%97%A5%E5%B0%8F%E7%BB%9313/"/>
    <id>https://hgq169168.github.io/2020/08/10/%E4%BB%8A%E6%97%A5%E5%B0%8F%E7%BB%9313/</id>
    <published>2020-08-10T14:27:40.000Z</published>
    <updated>2020-08-11T00:47:15.475Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><h2 id="今天学了移动端流式布局（百分比布局）京东首页案例"><a href="#今天学了移动端流式布局（百分比布局）京东首页案例" class="headerlink" title="今天学了移动端流式布局（百分比布局）京东首页案例"></a><center>今天学了移动端流式布局（百分比布局）京东首页案例</center></h2><p>放开那女孩，让我来……..（开个玩笑！我最喜欢开玩笑了）</p><p>1.首先让我来大体介绍京东首页案例的大体结构：</p><p>京东首页案例分成三个大部分，分别是顶部（header）、搜索、主题部分。</p><p>（1）顶部是一个浮动框，里面包含关闭按钮、打开京东app的字体、打开按钮框</p><p>（2）搜索模块：则包含功能列表（图）、搜索图标、表单框（目前有一个div代替）、登录按钮（也是用一个div盒子代替）</p><p>（3）主体部分：包括滑动图、小家电品牌日、nav、新闻等模块，每个模块又包含对应的功能</p><p>是不是，还没看懂，这就对了，，，，看图吧</p><p><img src= "/img/loading.gif" data-src="https://i.loli.net/2020/08/10/FiqeJ4dKs1OfUPn.png" alt=""></p><p>看懂了吧，，什么还看不懂，，那行，，请看html文件代码吧：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang&#x3D;&quot;en&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset&#x3D;&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;meta name&#x3D;&quot;viewport&quot;</span><br><span class="line">        content&#x3D;&quot;width&#x3D;device-width, initial-scale&#x3D;1.0, user-scalable&#x3D;no,maximum-scale&#x3D;1.0,minimum-scale&#x3D;1.0&quot;&gt;</span><br><span class="line">    &lt;meta http-equiv&#x3D;&quot;X-UA-Compatible&quot; content&#x3D;&quot;ie&#x3D;edge&quot;&gt;</span><br><span class="line">    &lt;!-- 引入我们的css初始化文件 --&gt;</span><br><span class="line">    &lt;link rel&#x3D;&quot;stylesheet&quot; href&#x3D;&quot;css&#x2F;normalize.css&quot;&gt;</span><br><span class="line">    &lt;!-- 引入我们首页的css --&gt;</span><br><span class="line">    &lt;link rel&#x3D;&quot;stylesheet&quot; href&#x3D;&quot;css&#x2F;index.css&quot;&gt;</span><br><span class="line">    &lt;title&gt;京东首页&lt;&#x2F;title&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;!-- 顶部 --&gt;</span><br><span class="line">    &lt;header class&#x3D;&quot;app&quot;&gt;</span><br><span class="line">        &lt;ul&gt;</span><br><span class="line">            &lt;li&gt;</span><br><span class="line">                &lt;img src&#x3D;&quot;images&#x2F;close.png&quot; alt&#x3D;&quot;&quot;&gt;</span><br><span class="line">            &lt;&#x2F;li&gt;</span><br><span class="line">            &lt;li&gt;</span><br><span class="line">                &lt;img src&#x3D;&quot;images&#x2F;logo.png&quot; alt&#x3D;&quot;&quot;&gt;</span><br><span class="line">            &lt;&#x2F;li&gt;</span><br><span class="line">            &lt;li&gt;打开京东App，购物更轻松&lt;&#x2F;li&gt;</span><br><span class="line">            &lt;li&gt;立即打开&lt;&#x2F;li&gt;</span><br><span class="line">        &lt;&#x2F;ul&gt;</span><br><span class="line">    &lt;&#x2F;header&gt;</span><br><span class="line">    &lt;!-- 搜索 --&gt;</span><br><span class="line">    &lt;div class&#x3D;&quot;search-wrap&quot;&gt;</span><br><span class="line">        &lt;div class&#x3D;&quot;search-btn&quot;&gt;&lt;&#x2F;div&gt;</span><br><span class="line">        &lt;div class&#x3D;&quot;search&quot;&gt;</span><br><span class="line">            &lt;div class&#x3D;&quot;jd-icon&quot;&gt;&lt;&#x2F;div&gt;</span><br><span class="line">            &lt;div class&#x3D;&quot;sou&quot;&gt;&lt;&#x2F;div&gt;</span><br><span class="line">        &lt;&#x2F;div&gt;</span><br><span class="line">        &lt;div class&#x3D;&quot;search-login&quot;&gt;登陆&lt;&#x2F;div&gt;</span><br><span class="line">    &lt;&#x2F;div&gt;</span><br><span class="line">    &lt;!-- 主体部分 --&gt;</span><br><span class="line">    &lt;div class&#x3D;&quot;main-content&quot;&gt;</span><br><span class="line">        &lt;!-- 滑动图 --&gt;</span><br><span class="line">        &lt;div class&#x3D;&quot;slider&quot;&gt;</span><br><span class="line">            &lt;img src&#x3D;&quot;upload&#x2F;banner.dpg&quot; alt&#x3D;&quot;&quot;&gt;</span><br><span class="line">        &lt;&#x2F;div&gt;</span><br><span class="line">        &lt;!-- 小家电品牌日 --&gt;</span><br><span class="line">        &lt;div class&#x3D;&quot;brand&quot;&gt;</span><br><span class="line">            &lt;div&gt;</span><br><span class="line">                &lt;a href&#x3D;&quot;#&quot;&gt;&lt;img src&#x3D;&quot;upload&#x2F;pic11.dpg&quot; alt&#x3D;&quot;&quot;&gt;&lt;&#x2F;a&gt;</span><br><span class="line">            &lt;&#x2F;div&gt;</span><br><span class="line">            &lt;div&gt;</span><br><span class="line">                &lt;a href&#x3D;&quot;#&quot;&gt;&lt;img src&#x3D;&quot;upload&#x2F;pic22.dpg&quot; alt&#x3D;&quot;&quot;&gt;&lt;&#x2F;a&gt;</span><br><span class="line">            &lt;&#x2F;div&gt;</span><br><span class="line">            &lt;div&gt;</span><br><span class="line">                &lt;a href&#x3D;&quot;#&quot;&gt;&lt;img src&#x3D;&quot;upload&#x2F;pic33.dpg&quot; alt&#x3D;&quot;&quot;&gt;&lt;&#x2F;a&gt;</span><br><span class="line">            &lt;&#x2F;div&gt;</span><br><span class="line">        &lt;&#x2F;div&gt;</span><br><span class="line">        &lt;!-- nav模块 --&gt;</span><br><span class="line">        &lt;nav class&#x3D;&quot;clearfix&quot;&gt;</span><br><span class="line">            &lt;a href&#x3D;&quot;#&quot;&gt;</span><br><span class="line">                &lt;img src&#x3D;&quot;upload&#x2F;nav1.webp&quot; alt&#x3D;&quot;&quot;&gt;</span><br><span class="line">                &lt;span&gt;京东超市&lt;&#x2F;span&gt;</span><br><span class="line">            &lt;&#x2F;a&gt;</span><br><span class="line">            &lt;a href&#x3D;&quot;#&quot;&gt;</span><br><span class="line">                &lt;img src&#x3D;&quot;upload&#x2F;nav1.webp&quot; alt&#x3D;&quot;&quot;&gt;</span><br><span class="line">                &lt;span&gt;京东超市&lt;&#x2F;span&gt;</span><br><span class="line">            &lt;&#x2F;a&gt;</span><br><span class="line">            &lt;a href&#x3D;&quot;#&quot;&gt;</span><br><span class="line">                &lt;img src&#x3D;&quot;upload&#x2F;nav1.webp&quot; alt&#x3D;&quot;&quot;&gt;</span><br><span class="line">                &lt;span&gt;京东超市&lt;&#x2F;span&gt;</span><br><span class="line">            &lt;&#x2F;a&gt;</span><br><span class="line">            &lt;a href&#x3D;&quot;#&quot;&gt;</span><br><span class="line">                &lt;img src&#x3D;&quot;upload&#x2F;nav2.webp&quot; alt&#x3D;&quot;&quot;&gt;</span><br><span class="line">                &lt;span&gt;全球购&lt;&#x2F;span&gt;</span><br><span class="line">            &lt;&#x2F;a&gt;</span><br><span class="line">            &lt;a href&#x3D;&quot;#&quot;&gt;</span><br><span class="line">                &lt;img src&#x3D;&quot;upload&#x2F;nav3.webp&quot; alt&#x3D;&quot;&quot;&gt;</span><br><span class="line">                &lt;span&gt;充值缴费&lt;&#x2F;span&gt;</span><br><span class="line">            &lt;&#x2F;a&gt;</span><br><span class="line">            &lt;a href&#x3D;&quot;#&quot;&gt;</span><br><span class="line">                &lt;img src&#x3D;&quot;upload&#x2F;nav1.webp&quot; alt&#x3D;&quot;&quot;&gt;</span><br><span class="line">                &lt;span&gt;京东超市&lt;&#x2F;span&gt;</span><br><span class="line">            &lt;&#x2F;a&gt;</span><br><span class="line">            &lt;a href&#x3D;&quot;#&quot;&gt;</span><br><span class="line">                &lt;img src&#x3D;&quot;upload&#x2F;nav1.webp&quot; alt&#x3D;&quot;&quot;&gt;</span><br><span class="line">                &lt;span&gt;京东超市&lt;&#x2F;span&gt;</span><br><span class="line">            &lt;&#x2F;a&gt;</span><br><span class="line">            &lt;a href&#x3D;&quot;#&quot;&gt;</span><br><span class="line">                &lt;img src&#x3D;&quot;upload&#x2F;nav1.webp&quot; alt&#x3D;&quot;&quot;&gt;</span><br><span class="line">                &lt;span&gt;京东超市&lt;&#x2F;span&gt;</span><br><span class="line">            &lt;&#x2F;a&gt;</span><br><span class="line">            &lt;a href&#x3D;&quot;#&quot;&gt;</span><br><span class="line">                &lt;img src&#x3D;&quot;upload&#x2F;nav1.webp&quot; alt&#x3D;&quot;&quot;&gt;</span><br><span class="line">                &lt;span&gt;京东超市&lt;&#x2F;span&gt;</span><br><span class="line">            &lt;&#x2F;a&gt;</span><br><span class="line">            &lt;a href&#x3D;&quot;#&quot;&gt;</span><br><span class="line">                &lt;img src&#x3D;&quot;upload&#x2F;nav1.webp&quot; alt&#x3D;&quot;&quot;&gt;</span><br><span class="line">                &lt;span&gt;京东超市&lt;&#x2F;span&gt;</span><br><span class="line">            &lt;&#x2F;a&gt;</span><br><span class="line">        &lt;&#x2F;nav&gt;</span><br><span class="line">        &lt;!-- 新闻模块 --&gt;</span><br><span class="line">        &lt;div class&#x3D;&quot;news&quot;&gt;</span><br><span class="line">            &lt;a href&#x3D;&quot;#&quot;&gt;</span><br><span class="line">                &lt;img src&#x3D;&quot;upload&#x2F;new1.dpg&quot; alt&#x3D;&quot;&quot;&gt;</span><br><span class="line">            &lt;&#x2F;a&gt;</span><br><span class="line">            &lt;a href&#x3D;&quot;#&quot;&gt;</span><br><span class="line">                &lt;img src&#x3D;&quot;upload&#x2F;new2.dpg&quot; alt&#x3D;&quot;&quot;&gt;</span><br><span class="line">            &lt;&#x2F;a&gt;</span><br><span class="line">            &lt;a href&#x3D;&quot;#&quot;&gt;</span><br><span class="line">                &lt;img src&#x3D;&quot;upload&#x2F;new3.dpg&quot; alt&#x3D;&quot;&quot;&gt;</span><br><span class="line">            &lt;&#x2F;a&gt;</span><br><span class="line">        &lt;&#x2F;div&gt;</span><br><span class="line">    &lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure><p>好了好了，咱们聊聊今天碰到的知识点、坑与心得</p><p>先上css文件代码吧！</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br></pre></td><td class="code"><pre><span class="line">body &#123;</span><br><span class="line">    width: 100%;</span><br><span class="line">    min-width: 320px;</span><br><span class="line">    max-width: 640px;</span><br><span class="line">    margin: 0 auto;</span><br><span class="line">    font-size: 14px;</span><br><span class="line">    font-family: -apple-system, Helvetica, sans-serif;</span><br><span class="line">    color: #666;</span><br><span class="line">    line-height: 1.5;</span><br><span class="line">&#125;</span><br><span class="line">&#x2F;*点击高亮我们需要清除清除  设置为transparent 完成透明*&#x2F;</span><br><span class="line">* &#123;</span><br><span class="line">    -webkit-tap-highlight-color: transparent;</span><br><span class="line">&#125;</span><br><span class="line">&#x2F;*在移动端浏览器默认的外观在iOS上加上这个属性才能给按钮和输入框自定义样式*&#x2F;</span><br><span class="line">input &#123;</span><br><span class="line">    -webkit-appearance: none;</span><br><span class="line">&#125;</span><br><span class="line">&#x2F;*禁用长按页面时的弹出菜单*&#x2F;</span><br><span class="line">img,</span><br><span class="line">a &#123;</span><br><span class="line">    -webkit-touch-callout: none;</span><br><span class="line">&#125;</span><br><span class="line">a &#123;</span><br><span class="line">    color: #666;</span><br><span class="line">    text-decoration: none;</span><br><span class="line">&#125;</span><br><span class="line">ul &#123;</span><br><span class="line">    margin: 0;</span><br><span class="line">    padding: 0;</span><br><span class="line">    list-style: none;</span><br><span class="line">&#125;</span><br><span class="line">img &#123;</span><br><span class="line">    vertical-align: middle;</span><br><span class="line">&#125;</span><br><span class="line">div &#123;</span><br><span class="line">    &#x2F;* css3 盒子模型 *&#x2F;</span><br><span class="line">    box-sizing: border-box;</span><br><span class="line">&#125;</span><br><span class="line">&#x2F;* .clearfix:after &#123;</span><br><span class="line">    content: &quot;&quot;;</span><br><span class="line">    display: block;</span><br><span class="line">    line-height: 0;</span><br><span class="line">    visibility: hidden;</span><br><span class="line">    height: 0;</span><br><span class="line">    clear: both;</span><br><span class="line">&#125; *&#x2F;</span><br><span class="line">.app &#123;</span><br><span class="line">    height: 45px;</span><br><span class="line">&#125;</span><br><span class="line">.app ul li &#123;</span><br><span class="line">    float: left;</span><br><span class="line">    height: 45px;</span><br><span class="line">    line-height: 45px;</span><br><span class="line">    background-color: #333333;</span><br><span class="line">    text-align: center;</span><br><span class="line">    color: #fff;</span><br><span class="line">&#125;</span><br><span class="line">.app ul li:nth-child(1) &#123;</span><br><span class="line">    width: 8%;</span><br><span class="line">&#125;</span><br><span class="line">.app ul li:nth-child(1) img &#123;</span><br><span class="line">    width: 10px;</span><br><span class="line">&#125;</span><br><span class="line">.app ul li:nth-child(2) &#123;</span><br><span class="line">    width: 10%;</span><br><span class="line">&#125;</span><br><span class="line">.app ul li:nth-child(2) img &#123;</span><br><span class="line">    width: 30px;</span><br><span class="line">    vertical-align: middle;</span><br><span class="line">&#125;</span><br><span class="line">.app ul li:nth-child(3) &#123;</span><br><span class="line">    width: 57%;</span><br><span class="line">&#125;</span><br><span class="line">.app ul li:nth-child(4) &#123;</span><br><span class="line">    width: 25%;</span><br><span class="line">    background-color: #F63515;</span><br><span class="line">&#125;</span><br><span class="line">&#x2F;* 搜索 *&#x2F;</span><br><span class="line">.search-wrap &#123;</span><br><span class="line">    position: fixed;</span><br><span class="line">    overflow: hidden;</span><br><span class="line">    width: 100%;</span><br><span class="line">    height: 44px;</span><br><span class="line">    min-width: 320px;</span><br><span class="line">    max-width: 640px;</span><br><span class="line">&#125;</span><br><span class="line">.search-btn &#123;</span><br><span class="line">    position: absolute;</span><br><span class="line">    top: 0;</span><br><span class="line">    left: 0;</span><br><span class="line">    width: 40px;</span><br><span class="line">    height: 44px;</span><br><span class="line">&#125;</span><br><span class="line">.search-btn::before &#123;</span><br><span class="line">    content: &quot;&quot;;</span><br><span class="line">    display: block;</span><br><span class="line">    width: 20px;</span><br><span class="line">    height: 18px;</span><br><span class="line">    background: url(..&#x2F;images&#x2F;s-btn.png) no-repeat;</span><br><span class="line">    background-size: 20px 18px;</span><br><span class="line">    margin: 14px 0 0 15px;</span><br><span class="line">&#125;</span><br><span class="line">.search-login &#123;</span><br><span class="line">    position: absolute;</span><br><span class="line">    right: 0;</span><br><span class="line">    top: 0;</span><br><span class="line">    width: 40px;</span><br><span class="line">    height: 44px;</span><br><span class="line">    color: #fff;</span><br><span class="line">    line-height: 44px;</span><br><span class="line">&#125;</span><br><span class="line">.search &#123;</span><br><span class="line">    position: relative;</span><br><span class="line">    height: 30px;</span><br><span class="line">    background-color: #fff;</span><br><span class="line">    margin: 0 50px;</span><br><span class="line">    border-radius: 15px;</span><br><span class="line">    margin-top: 7px;</span><br><span class="line">&#125;</span><br><span class="line">.jd-icon &#123;</span><br><span class="line">    width: 20px;</span><br><span class="line">    height: 15px;</span><br><span class="line">    position: absolute;</span><br><span class="line">    top: 8px;</span><br><span class="line">    left: 13px;</span><br><span class="line">    background: url(..&#x2F;images&#x2F;jd.png) no-repeat;</span><br><span class="line">    background-size: 20px 15px;</span><br><span class="line">&#125;</span><br><span class="line">.jd-icon::after &#123;</span><br><span class="line">    content: &quot;&quot;;</span><br><span class="line">    position: absolute;</span><br><span class="line">    right: -8px;</span><br><span class="line">    top: 0;</span><br><span class="line">    display: block;</span><br><span class="line">    width: 1px;</span><br><span class="line">    height: 15px;</span><br><span class="line">    background-color: #ccc;</span><br><span class="line">&#125;</span><br><span class="line">.sou &#123;</span><br><span class="line">    position: absolute;</span><br><span class="line">    top: 8px;</span><br><span class="line">    left: 50px;</span><br><span class="line">    width: 18px;</span><br><span class="line">    height: 15px;</span><br><span class="line">    background: url(..&#x2F;images&#x2F;jd-sprites.png) no-repeat -81px 0;</span><br><span class="line">    background-size: 200px auto;</span><br><span class="line">&#125;</span><br><span class="line">.slider img &#123;</span><br><span class="line">    width: 100%;</span><br><span class="line">&#125;</span><br><span class="line">&#x2F;* 品牌日 *&#x2F;</span><br><span class="line">.brand &#123;</span><br><span class="line">    overflow: hidden;</span><br><span class="line">    border-radius: 10px 10px 0 0;</span><br><span class="line">&#125;</span><br><span class="line">.brand div &#123;</span><br><span class="line">    float: left;</span><br><span class="line">    width: 33.33%;</span><br><span class="line">&#125;</span><br><span class="line">.brand div img &#123;</span><br><span class="line">    width: 100%;</span><br><span class="line">&#125;</span><br><span class="line">&#x2F;* nav *&#x2F;</span><br><span class="line">nav &#123;</span><br><span class="line">    overflow: hidden;</span><br><span class="line">    padding-top: 5px;</span><br><span class="line">    &#x2F;* border: 5px solid red; *&#x2F;</span><br><span class="line">&#125;</span><br><span class="line">nav a &#123;</span><br><span class="line">    float: left;</span><br><span class="line">    width: 20%;</span><br><span class="line">    text-align: center;</span><br><span class="line">&#125;</span><br><span class="line">nav a img &#123;</span><br><span class="line">    width: 40px;</span><br><span class="line">    margin: 10px 0;</span><br><span class="line">&#125;</span><br><span class="line">nav a span &#123;</span><br><span class="line">    display: block;</span><br><span class="line">&#125;</span><br><span class="line">&#x2F;* news *&#x2F;</span><br><span class="line">.news &#123;</span><br><span class="line">    &#x2F;* border: 5px solid pink; *&#x2F;</span><br><span class="line">    margin-top: 20px;</span><br><span class="line">&#125;</span><br><span class="line">.news img &#123;</span><br><span class="line">    width: 100%;</span><br><span class="line">&#125;</span><br><span class="line">.news a &#123;</span><br><span class="line">    float: left;</span><br><span class="line">    box-sizing: border-box;</span><br><span class="line">&#125;</span><br><span class="line">.news a:nth-child(1) &#123;</span><br><span class="line">    width: 50%;</span><br><span class="line">&#125;</span><br><span class="line">&#x2F;* .news a:nth-child(2),</span><br><span class="line">.news a:nth-child(3),</span><br><span class="line">&#123;</span><br><span class="line">    width: 25%;</span><br><span class="line">&#125; *&#x2F;</span><br><span class="line">&#x2F;* n+2 就是从从2个往后面选 *&#x2F;</span><br><span class="line"></span><br><span class="line">.news a:nth-child(n+2) &#123;</span><br><span class="line">    width: 25%;</span><br><span class="line">    border-left: 1px solid #ccc;</span><br><span class="line">&#125;</span><br><span class="line">&#x2F;* .news a:nth-child(3) &#123;</span><br><span class="line">    width: 25%;</span><br><span class="line">&#125; *&#x2F;</span><br></pre></td></tr></table></figure><p>知识点：</p><p>1.流式布局的宽度通过设置成百分比来根据屏幕的宽度来进行伸缩，高度一般不设置（通过子元素的高来撑大）</p><p>2.为了控制宽度的合理范围，可以通过max-width（最大宽度）和min-width（最新宽度）的进行控制</p><p>3.因为图片默认使与文字基线对齐，所以会导致底部又空白缝隙，所以可以通过vertical-align: middle|top|bottom;来设置对齐方式，以去除空白缝隙。（本例采用middle）</p><p>4.利用css3盒子模型box-sizing: border-box; 可以消除padding、border对撑大盒子的影响。</p><p>5.同一行显示几个盒子，可它们的百分比之和等于100%来进行一行显示。</p><p>6.记住口诀：“子绝父相”</p><p>7.伪元素选择器::beform和::after是分别在元素内部的前面和后面插入一个行内元素，并且必须又content属性（可以写””)</p><p>8.css3新增属性background-size，可以用来缩放背景图片的尺寸。</p><p>9.可以设置盒子width: 1px; height: 15px; 等来画一条|线</p><p>10.list-style: none; 可以去除li元素的实心圆点，text-decoration: none; 可以去除a元素的下划线</p><p>巨坑：</p><p>1.当父盒子father1（没高度）里面的子元素是浮动元素，并且其子元素有高度（100px），占满了一行。这时父盒子father2（没高度）排列在father1下面，father2的子元素也是浮动元素（高度为100px），占满一行。此时，如果直接给father2设置margin-top: 15px; ，这时会发现father2的子元素没有向下移动15px，为何？</p><p>就知道你不懂了，请看解答！</p><p>原因在于没给father1（标准流）清除浮动！因为father1没高度，并且其子元素是浮动的（脱标了），同时father2（标准流）也是这种情况，所以当给father2添加margin-top: 15px; 时，father2实际是有增加了上外边距15px，只不过是离father1有15px距离（和father1一样，都被father1的子元素压着），而father1的子元素高度为100px，由于100px&gt;15px，所以father2的子元素（浮动的）紧挨着father1的子元素（浮动）。当然，如果给father2设置margin-top: 115px; ，father2的元素是会往下移动15px的。</p><p>心得：</p><p>好好学习，天天向上！我们永远只是个需要努力的菜鸟</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\js\APlayer.min.js&quot; class=&quot;aplayer-se
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>今日小结12</title>
    <link href="https://hgq169168.github.io/2020/08/09/%E4%BB%8A%E6%97%A5%E5%B0%8F%E7%BB%9312/"/>
    <id>https://hgq169168.github.io/2020/08/09/%E4%BB%8A%E6%97%A5%E5%B0%8F%E7%BB%9312/</id>
    <published>2020-08-09T13:51:24.000Z</published>
    <updated>2020-08-09T14:37:36.671Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><h2 id="移动端基础"><a href="#移动端基础" class="headerlink" title="移动端基础"></a><center>移动端基础</center></h2><h3 id="移动端调试方法："><a href="#移动端调试方法：" class="headerlink" title="移动端调试方法："></a>移动端调试方法：</h3><p>1.chrom DevTools（谷歌浏览器）的模拟手机调试。（其它浏览器也行）</p><p>2.搭建本地web服务器，手机和服务器一个局域网内，通过手机访问服务器</p><p>3.使用外网服务器，直接IP或域名访问</p><h3 id="视口（布局视口、视觉视口、理想视口）："><a href="#视口（布局视口、视觉视口、理想视口）：" class="headerlink" title="视口（布局视口、视觉视口、理想视口）："></a>视口（布局视口、视觉视口、理想视口）：</h3><p>1.布局视口：</p><p>（1）一般移动端设备的浏览器都默认设置了布局视口，用于解决早期的pc端页面再手机上显示的问题</p><p>（2）ios、Android基本都将这个视口分辨率设置为980px，所以pc上的网页大多能在手机上呈现，只不过元素看上去很小，一般默认可以手动缩放网页</p><p>2.理想视口：</p><p>（1）要手动添加meta视口标签，通知浏览器操作</p><p>（2）meta视口标签主要目的：布局视口的宽度应该与理想视口的宽度一样</p><p>3.meta视口标签：</p><meta name="viewport" content="width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0"><p>属性：</p><p>​    width：可以设置device-width等特殊值</p><p>​    initial-scale：初始化缩放比，大于0的数字</p><p>​    maximum-scale：最大缩放比，大于0的数字</p><p>​    minimum-scale：最小缩放比，大于0的数字</p><p>​    user-scable：是否可以手动缩放，yes或no（1或0）</p><p><img src= "/img/loading.gif" data-src="https://i.loli.net/2020/08/09/J5CFV2YHXoI8vn1.png" alt=""></p><h3 id="二倍图"><a href="#二倍图" class="headerlink" title="二倍图"></a>二倍图</h3><p>解说：我们要一个50x50像素（css像素）的图片，直接放到iPhone8上会放大两倍（其他手机可能不是两倍），像素变为100x100像素就会模糊</p><p>1.二倍图策略：用一个100x100像素的图片，然后手动把图片压缩为50x50像素，放大iPhone8上，友变成100x100像素，但是不会模糊（因为图片本来就是100x100像素的）</p><p><img src= "/img/loading.gif" data-src="https://i.loli.net/2020/08/09/XKgGw3NtEUqoRz2.png" alt=""></p><p>2.背景缩放：background-size（规定背景图像的大小）</p><p>​    background-size: 宽 高；</p><p>​    注意：</p><p>​        （1）单位有长度、百分比、cover、contain</p><p>​        （2）cover把背景图的宽度和高度等比例拉伸，当图片宽度和高度都覆盖盒子（父盒子），可能有部分背景图显示不全（因为图片的宽度和高度比例不是1：1，有部分超出了盒子）</p><p>​        （3）contain把背景图的高度和宽度等比例拉伸，当图片宽度或高度铺满了盒子就不再拉伸，可能会有空白区域（因为图片的宽度和高度比例不是1：1）</p><p>​        （4）如果写background-size: 50%; 只写一个宽，不写高，会按图片的比例来缩放图片，写%的话，是以父盒子的宽度和高度来计算</p><h3 id="移动端开发选择"><a href="#移动端开发选择" class="headerlink" title="移动端开发选择"></a>移动端开发选择</h3><p>移动端主力方案：</p><p>1.单独制作移动端页面（主流）</p><p>（1）流式布局（百分比布局）；</p><p>（2）flex弹性布局（推荐）；</p><p>（3）less+rem+媒体查询布局；</p><p>（4）混合布局</p><p>2.响应式页面兼容移动端：</p><p>移动端计算解决方案：</p><p>1.css初始换normolize.css（直接引入这个文件）</p><p>作用：</p><p>（1）保护了有价值的默认值</p><p>（2）修复了浏览器的bug</p><p>（3）是模块化的</p><p>（4）拥有详细的文档</p><p>2.盒子模型box-sizing</p><p>传统盒子模型：box-sizing: content-b0x;  （默认）</p><p>css3盒子模型：box_-sizing: border-box;</p><p>3.特殊样式：<br><img src= "/img/loading.gif" data-src="https://i.loli.net/2020/08/09/scDTNWKfmrIMZ6G.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\js\APlayer.min.js&quot; class=&quot;aplayer-se
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>今日小结11</title>
    <link href="https://hgq169168.github.io/2020/08/08/%E4%BB%8A%E6%97%A5%E5%B0%8F%E7%BB%9311/"/>
    <id>https://hgq169168.github.io/2020/08/08/%E4%BB%8A%E6%97%A5%E5%B0%8F%E7%BB%9311/</id>
    <published>2020-08-08T13:57:59.000Z</published>
    <updated>2020-08-08T14:46:06.978Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><h2 id="今日是css3"><a href="#今日是css3" class="headerlink" title="今日是css3"></a><center>今日是css3</center></h2><h3 id="css3-动画animation"><a href="#css3-动画animation" class="headerlink" title="css3 动画animation"></a>css3 动画animation</h3><p>制定动画分为两步：1.先定义动画 2.再调用动画 3.持续时间</p><p>1.用@keyframes定义动画（类似定义类选择器）</p><p>@keyframes 动画名称 {</p><p>​    0% {}    //也可以用from</p><p>​    100%{}    //to</p><p>}    //可以设置任意次数，0%、25%、50%、100%</p><p>2、调用动画：</p><p>animation-name: 动画名称;</p><p>3.持续时间:</p><p>animation-duration: 时间;</p><p>动画常用属性：</p><p>@keyframes：规定动画</p><p>animation：所用动画简写。除了animation-play-state</p><p>animation-name：规定@keyframes动画名称（必须的）</p><p>animation-duration：完成动画的时间（秒或毫秒），默认0（必须的）</p><p>animation-timing-function：曲线速度，默认“ease”</p><p>animation-iteration-count：循环次数，默认1，无限循环infinite</p><p>animation-direction：下一周期是否逆向播放，默认“normal”，“alternate”逆播放</p><p>animation-fill-mode：结束后状态，保持“forwards”，回到起始位置“backwards”（默认）</p><p>animation-play-state：是否正在行动或暂停，running（默认），“pause”暂停</p><p><img src= "/img/loading.gif" data-src="https://i.loli.net/2020/08/08/AoVtWkTyfDUlQZG.png" alt=""></p><p><img src= "/img/loading.gif" data-src="https://i.loli.net/2020/08/08/BUZIG7E1wr2i6ys.png" alt=""></p><p>动画简写：</p><p>​    animation: 动画名称 持续时间 运动曲线 何时播放 播放次数 是否放向播放  起始或结束状态</p><p>opacity: 1;  不透明度</p><h3 id="3D转换："><a href="#3D转换：" class="headerlink" title="3D转换："></a>3D转换：</h3><p>3D位移：translate3d(x, y, z)</p><p>透视：perspecitve</p><p>3D 旋转：rotate3d(x, y, z)</p><p>3D呈现：transform-style</p><p>1.位移translate3的（x, y, z)中的x, y, z不可以省略, 如没有则写0（正负值都可以）。（z值越大，物体图像越大）</p><p>2.透视perspective特点：</p><p>​    （1）透视单位为像素（px），如：perspective: 400px;</p><p>​    （2）视距越大，图像越小</p><p>​    （3）透视是写再被观察元素的父（祖先也许）盒子上的</p><p><img src= "/img/loading.gif" data-src="https://i.loli.net/2020/08/08/rYBjfLQuFbo6qJP.png" alt=""></p><p>3.3D旋转rotate3d(x, y, z),可以正负值。</p><p>​    transform: roate3d(1, 1, 0, 45deg);</p><p>​    transform: rotateX(45deg);</p><p>​    transform: rotateY(90deg);</p><p>​    transform: rotateZ(45deg);</p><p>4.3D呈现：transform-style: preserve-3d</p><p>​    transform-style: flat; 不开启3d立体空间（默认）</p><p>​    transform-style: preserve-3d; 开启3d立体空间</p><p>​    注意：是给父级元素添加的，作用在子级元素上</p><h3 id="私有前缀：为了兼容低版本浏览器"><a href="#私有前缀：为了兼容低版本浏览器" class="headerlink" title="私有前缀：为了兼容低版本浏览器"></a>私有前缀：为了兼容低版本浏览器</h3><p>1.-moz-：firfox浏览器私有属性</p><p>2.-ms-：ie浏览器私有属性</p><p>3.-webik-：safari、chrome浏览器私有属性</p><p>4.-o-：opeara浏览器私有属性</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\js\APlayer.min.js&quot; class=&quot;aplayer-se
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>今日小结10</title>
    <link href="https://hgq169168.github.io/2020/08/07/%E4%BB%8A%E6%97%A5%E5%B0%8F%E7%BB%9310/"/>
    <id>https://hgq169168.github.io/2020/08/07/%E4%BB%8A%E6%97%A5%E5%B0%8F%E7%BB%9310/</id>
    <published>2020-08-07T00:57:27.000Z</published>
    <updated>2020-08-07T02:22:00.048Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><h2 id="html5和css3新增内容"><a href="#html5和css3新增内容" class="headerlink" title="html5和css3新增内容"></a><center>html5和css3新增内容</center></h2><h3 id="html5新增语义标签"><a href="#html5新增语义标签" class="headerlink" title="html5新增语义标签"></a>html5新增语义标签</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;header&gt;  &#x2F;&#x2F;头部标签</span><br><span class="line">&lt;nav&gt; &#x2F;&#x2F;导航栏标签</span><br><span class="line">&lt;artick&gt; &#x2F;&#x2F;内容标签</span><br><span class="line">&lt;section&gt; &#x2F;&#x2F;定义文档某个区域</span><br><span class="line">&lt;aisde&gt; &#x2F;&#x2F;侧边栏标签</span><br><span class="line">&lt;footer&gt; &#x2F;&#x2F;尾部标签</span><br></pre></td></tr></table></figure><h3 id="html5新增的多媒体标签"><a href="#html5新增的多媒体标签" class="headerlink" title="html5新增的多媒体标签"></a>html5新增的多媒体标签</h3><p>1.视频：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;video&gt; &#x2F;&#x2F;支持MP4、Webm、Ogg等格式</span><br></pre></td></tr></table></figure><p>video属性：</p><p>（1）autoplay: “autoplay”; 自动播放（谷歌浏览器要交muted来解决）</p><p>（2）contorls: “controls”; 向用户显示播放控制</p><p>（3）width: 30px;</p><p>（4）height: 20px;</p><p>（5）loop: “loop”; 循环播放</p><p>（6）preload: auto(预加载视频)|none;  如果有autoplay，忽略此属性</p><p>（7）src: url; </p><p>（8）poster: Img(url); 加载等待图片的画面图片</p><p>（9）muted: “muted”; 静音播放</p><p><img src= "/img/loading.gif" data-src="https://i.loli.net/2020/08/07/FHsIV9CbUmDiApg.png" alt=""></p><p>2.音频：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;audio&gt; &#x2F;&#x2F;支持MP3、Wav、Ogg等格式</span><br></pre></td></tr></table></figure><p>audio属性：</p><p>（1）autoplay: “autoplay”;</p><p>（2）contorls: “controls”</p><p>（3）oop: “loop”; 循环播放</p><p>（4）src: url; </p><h3 id="html5新增的input类型和属性"><a href="#html5新增的input类型和属性" class="headerlink" title="html5新增的input类型和属性"></a>html5新增的input类型和属性</h3><p><img src= "/img/loading.gif" data-src="https://i.loli.net/2020/08/07/shGTYXvg7K2tLVz.png" alt=""></p><p>注意：点击提交按钮（type=”submit”)才可以验证表单，表单要写在form里面</p><p><img src= "/img/loading.gif" data-src="https://i.loli.net/2020/08/07/V39niYlsONWQfkh.png" alt=""></p><p>注意：type=”file” 为文件表单</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang&#x3D;&quot;en&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset&#x3D;&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;meta name&#x3D;&quot;viewport&quot; content&#x3D;&quot;width&#x3D;device-width, initial-scale&#x3D;1.0&quot;&gt;</span><br><span class="line">    &lt;title&gt;新增的表单属性&lt;&#x2F;title&gt;</span><br><span class="line">    &lt;style&gt;</span><br><span class="line">        input::placeholder &#123;</span><br><span class="line">            color: skyblue;</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;&#x2F;style&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;form action&#x3D;&quot;&quot;&gt;</span><br><span class="line">        &lt;input type&#x3D;&quot;search&quot; name&#x3D;&quot;sear&quot; required&#x3D;&quot;required&quot; placeholder&#x3D;&quot;pink你好&quot; autofocus&#x3D;&quot;autofocus&quot;</span><br><span class="line">            autocomplete&#x3D;&quot;on&quot;&gt;</span><br><span class="line">        &lt;input type&#x3D;&quot;file&quot; name&#x3D;&quot;&quot; id&#x3D;&quot;&quot; multiple&#x3D;&quot;multiple&quot;&gt;</span><br><span class="line">        &lt;input type&#x3D;&quot;submit&quot; value&#x3D;&quot;提交&quot;&gt;</span><br><span class="line">    &lt;&#x2F;form&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure><h3 id="css3新增选择器"><a href="#css3新增选择器" class="headerlink" title="css3新增选择器"></a>css3新增选择器</h3><p>1.属性选择器：</p><p>E(att)：选择具有att属性的E元素</p><p>E(att=”val”)：选择具有att属性且属性值等于val的E元素</p><p>E(att^=”val”)：选择具有att属性且属性值以val开头的E元素</p><p>E(att$=”val”)：选择具有att属性且属性值以val结尾的E元素</p><p>E(att*=”val”)：选择具有att属性且属性值含有val的E元素</p><p>2.结构伪类选择器：</p><p>E:first-child：匹配父元素中的第一个子元素E</p><p>E:last-child：匹配父元素中的最后一个子元素E</p><p>E:nth-child(n)：匹配父元素中的第n个子元素E</p><p>E:first-of-type：匹配指定类型E的第一个元素</p><p>E:last-of-type：匹配指定类型E的最后一个元素</p><p>E:nth-of-type(n)：匹配指定类型E的第n个元素</p><p>nth-child(n)与nth-of-type(n)的区别：</p><p>如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang&#x3D;&quot;en&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset&#x3D;&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;meta name&#x3D;&quot;viewport&quot; content&#x3D;&quot;width&#x3D;device-width, initial-scale&#x3D;1.0&quot;&gt;</span><br><span class="line">    &lt;meta http-equiv&#x3D;&quot;X-UA-Compatible&quot; content&#x3D;&quot;ie&#x3D;edge&quot;&gt;</span><br><span class="line">    &lt;title&gt;CSS3新增选择器nth-type-of&lt;&#x2F;title&gt;</span><br><span class="line">    &lt;style&gt;</span><br><span class="line">        &#x2F;* nth-child 会把所有的盒子都排列序号 *&#x2F;</span><br><span class="line">        &#x2F;* 执行的时候首先看  :nth-child(1) 之后回去看 前面 div *&#x2F;</span><br><span class="line"></span><br><span class="line">        section div:nth-child(1) &#123;</span><br><span class="line">            background-color: red;</span><br><span class="line">        &#125;</span><br><span class="line">         &#x2F;* nth-of-type 会把指定元素的盒子排列序号 *&#x2F;</span><br><span class="line">        &#x2F;* 执行的时候首先看  div指定的元素  之后回去看 :nth-of-type(1) 第几个孩子 *&#x2F;</span><br><span class="line">        section div:nth-of-type(1) &#123;</span><br><span class="line">            background-color: blue;</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;&#x2F;style&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;!-- 区别 --&gt;</span><br><span class="line">    &lt;section&gt;</span><br><span class="line">        &lt;p&gt;光头强&lt;&#x2F;p&gt;</span><br><span class="line">        &lt;div&gt;熊大&lt;&#x2F;div&gt;</span><br><span class="line">        &lt;div&gt;熊二&lt;&#x2F;div&gt;</span><br><span class="line">    &lt;&#x2F;section&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure><p>上述代码中，其中section div:nth-child(1); 会把section的所有子元素都会排序，即p为1，div为2，div为3，然后再检查div元素，此时发现n=1时，可是对应的元素是p，所以匹配失败；而section div:nth-of-type(1); 会先把section中的div元素排序，即div为1，div为2，然后检查div元素，此时发现n=1时，有对应的div，匹配成功。</p><p>3.伪元素选择器：</p><p>::beform：在元素内部的前面插入内容</p><p>::after：在元素内部的后面插入内容</p><p>注意：（1）before和after创建的元素，是行内元素</p><p>​            （2）新创建的这个元素在文档数中找不到，所以称之为伪元素</p><p>​            （3）语法：element::before {}</p><p>​            （4）伪元素选择器权重为0，0，0，1</p><h3 id="css3盒子模型border-box属性"><a href="#css3盒子模型border-box属性" class="headerlink" title="css3盒子模型border-box属性"></a>css3盒子模型border-box属性</h3><p>css的盒子大小border-sizing（默认是border-sizing: content-box;）,在css3中可以设置成border-sizing: border-box; 这样的话，padding、border等就不会撑大盒子了</p><h3 id="css3滤镜filter"><a href="#css3滤镜filter" class="headerlink" title="css3滤镜filter"></a>css3滤镜filter</h3><p>filer: 函数(); </p><p>如：filter: blur(5px); blur模糊处理，值越大越模糊</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang&#x3D;&quot;en&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset&#x3D;&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;meta name&#x3D;&quot;viewport&quot; content&#x3D;&quot;width&#x3D;device-width, initial-scale&#x3D;1.0&quot;&gt;</span><br><span class="line">    &lt;meta http-equiv&#x3D;&quot;X-UA-Compatible&quot; content&#x3D;&quot;ie&#x3D;edge&quot;&gt;</span><br><span class="line">    &lt;title&gt;图片模糊处理filter&lt;&#x2F;title&gt;</span><br><span class="line">    &lt;style&gt;</span><br><span class="line">        img &#123;</span><br><span class="line">            &#x2F;* blur是一个函数 小括号里面数值越大，图片越模糊 注意数值要加px单位 *&#x2F;</span><br><span class="line">            filter: blur(15px);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        img:hover &#123;</span><br><span class="line">            filter: blur(0);</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;&#x2F;style&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;img src&#x3D;&quot;images&#x2F;pink.jpg&quot; alt&#x3D;&quot;&quot;&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure><h3 id="css3-calc函数"><a href="#css3-calc函数" class="headerlink" title="css3 calc函数"></a>css3 calc函数</h3><p>width: calc(100% - 80px);   //括号里使用+ 、-、*、/来计算</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang&#x3D;&quot;en&quot;&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset&#x3D;&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;meta name&#x3D;&quot;viewport&quot; content&#x3D;&quot;width&#x3D;device-width, initial-scale&#x3D;1.0&quot;&gt;</span><br><span class="line">    &lt;meta http-equiv&#x3D;&quot;X-UA-Compatible&quot; content&#x3D;&quot;ie&#x3D;edge&quot;&gt;</span><br><span class="line">    &lt;title&gt;CSS3属性calc函数&lt;&#x2F;title&gt;</span><br><span class="line">    &lt;style&gt;</span><br><span class="line">        .father &#123;</span><br><span class="line">            width: 300px;</span><br><span class="line">            height: 200px;</span><br><span class="line">            background-color: pink;</span><br><span class="line">        &#125;</span><br><span class="line">        .son &#123;</span><br><span class="line">            &#x2F;* width: 150px; *&#x2F;</span><br><span class="line">            &#x2F;* width: calc(150px + 30px); *&#x2F;</span><br><span class="line">            width: calc(100% - 30px);</span><br><span class="line">            height: 30px;</span><br><span class="line">            background-color: skyblue;</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;&#x2F;style&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;!-- 需求我们的子盒子宽度永远比父盒子小30像素 --&gt;</span><br><span class="line">    &lt;div class&#x3D;&quot;father&quot;&gt;</span><br><span class="line">        &lt;div class&#x3D;&quot;son&quot;&gt;&lt;&#x2F;div&gt;</span><br><span class="line">    &lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure><h3 id="css3过渡transion（一般结合-hover使用）"><a href="#css3过渡transion（一般结合-hover使用）" class="headerlink" title="css3过渡transion（一般结合:hover使用）"></a>css3过渡transion（一般结合:hover使用）</h3><p>transition: 要过渡的属性 花费的时间（要加单位s） 运动曲线（默认ease） 何时开始（要加单位s）;</p><p><img src= "/img/loading.gif" data-src="https://i.loli.net/2020/08/07/LWKZd9GoxNp3XBJ.png" alt=""></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang&#x3D;&quot;en&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset&#x3D;&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;meta name&#x3D;&quot;viewport&quot; content&#x3D;&quot;width&#x3D;device-width, initial-scale&#x3D;1.0&quot;&gt;</span><br><span class="line">    &lt;title&gt;css3新增属性过度transition&lt;&#x2F;title&gt;</span><br><span class="line">    &lt;style&gt;</span><br><span class="line">        div &#123;</span><br><span class="line">            width: 200px;</span><br><span class="line">            height: 100px;</span><br><span class="line">            background-color: red;</span><br><span class="line">            &#x2F;* 写多个属性用逗号隔开 *&#x2F;</span><br><span class="line">            &#x2F;* transition: width .5s ease .5s, height .5s; *&#x2F;</span><br><span class="line">            &#x2F;* 写多个属性时，用all *&#x2F;</span><br><span class="line">            transition: all .5s ease 0.5s;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        div:hover &#123;</span><br><span class="line">            width: 400px;</span><br><span class="line">            height: 200px;</span><br><span class="line">            background-color: salmon;</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;&#x2F;style&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;div&gt;&lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure><h3 id="css3转换transform"><a href="#css3转换transform" class="headerlink" title="css3转换transform"></a>css3转换transform</h3><p>属性：</p><p>1.translate：移动，类似定位</p><p>​    transform: translate(x, y);</p><p>​    transform: translateX(x);</p><p>​    transform: translateY(y);</p><p>​    特点：（1）translate不会影响到其他元素的位置（不脱标）</p><p>​                （2）translate中的百分比单位是相对自身的元素的</p><p>​                （4）translate对于行内标签没有效果</p><p>2.rotate(度数)：旋转，单位deg</p><p>​    transform: rotate(45deg)</p><p>​    特点：（1）rotate括号里跟度数，单位是deg</p><p>​                （2）角度为正，则顺时针旋转；角度为负，则逆时针旋转</p><p>​                （3）默认旋转中心是元素的中心</p><p>transform-origin可以设置旋转中心：</p><p>​    transform-origin: x y； //x和y之间是空格</p><p>​    特点：x y默认旋转中心点为（50%， 50%），可以给x和y设置像素或方位名词(top、center、bottom、left、right)</p><p>3.scale：缩放</p><p>​    transform: scale(x, y)  //逗号隔开</p><p>​    特点：（1）transform: scale(1, 1); 宽和高都放大一倍，相当于没放大</p><p>​                （2）transform: scale(2, 2);宽和高都放大两倍</p><p>​                （3）transform: scale(2);宽和高都放大两倍</p><p>​                （4）transform: scale(0.5， 0.5); 宽和高都缩小一半</p><p>​                （5）优势：可以设置转换中心点缩放，默认以中心点缩放，而且不影响其他盒子</p><p>transform综合写法：</p><p>​    transform: translate() rotate() scale();   //顺序不要便</p><p>提示：当我们同时有移动和其他属性的操作时，先把移动放大最前面</p><p>​    </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\js\APlayer.min.js&quot; class=&quot;aplayer-se
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>今日小结9</title>
    <link href="https://hgq169168.github.io/2020/08/06/%E4%BB%8A%E6%97%A5%E5%B0%8F%E7%BB%939/"/>
    <id>https://hgq169168.github.io/2020/08/06/%E4%BB%8A%E6%97%A5%E5%B0%8F%E7%BB%939/</id>
    <published>2020-08-06T00:53:42.000Z</published>
    <updated>2020-08-06T02:12:09.544Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><h2 id="ba说了，今天依旧是css"><a href="#ba说了，今天依旧是css" class="headerlink" title="ba说了，今天依旧是css"></a><center>ba说了，今天依旧是css</center></h2><h3 id="元素的显示与隐藏"><a href="#元素的显示与隐藏" class="headerlink" title="元素的显示与隐藏"></a>元素的显示与隐藏</h3><p>display：显示隐藏</p><p>visibility：显示隐藏</p><p>overflow：溢出显示隐藏</p><p>1.display属性：</p><p>（1）display: none;  //隐藏对象</p><p>（2）display: block; //除了转换为块级元素，还可以显示元素</p><p>注：display隐藏元素后，不在占有位置</p><p>2.visibility可见性：</p><p>（1）visibility: visible; //元素可见</p><p>（2）visibility: hidden; //元素隐藏</p><p>注：visibility隐藏元素后，继续占有位置</p><p>3.overflow溢出：</p><p>（1）overflow: visible; //不剪切内容也不添加滚动条</p><p>（2）overflow: hidden; //不显示超过盒子尺寸的内容，超过的隐藏起来</p><p>（3）overflow: scroll; //不管内容是否超出，都显示滚动条</p><p>（4）overflow:auto; //超出的话就显示滚动条，不超出就不显示滚动条</p><p>注：有定位的盒子慎用overflow:hidee;</p><h3 id="精灵图"><a href="#精灵图" class="headerlink" title="精灵图"></a>精灵图</h3><p>精灵图主要用于背景图等不经常更换的图片</p><p>步骤：先通过切片工具，获取需要对象的大小和x、y坐标，再利用background-position: -x -y;来定位。   （够简洁吧，不用感谢，你们’坑定‘懂了，不懂自行百度）</p><h3 id="字体图标"><a href="#字体图标" class="headerlink" title="字体图标"></a>字体图标</h3><p>推荐两个免费图标网站：</p><p>1.阿里巴巴矢量图标库：<a href="https://www.iconfont.cn/" target="_blank" rel="noopener">https://www.iconfont.cn/</a></p><p>2.IcoMoon图标：<a href="https://icomoon.io/" target="_blank" rel="noopener">https://icomoon.io/</a></p><p>步骤（我是从icomoon下载的）：下载完图标后解压，复制font文件到根目录（与你要引入图标的xxx.html文件一个层级)，到style.css文件中复制声明代码到xxx.html文件进行引入，打开demo.html文件选择你要的字体图标，再在xxx.html中的样式表中加上font-family: “icomoon”;  。（依旧是简单易懂，莫要感谢，不谢！）</p><h3 id="css三角做法"><a href="#css三角做法" class="headerlink" title="css三角做法"></a>css三角做法</h3><p>声明一个没有宽度和高度的盒子，然后设置盒子的边框大小，并设置边框颜色为透明（transparent），再单独设置一条边框的颜色，到此，大功告成。</p><h3 id="鼠标样式cursor"><a href="#鼠标样式cursor" class="headerlink" title="鼠标样式cursor"></a>鼠标样式cursor</h3><p>1.cursor: default;  //小白（默认）</p><p>2.cursor: pointer; //小手</p><p>3.cursor: move; //移动</p><p>4.cursor: text; //文本</p><p>5.cursor: not-allowed; //禁止</p><p>提示：看不懂，就要亲手试试，要知道，实践是检验真理的唯一标准！！！</p><h3 id="去一些掉默认属性"><a href="#去一些掉默认属性" class="headerlink" title="去一些掉默认属性"></a>去一些掉默认属性</h3><p>1.轮廓线outline：</p><p>给表单添加outline: 0;或outline: none; 可以去掉默认的蓝色边框</p><p>2.防止文本域拖拽resize：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">textarea &#123;</span><br><span class="line">resize: none; &#x2F;*防止拖拽*&#x2F;</span><br><span class="line">outline: none; &#x2F;*去掉默认蓝色边框*&#x2F;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注：文本域尽量写在一行上，不然会有默认空格滴。</p><p>3.给ul里面的li去掉默认实心圆点list-style: none;</p><p>4.给a标签去掉下划线text-decoration: none;</p><h3 id="vertical-align属性应用"><a href="#vertical-align属性应用" class="headerlink" title="vertical-align属性应用"></a>vertical-align属性应用</h3><p>vertical-align：经常用于设置图片或表单（行内块元素）和对文字垂直对齐的方式（只针对行内元素和行内块元素）</p><p>属性：</p><p>1.vertical-align: baseline; //把元素（如图片）与文字的基线对齐（默认的）</p><p>2.vertical-align: top;</p><p>3.vertical-align: middle;</p><p>4.vertical-align: bottom;</p><p>图片底侧有一空白缝隙，原因在于行内块元素和文字的基线对齐</p><p>​    解决方案：1.给图片添加vertical-align: middle | top | bottom</p><p>​                        2.把图片转换成块级元素dispaly: block;</p><h3 id="溢出文字的省列号显示"><a href="#溢出文字的省列号显示" class="headerlink" title="溢出文字的省列号显示"></a>溢出文字的省列号显示</h3><p>1.单行文本溢出省略号显示必须满三个条件</p><p>（1）先强制一行内显示文本：white-space: nowrap;  （默认normal自动换行）</p><p>（2）超出的文字隐藏：overflow: hidden;</p><p>（3）用省略号代替超出的文字部分：text-overflow: ellipsis;</p><p>2.多行文本溢出省略号显示条件（适合webkit浏览器）：</p><p>（1）overflow: hidden;</p><p>（2）text-overflow: ellipsis;</p><p>（3）弹性伸缩盒子模型显示：display: -webkit-box-;</p><p>（4）限制一个块级元素显示的文本行数：-bebkit-line-clamp: 3; （此时第三行出现省略号）</p><p>（5）设置或检索伸缩盒子对象的子元素的排列文本：-webkit-box-orient: vartical; （垂直居中）</p><h3 id="布局技巧"><a href="#布局技巧" class="headerlink" title="布局技巧"></a>布局技巧</h3><p>1.margin负值的运用：由于给几个盒子都浮动，它们都会排列在一行上，边框与边框挨在一起，会变粗（两条边框了），可以给每个盒子添加margin-left: -1px; （假设盒子边框为1px），就能使之变细了</p><p>2.文字环绕效果可以利用浮动元素了巧妙运用</p><p>3.行内块元素巧妙运用（只要给父级元素添加text-align: center; ，其子元素中的行内块元素或行内元素或文字都可以水平居中）</p><p>4.css三角巧妙运用</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\js\APlayer.min.js&quot; class=&quot;aplayer-se
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>今日小结8</title>
    <link href="https://hgq169168.github.io/2020/08/05/%E4%BB%8A%E6%97%A5%E5%B0%8F%E7%BB%938/"/>
    <id>https://hgq169168.github.io/2020/08/05/%E4%BB%8A%E6%97%A5%E5%B0%8F%E7%BB%938/</id>
    <published>2020-08-05T14:30:18.000Z</published>
    <updated>2020-08-06T01:00:07.573Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><h2 id="今日还是css"><a href="#今日还是css" class="headerlink" title="今日还是css"></a><center>今日还是css</center></h2><h3 id="盒子、文字阴影"><a href="#盒子、文字阴影" class="headerlink" title="盒子、文字阴影"></a>盒子、文字阴影</h3><p>1.盒子阴影box-shadow: h-shadow v-shadow [blur] [spread] [color] [inset];</p><p>​    blur（模糊距离）、spread（阴影尺寸）、insert（内部阴影）</p><p>2.文字阴影text-shadow: h-shadow v-shadow [blur] [color]</p><h3 id="网页布局准则："><a href="#网页布局准则：" class="headerlink" title="网页布局准则："></a>网页布局准则：</h3><p>1.第一准则：多个块级元素纵向排列找标准流，多个块级元素横向排列找浮动</p><p>2.第二准则：先设置盒子大小，再设置盒子的位置</p><h3 id="三种传统布局方式（要三种结合使用才更好）：标准流、浮动、定位"><a href="#三种传统布局方式（要三种结合使用才更好）：标准流、浮动、定位" class="headerlink" title="三种传统布局方式（要三种结合使用才更好）：标准流、浮动、定位"></a>三种传统布局方式（要三种结合使用才更好）：标准流、浮动、定位</h3><p>1.标准流：行内元素、行内块元素、块元素的标准</p><p>2.浮动float：用于创建浮动框，将其移到一边，知道左边边缘或右边缘触及包含块或另外一个浮动框的边缘</p><p>浮动特性：</p><p>（1）浮动元素会脱离标准流，不在保留原来的位置</p><p>（2）如果多个盒子都设置了浮动，则它们安照属性值一行内显示，并且顶端对齐排列</p><p>（3）浮动元素具有行内块特性（但相邻元素之间不会有空隙），任何元素都可以浮动。添加了浮动后，都具有行内块元素相似的特性。如果块级盒子没有设置宽度，默认和父亲一样宽，但该盒子添加浮动后，它的大小根据其内容决定（依旧没设置宽度的话）</p><p>浮动布局注意点：</p><p>（1）先用标准流的父元素排列上下位置，之后再用内部子元素辞去浮动排列左右</p><p>（2）一个元素浮动了，理论上其余兄弟元素也要浮动。浮动的盒子只会影响其后面的的标准流，不会影响前面的标准流。</p><p>清除浮动：</p><p>​    选择器 {clear: 属性;} 属性有left、right、both（常用）</p><p>​    清除浮动的策略：闭合浮动</p><p>​    清除浮动的方法：</p><p>​    （1）额外标签法（隔墙法）：在浮动元素末尾添加一个空的标签。然后再引入选择器 {clear: 属性;}</p><p>​    （2）给父级元素添加overflow，其属性可以时hidden、auto、scroll。如overflow: hidden;</p><p>​    （3）给父级元素添加 :after伪元素（升级版额外标签法，利用css创建一个额外标签</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">.clearfix:after &#123;</span><br><span class="line">          content: &quot;&quot;;</span><br><span class="line">          display: block;</span><br><span class="line">          height: 0;</span><br><span class="line">          clear: both;</span><br><span class="line">          visibility: hidden;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      .clearfix &#123;</span><br><span class="line">          &#x2F;* IE6、7 专有 *&#x2F;</span><br><span class="line">          *zoom: 1;</span><br><span class="line">      &#125;</span><br></pre></td></tr></table></figure><p>​    （4）给父级元素添加双位元素</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">.clearfix:before,</span><br><span class="line">       .clearfix:after &#123;</span><br><span class="line">           content: &quot;&quot;;</span><br><span class="line">           display: table;</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">       .clearfix:after &#123;</span><br><span class="line">           clear: both;</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">       .clearfix &#123;</span><br><span class="line">           *zoom: 1;</span><br><span class="line">       &#125;</span><br></pre></td></tr></table></figure><p>3.定位：定位模式+边偏移</p><p>（1）position: 属性； //属性有relative（相对定位）、absolute（绝对定位）、fixed（固定定位）、static（静态定位）、Sticky（粘性定位）</p><p>（2）边偏移：top、 bottom、left、right</p><p>​    top: 30px;</p><p>​    left: 40px;</p><p>（3）静态定位（static），无定位的意思</p><p>（4）相对定位（relative）：是元素在移动位置的时候，是相对它原来的位置来说的</p><p>​    特点：移动位置参照点是自己原来的位置；原来的位置继续保留，后面的盒子仍然以标准流的方式来对待它。</p><p>（5）绝对定位（absolute）：</p><p>​    特点：如果没有祖先元素或祖先元素没有定位，则以浏览器（document文档）为准来移动；如果祖先有定位（相对、绝对、固定都行），则以最近一级的有定位祖先为参考的移动位置；绝对定位不占用位置</p><p>（6）固定定位（fixed）：</p><p>​    特点：以浏览器可视窗口为参照点移动元素；不占用原来位置</p><p>（7）粘性定位（Sticky）：（相对定位与固定定位的结合）</p><p>​    特点：以浏览器窗口为参照点移动元素；占用原来的位置；必须添加top、left、right、bottom其中一个才有效，否则不会固定在某一位置</p><p>提醒：“子绝父相”</p><h3 id="定位叠放顺序z-index："><a href="#定位叠放顺序z-index：" class="headerlink" title="定位叠放顺序z-index："></a>定位叠放顺序z-index：</h3><p>选择器 {z-index: 1;}</p><p>特点：</p><p>1.数值可以是正整数、负整数或0，默认是auto，数值越大越靠上</p><p>2.如果属性相同，则按书写顺序，后来者居上</p><p>3.数字不可以添加单位</p><p>4.只有定位的盒子才有z-index</p><h3 id="定位注意点"><a href="#定位注意点" class="headerlink" title="定位注意点"></a>定位注意点</h3><p>1.加了固定定位和绝对定位的盒子，不可以通过margin:auto;,实现水平居中（没反应）。可以通过left: 50%; 再margin-left: -width/2;（负的自身宽度一半）来实现水平居中</p><p>2.定位特殊性：绝对定位和固定定位与浮动类似</p><p>（1）行内元素添加固定定位或固定定位，可以直接设置高度和宽度</p><p>（2）块元素添加绝对定位或固定定位，如果不给定宽度和高度，默认大小是其内容大小</p><p>3.脱标的盒子不会触发外边距塌陷（嵌套）</p><p>4.绝对定位：固定定位元素会完全压住下面标准流的所有内容；浮动元素只会压住下面标准流的盒子，不会压住标准流盒子里面的文字、图片等。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\js\APlayer.min.js&quot; class=&quot;aplayer-se
      
    
    </summary>
    
    
    
  </entry>
  
</feed>
