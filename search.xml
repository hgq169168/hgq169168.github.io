<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Hello World</title>
    <url>/2020/06/19/hello-world/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>
]]></content>
  </entry>
  <entry>
    <title>js基础小总结1</title>
    <url>/2020/07/29/js%E5%9F%BA%E7%A1%80%E5%B0%8F%E6%80%BB%E7%BB%931/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><h3 id="1-转换成字符串："><a href="#1-转换成字符串：" class="headerlink" title="1.转换成字符串："></a>1.转换成字符串：</h3><p>(1) String(str)</p>
<p>(2) str.toString()</p>
<p>(3) str + ‘’</p>
<p>(4) arr.join()  //数组转换成字符串   str.split(‘分隔符’) 字符串转数组</p>
<h3 id="2-转换为数值："><a href="#2-转换为数值：" class="headerlink" title="2.转换为数值："></a>2.转换为数值：</h3><p>(1) parseInt(变量)   //变量要为字符串数字，下同</p>
<p>(2) parseFloat(变量)</p>
<p>(3) Number(变量)</p>
<p>(4) 变量 - num   // num为具体数值，如 1， 2， 0</p>
<h3 id="3-typeof检查数据类型"><a href="#3-typeof检查数据类型" class="headerlink" title="3.typeof检查数据类型"></a>3.typeof检查数据类型</h3><p>(1) typeof(a)</p>
<p>(2) typeof a</p>
<p>例子：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> a = <span class="number">3</span>;</span><br><span class="line"><span class="built_in">console</span>.log(type a); <span class="comment">//返回number</span></span><br><span class="line"><span class="built_in">console</span>.log(type(a)); <span class="comment">//返回number</span></span><br><span class="line"><span class="built_in">console</span>.log(type <span class="string">'c'</span>); <span class="comment">//返回string  可以未定义，也能返回c的类型</span></span><br></pre></td></tr></table></figure>

<h3 id="4-instanceof检测是否是数组"><a href="#4-instanceof检测是否是数组" class="headerlink" title="4.instanceof检测是否是数组"></a>4.instanceof检测是否是数组</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> b = [];</span><br><span class="line"><span class="keyword">var</span> c = <span class="number">1</span>;</span><br><span class="line"><span class="built_in">console</span>.log(b <span class="keyword">instanceof</span> <span class="built_in">Array</span>); <span class="comment">//返回true</span></span><br><span class="line"><span class="built_in">console</span>.log(c <span class="keyword">instanceof</span> <span class="built_in">Array</span>); <span class="comment">//返回false</span></span><br></pre></td></tr></table></figure>

<h3 id="5-Math的一些函数"><a href="#5-Math的一些函数" class="headerlink" title="5.Math的一些函数"></a>5.Math的一些函数</h3><p>(1) Math.floor()  //向下取整</p>
<p>(2) Math.ceil() //向上取整</p>
<p>(3) Math.round() //四舍五入</p>
<h3 id="6-字符串的一些操作"><a href="#6-字符串的一些操作" class="headerlink" title="6.字符串的一些操作"></a>6.字符串的一些操作</h3><p>(1) 定义字符串的方法：str = ‘red’ 或 str = new String(‘red’)</p>
<p>(2) 函数小例子：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> str = <span class="string">'red'</span>;</span><br><span class="line"><span class="keyword">var</span> str1 = <span class="string">'RED'</span></span><br><span class="line"><span class="built_in">console</span>.log(str.charAt(<span class="number">0</span>)); <span class="comment">//返回str的第一个字符 r</span></span><br><span class="line"><span class="built_in">console</span>.log(str.charCodeAt(<span class="number">0</span>));<span class="comment">//返回str的第一个字符 r</span></span><br><span class="line"><span class="built_in">console</span>.log(str[<span class="number">0</span>]);<span class="comment">//返回str的第一个字符</span></span><br><span class="line"><span class="built_in">console</span>.log(str.substr(<span class="number">0</span>, <span class="number">2</span>)); <span class="comment">//第一个参数为开始位置，第二个参数为长度 re</span></span><br><span class="line"><span class="built_in">console</span>.log(str.concat(<span class="string">'yellow'</span>));<span class="comment">//连接字符串 redyellow  str仍然为'red'</span></span><br><span class="line"><span class="built_in">console</span>.log(str.toUpperCase()); <span class="comment">//返回转换为大写的RED str仍然为'red'</span></span><br><span class="line"><span class="built_in">console</span>.log(str.toLowerCase()); <span class="comment">//返回转换为小写   str1仍然为'ERD'</span></span><br></pre></td></tr></table></figure>

<h3 id="7-转换为布尔类型"><a href="#7-转换为布尔类型" class="headerlink" title="7.转换为布尔类型"></a>7.转换为布尔类型</h3><p>Boolean(变量)：</p>
<p>(1)变量为0、NaN、undefined、null、’’ 则返回false</p>
<p>(2)其余为true（空数组返回true）</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Boolean</span>(<span class="number">7</span>));<span class="comment">//true</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Boolean</span>(<span class="string">'red'</span>));<span class="comment">//true</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Boolean</span>(<span class="number">0</span>));<span class="comment">//false</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Boolean</span>(<span class="string">''</span>));<span class="comment">//false</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Boolean</span>(<span class="literal">null</span>));<span class="comment">//false</span></span><br></pre></td></tr></table></figure>

<h3 id="8-声明数组"><a href="#8-声明数组" class="headerlink" title="8.声明数组"></a>8.声明数组</h3><p>(1) var arr = new Array()</p>
<p>(2)var arr = []</p>
<p><img src= "/img/loading.gif" data-src="https://i.loli.net/2020/07/26/CgLxRWZNG7voeqH.png" alt="数组" title="数组"></p>
<h3 id="9-构造函数："><a href="#9-构造函数：" class="headerlink" title="9.构造函数："></a>9.构造函数：</h3><p>(1)function 函数名(形参) {} //形参可以没有  ，下同</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fn</span>(<span class="params">a, b</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a + b;   <span class="comment">//return只返回一个值，且其后面的语句不执行，如果没有return，返回udefined</span></span><br><span class="line">    <span class="built_in">console</span>.log(a);  <span class="comment">//不执行</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">console</span>.log(fn(<span class="number">2</span>, <span class="number">4</span>)); <span class="comment">// 返回6</span></span><br></pre></td></tr></table></figure>

<p>(2)var 函数名 = function(形参) {}</p>
<p>注意点：实参个数多余形参个数，以形参个数为准，反则，返回NaN （不利用伪数组）</p>
<p>(3)arguments伪数组:</p>
<p>arguments对象可以获取传入函数的值，它将这些值保存在一个数组里面，因此可以将arguments看作一个数组使用</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fn1</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">	<span class="keyword">var</span> num = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="built_in">arguments</span>.length; i++) &#123;<span class="comment">//arguments可以接受多个变量</span></span><br><span class="line">		num += <span class="built_in">arguments</span>[i];</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">console</span>.log(num);<span class="comment">//8</span></span><br><span class="line">&#125;</span><br><span class="line">fn1(<span class="number">1</span>, <span class="number">2</span>, <span class="number">5</span>)</span><br></pre></td></tr></table></figure>



]]></content>
  </entry>
  <entry>
    <title>今日小结1</title>
    <url>/2020/07/29/%E4%BB%8A%E6%97%A5%E5%B0%8F%E7%BB%931/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><h3 id="1-对jquery的理解："><a href="#1-对jquery的理解：" class="headerlink" title="1.对jquery的理解："></a>1.对jquery的理解：</h3><p>（1）jquery是对一些常用的原生js方法和属性的封装的一个数据库，$是JQuery的顶级对象（别称，一般用$来代替JQuery（注意大小写），如：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">"en"</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">"UTF-8"</span>&gt;</span><br><span class="line">    &lt;meta name=<span class="string">"viewport"</span> content=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span><br><span class="line">    &lt;meta http-equiv=<span class="string">"X-UA-Compatible"</span> content=<span class="string">"ie=edge"</span>&gt;</span><br><span class="line">    &lt;title&gt;Document&lt;<span class="regexp">/title&gt;</span></span><br><span class="line"><span class="regexp">	/</span><span class="regexp">/引入jquery库</span></span><br><span class="line"><span class="regexp">    &lt;script src="jquery.min.js"&gt;&lt;/</span>script&gt; </span><br><span class="line">    &lt;style&gt;</span><br><span class="line">        div &#123;</span><br><span class="line">            width: <span class="number">200</span>px;</span><br><span class="line">            height: <span class="number">200</span>px;</span><br><span class="line">            background-color: pink;</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;<span class="regexp">/style&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        <span class="comment">// $('div').hide();//$是JQuery的顶级对象（别称） 此处用JQuery代替也可以</span></span><br><span class="line">        <span class="comment">// 1. 等着页面DOM加载完毕再去执行js 代码</span></span><br><span class="line">        <span class="comment">// $(document).ready(function() &#123;</span></span><br><span class="line">        <span class="comment">//     $('div').hide();</span></span><br><span class="line">        <span class="comment">// &#125;)</span></span><br><span class="line">        <span class="comment">// 2.  等着页面DOM加载完毕再去执行js 代码  //可以把script放在div前面</span></span><br><span class="line">        $(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            $(<span class="string">'div'</span>).hide();</span><br><span class="line"></span><br><span class="line">        &#125;)</span><br><span class="line">    &lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp">    &lt;div&gt;&lt;/</span>div&gt;</span><br><span class="line"></span><br><span class="line">&lt;<span class="regexp">/body&gt;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">&lt;/</span>html&gt;</span><br></pre></td></tr></table></figure>

<p>（2）DOM对象：是用原生js获取过来的对象；</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> myDiv = <span class="built_in">document</span>.querySelector(<span class="string">'div'</span>); <span class="comment">//myDiv 是DOM对象</span></span><br><span class="line"><span class="keyword">var</span> mySpan = <span class="built_in">document</span>.querySelector(<span class="string">'span'</span>); <span class="comment">//mySpan 是DOM对象</span></span><br><span class="line"><span class="built_in">console</span>.dir(myDiv);</span><br></pre></td></tr></table></figure>

<p>（3）jQery对象（是一个伪数组）：用jquery方式来获取过来的对象  本质是$把DOM元素进行了包装。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">$(<span class="string">'div'</span>);<span class="comment">//$('div')是一个jQery对象</span></span><br><span class="line"><span class="built_in">console</span>.dir($(<span class="string">'div'</span>));</span><br></pre></td></tr></table></figure>

<p>（4）jQuery 对象只能用jQuery方法，DOM对象只能用原生js属性和方法</p>
<p>（5）DOM对象和jQuery对象相互转换：</p>
<p>​         DOM对象转换成jQuery对象：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> myvideo = <span class="built_in">document</span>.querySelector(<span class="string">'video'</span>); <span class="comment">//video是一个盒子</span></span><br><span class="line">myvideo = $(myvideo);</span><br></pre></td></tr></table></figure>

<p>​          jQuery对象转换成DOM对象：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">$(<span class="string">'video'</span>)[num];方法<span class="number">1</span>  num是下标，因为jQuery对象是一个伪数组</span><br><span class="line">$(<span class="string">'video'</span>).get(num);方法<span class="number">2</span></span><br></pre></td></tr></table></figure>

<p>（6）jQuery基础选择器</p>
<p><img src= "/img/loading.gif" data-src="https://i.loli.net/2020/07/29/Z4kdFAxGijungp9.png" alt="基础选择器"></p>
<p>（7）层级选择器</p>
<p><img src= "/img/loading.gif" data-src="https://i.loli.net/2020/07/29/RDlEpCyeiczOQdk.png" alt="层级选择器"></p>
<p>（8）jQuery隐式迭代：隐式迭代局势把匹配到的所有元素内部进行遍历循环，而无需我们进行循环遍历。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">"en"</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">"UTF-8"</span>&gt;</span><br><span class="line">    &lt;meta name=<span class="string">"viewport"</span> content=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span><br><span class="line">    &lt;title&gt;jQuery隐式迭代&lt;<span class="regexp">/title&gt;</span></span><br><span class="line"><span class="regexp">    &lt;script src="jquery.mim.js"&gt;&lt;/</span>script&gt;</span><br><span class="line">&lt;<span class="regexp">/head&gt;</span></span><br><span class="line"><span class="regexp">&lt;body&gt;</span></span><br><span class="line"><span class="regexp">    &lt;div&gt;惊不惊喜，意不意外&lt;/</span>div&gt;</span><br><span class="line">    &lt;div&gt;惊不惊喜，意不意外&lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">    &lt;div&gt;惊不惊喜，意不意外&lt;/</span>div&gt;</span><br><span class="line">    &lt;div&gt;惊不惊喜，意不意外&lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">    &lt;ul&gt;</span></span><br><span class="line"><span class="regexp">        &lt;li&gt;相同的操作&lt;/</span>li&gt;</span><br><span class="line">        &lt;li&gt;相同的操作&lt;<span class="regexp">/li&gt;</span></span><br><span class="line"><span class="regexp">        &lt;li&gt;相同的操作&lt;/</span>li&gt;</span><br><span class="line">    &lt;<span class="regexp">/ul&gt;</span></span><br><span class="line"><span class="regexp">    &lt;script&gt;</span></span><br><span class="line"><span class="regexp">        /</span><span class="regexp">/给4个div的背景颜色改为pink色（内部有隐式迭代，不需要我们进行循环了）</span></span><br><span class="line"><span class="regexp">        $("div").css("background", "pink");</span></span><br><span class="line"><span class="regexp">        /</span><span class="regexp">/隐式迭代局势把匹配到的所有元素内部进行遍历循环，给每个元素添加css这个方法</span></span><br><span class="line"><span class="regexp">        $("ul li").css("color", "red");</span></span><br><span class="line"><span class="regexp">    &lt;/</span>script&gt;</span><br><span class="line">&lt;<span class="regexp">/body&gt;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">&lt;/</span>html&gt;</span><br></pre></td></tr></table></figure>

<p>（9）jQuery筛选选择器</p>
<p><img src= "/img/loading.gif" data-src="https://i.loli.net/2020/07/29/C1ktc2oWye7zaIP.png" alt="筛选选择器"></p>
<p>（10）jQuery筛选方法</p>
<p><img src= "/img/loading.gif" data-src="https://i.loli.net/2020/07/29/XMGSlvmks9Yqp4o.png" alt="筛选方法"></p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">"en"</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">"UTF-8"</span>&gt;</span><br><span class="line">    &lt;meta name=<span class="string">"viewport"</span> content=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span><br><span class="line">    &lt;title&gt;jQuery筛选方法&lt;<span class="regexp">/title&gt;</span></span><br><span class="line"><span class="regexp">    &lt;script src="jquery.mim.js"&gt;&lt;/</span>script&gt;</span><br><span class="line">&lt;<span class="regexp">/head&gt;</span></span><br><span class="line"><span class="regexp">&lt;body&gt;</span></span><br><span class="line"><span class="regexp">    &lt;div class="yeye"&gt;</span></span><br><span class="line"><span class="regexp">        &lt;div class="father"&gt;</span></span><br><span class="line"><span class="regexp">            &lt;div class="son"&gt;儿子&lt;/</span>div&gt;</span><br><span class="line">        &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">    &lt;/</span>div&gt;</span><br><span class="line">    &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"nav"</span>&gt;</span><br><span class="line">        &lt;p&gt;我是p1&lt;<span class="regexp">/p&gt;</span></span><br><span class="line"><span class="regexp">        &lt;p&gt;我是p2&lt;/</span>p&gt;</span><br><span class="line">        &lt;div&gt;</span><br><span class="line">            &lt;p&gt;我也是p&lt;<span class="regexp">/p&gt;</span></span><br><span class="line"><span class="regexp">        &lt;/</span>div&gt;</span><br><span class="line">    &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">    &lt;script&gt;</span></span><br><span class="line"><span class="regexp">        /</span><span class="regexp">/1.parent() 返回最近的父级元素 亲爸爸</span></span><br><span class="line"><span class="regexp">        console.log($(".son").parent());</span></span><br><span class="line"><span class="regexp">        /</span><span class="regexp">/2.子</span></span><br><span class="line"><span class="regexp">        /</span><span class="regexp">/（1）亲儿子children() 括号内不写内容，返回所有亲儿子 类似子代选择器</span></span><br><span class="line"><span class="regexp">        $(".nav").children().css("color", "red");  /</span><span class="regexp">/亲儿子的儿子会继承样式修改</span></span><br><span class="line"><span class="regexp">        $(".nav").children("p").css("color", "blue");/</span><span class="regexp">/指定p这个亲儿子</span></span><br><span class="line"><span class="regexp">        /</span><span class="regexp">/（2)可以选里面所有的孩子 find() 括号内不写内容，返回所有后代 类似后代选择器</span></span><br><span class="line"><span class="regexp">        $(".nav").find("p").css('color', 'pink')</span></span><br><span class="line"><span class="regexp">    &lt;/</span>script&gt;</span><br><span class="line">&lt;<span class="regexp">/body&gt;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">&lt;/</span>html&gt;</span><br></pre></td></tr></table></figure>

<hr>
<h3 id="2-关于hexo博客的小提醒"><a href="#2-关于hexo博客的小提醒" class="headerlink" title="2.关于hexo博客的小提醒"></a>2.关于hexo博客的小提醒</h3><p>注意了！注意了！ 文章的标准不能跨级，不然会导致在文章内无法显示menu栏和目录！（跨级是指，比如说，你有一个标题是一级，然而紧接着第二个标题为三级或以下，又或者你有一标题是三级，然而紧接着第二个标题为二级，这便是跨级！</p>
<p>////知道我为什么知道吗，因为我tm就被这坑了一天才找出原因！！！</p>
]]></content>
  </entry>
  <entry>
    <title>js基础小总结2</title>
    <url>/2020/07/29/js%E5%9F%BA%E7%A1%80%E5%B0%8F%E6%80%BB%E7%BB%932/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><h3 id="1-string、number、boolean、undefined、null等简单数据类型放在栈里面，而数组、对象、带有new的函数等复杂数据类型放在堆里面"><a href="#1-string、number、boolean、undefined、null等简单数据类型放在栈里面，而数组、对象、带有new的函数等复杂数据类型放在堆里面" class="headerlink" title="1.string、number、boolean、undefined、null等简单数据类型放在栈里面，而数组、对象、带有new的函数等复杂数据类型放在堆里面"></a>1.string、number、boolean、undefined、null等简单数据类型放在栈里面，而数组、对象、带有new的函数等复杂数据类型放在堆里面</h3><h3 id="2-简单数据类型null，返回一个空的对象object"><a href="#2-简单数据类型null，返回一个空的对象object" class="headerlink" title="2.简单数据类型null，返回一个空的对象object"></a>2.简单数据类型null，返回一个空的对象object</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">console.log(ypeof(null)); &#x2F;&#x2F;object</span><br></pre></td></tr></table></figure>

<h3 id="3-Web-APIs"><a href="#3-Web-APIs" class="headerlink" title="3.Web APIs:"></a>3.Web APIs:</h3><p>(1)getElementById()  //通过id获取元素，返回元素对象</p>
<p>(2)getElementByTagName() //通过标签名获取元素，返回伪数组</p>
<p>(3)getElementByClassName() //通过类名获取元素，返回伪数组</p>
<p>(4)querySelector()//通过选择器获取第一个元素，返回第一个元素对象</p>
<p>(5)querySelector()//通过选择器获取所有元素，返回伪数组</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;ul class&#x3D;&quot;ul2&quot; id&#x3D;&quot;ul1&quot;&gt;</span><br><span class="line">        &lt;li&gt;&lt;&#x2F;li&gt;</span><br><span class="line">        &lt;li&gt;&lt;&#x2F;li&gt;</span><br><span class="line">        &lt;li&gt;&lt;&#x2F;li&gt;</span><br><span class="line">        &lt;li&gt;&lt;&#x2F;li&gt;</span><br><span class="line">        &lt;li&gt;&lt;&#x2F;li&gt;</span><br><span class="line">    &lt;&#x2F;ul&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        var ul &#x3D; document.getElementById(&#39;ul1&#39;);</span><br><span class="line">        var ul1 &#x3D; document.getElementsByTagName(&#39;ul&#39;);</span><br><span class="line">        var ul2 &#x3D; document.getElementsByClassName(&#39;ul2&#39;);</span><br><span class="line">        var ul3 &#x3D; document.querySelector(&#39;.ul2&#39;) &#x2F;&#x2F;在类名前加 .</span><br><span class="line">        var ul4 &#x3D; document.querySelector(&#39;#ul1&#39;)&#x2F;&#x2F;在id前加 #</span><br><span class="line">        var ul5 &#x3D; document.querySelector(&#39;ul&#39;)&#x2F;&#x2F;标签名不添加</span><br><span class="line">        var ul6 &#x3D; document.querySelectorAll(&#39;ul&#39;)</span><br><span class="line">        console.log(ul, ul1, ul2, ul3, ul4, ul5, ul6);</span><br><span class="line">      &lt;&#x2F;script&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br></pre></td></tr></table></figure>

<p>![](C:\Users\woduyou\Desktop\web APIs.png)</p>
<h3 id="4-element-innerText和element-HTML的区别：（两者都是获取标签内容，并且可以对其赋值）"><a href="#4-element-innerText和element-HTML的区别：（两者都是获取标签内容，并且可以对其赋值）" class="headerlink" title="4.element.innerText和element.HTML的区别：（两者都是获取标签内容，并且可以对其赋值）"></a>4.element.innerText和element.HTML的区别：（两者都是获取标签内容，并且可以对其赋值）</h3><p>(1)element.HTML能识别HTML标签</p>
<p>(2)element.HTML适合块元素（标签）</p>
<p>(3)element.innerText适合行元素（标签）</p>
<p>……剩下的以后补充</p>
<h3 id="5-浅说js的方法："><a href="#5-浅说js的方法：" class="headerlink" title="5.浅说js的方法："></a>5.浅说js的方法：</h3><p>(1)setAttribute(‘属性’, 值)    //创建自定义属性</p>
<p>(2)getAttribute(‘属性’) //获取自定义属性值，也可以获取自身属性值</p>
<p>(3)elemet.属性  //获取自身属性值</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line">	&lt;ul <span class="class"><span class="keyword">class</span></span>=<span class="string">"ul2"</span>&gt;&lt;<span class="regexp">/ul&gt;</span></span><br><span class="line"><span class="regexp">	&lt;script&gt;</span></span><br><span class="line"><span class="regexp">        var ul = document.getElementById('ul1');</span></span><br><span class="line"><span class="regexp">		ul.setAttribute('id', 'ul2')</span></span><br><span class="line"><span class="regexp">		console.log(ul.getAttribute('id')); /</span><span class="regexp">/返回ul2</span></span><br><span class="line"><span class="regexp">	&lt;/</span>script&gt;</span><br><span class="line">&lt;<span class="regexp">/body&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="6-通过父子关系获得对应节点"><a href="#6-通过父子关系获得对应节点" class="headerlink" title="6.通过父子关系获得对应节点"></a>6.通过父子关系获得对应节点</h3><p>(1)node.parentNode //父级节点</p>
<p>(2)node.childNodes //子级节点（会包含元素、文本）</p>
]]></content>
  </entry>
  <entry>
    <title>今日小结3</title>
    <url>/2020/07/31/%E4%BB%8A%E6%97%A5%E5%B0%8F%E7%BB%933/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><h3 id="今天去爬山啦！"><a href="#今天去爬山啦！" class="headerlink" title="今天去爬山啦！"></a><center>今天去爬山啦！</center></h3><p>没怎么学习，内心惭愧并快乐着···· 今天第一次爬了广州白云山，还爬上了摩星岭（别提当时多有赶紧了），可怜现在不听使唤的腿·<del>~</del></p>
<h3 id="还是学一些吧"><a href="#还是学一些吧" class="headerlink" title="还是学一些吧"></a><center>还是学一些吧</center></h3><p>1.jQuery中设置或获取元素的固有属性：prop()</p>
<p>（1）element.prop(“属性名”)；//获取属性</p>
<p>（2）element.prop(“属性名”,”值”)；//设置属性</p>
<p>注意：prop()不可以获取自定义属性</p>
<p>2.jQuery中设置或获取元素的自定义属性属性：attr()</p>
<p>（1）element.attr(“属性名”)；//获取属性  类似元素js的element.getAttribute()</p>
<p>（2）element.attr(“属性名”,”值”)；//设置属性   类似元素js的element.setAttribute()</p>
<p>3.jQuery中的change() 方法：用来检查变化事件</p>
<p>4..jQuery中的data() 方法：数据缓存data() 这个里面的数据是存放在元素的内存里面</p>
<p>综合代码 ：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">"en"</span>&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">"UTF-8"</span>&gt;</span><br><span class="line">    &lt;meta name=<span class="string">"viewport"</span> content=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span><br><span class="line">    &lt;title&gt;jQuery属性操作&lt;<span class="regexp">/title&gt;</span></span><br><span class="line"><span class="regexp">    &lt;script src="jquery.min.js"&gt;&lt;/</span>script&gt;</span><br><span class="line">    &lt;span&gt;<span class="number">123</span>&lt;<span class="regexp">/span&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;a href=<span class="string">"https://hgq169168.github.io"</span> title=<span class="string">"hello"</span>&gt;你好&lt;<span class="regexp">/a&gt;</span></span><br><span class="line"><span class="regexp">    &lt;input type="checkbox" name="" , checked&gt;</span></span><br><span class="line"><span class="regexp">    &lt;div index="1" data-index="2"&gt;我是div&lt;/</span>div&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        $(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="comment">//element.prop("属性名") 获取元素固定的属性值</span></span><br><span class="line">            <span class="built_in">console</span>.log($(<span class="string">"a"</span>).prop(<span class="string">"href"</span>));</span><br><span class="line">            <span class="comment">//element.prop("属性名", "值") 设置元素固定的属性值</span></span><br><span class="line">            $(<span class="string">"a"</span>).prop(<span class="string">"title"</span>, <span class="string">"hihi"</span>);</span><br><span class="line">            $(<span class="string">"input"</span>).change(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;<span class="comment">///change() 检测变化</span></span><br><span class="line">                <span class="built_in">console</span>.log($(<span class="keyword">this</span>).prop(<span class="string">"checked"</span>));</span><br><span class="line">            &#125;)</span><br><span class="line">            <span class="comment">//elemt.attr("属性名") 获取元素自定义的属性值</span></span><br><span class="line">            <span class="built_in">console</span>.log($(<span class="string">"div"</span>).attr(<span class="string">"index"</span>));</span><br><span class="line">            <span class="comment">//element.prop("属性名", "值") 设置元素固定的属性值</span></span><br><span class="line">            $(<span class="string">"div"</span>).attr(<span class="string">"data-index"</span>, <span class="string">"66"</span>);</span><br><span class="line">            <span class="built_in">console</span>.log($(<span class="string">"div"</span>).attr(<span class="string">"data-index"</span>));</span><br><span class="line">            <span class="comment">//数据缓存data() 这个里面的数据是存放在元素的内存里面</span></span><br><span class="line">            $(<span class="string">"span"</span>).data(<span class="string">"uname"</span>, <span class="string">"angy"</span>);  <span class="comment">//不会添加到span的行内式里面</span></span><br><span class="line">            <span class="built_in">console</span>.log($(<span class="string">"span"</span>).data(<span class="string">"uname"</span>));</span><br><span class="line">            <span class="comment">//data()方法可以获取data-index h5自定义属性  不用写data- 而且返回的是数字型</span></span><br><span class="line">            <span class="built_in">console</span>.log($(<span class="string">"div"</span>).data(<span class="string">"index"</span>));</span><br><span class="line">        &#125;)</span><br><span class="line">    &lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>body&gt;</span><br><span class="line"></span><br><span class="line">&lt;<span class="regexp">/html&gt;</span></span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title>今日小结2</title>
    <url>/2020/07/30/%E4%BB%8A%E6%97%A5%E5%B0%8F%E7%BB%932/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><h3 id="1-jQuery的样式css理解"><a href="#1-jQuery的样式css理解" class="headerlink" title="1.jQuery的样式css理解"></a>1.jQuery的样式css理解</h3><p>（1）$(this).css(“color”); //直接返回属性color的值  this是当前元素，如果写元素名称，需要加引号，如”div”</p>
<p>（2） $(this).css(“color”, “red”); //修改属性color的值为red</p>
<p>（3）$(this).css({“color”: “white”, “font-side”: “20px”,});  //括号内写对象，实现修改多个属性，写数值不用加引号，如上面的”20px”可以写成20</p>
<h3 id="2-jQuery设置类样式方法"><a href="#2-jQuery设置类样式方法" class="headerlink" title="2.jQuery设置类样式方法"></a>2.jQuery设置类样式方法</h3><p>（1）$(this).addClass()  //增加类名</p>
<p>（2）$(this).removeClass() //移除类名</p>
<p>（3）$(this).toggleClass() //切换类名</p>
<h3 id="3-jQuery显示隐藏属性"><a href="#3-jQuery显示隐藏属性" class="headerlink" title="3.jQuery显示隐藏属性"></a>3.jQuery显示隐藏属性</h3><p>（1）显示show([spead],[easing],[fn])：$(this).eq(n).show(); //eq()是选择第n个元素</p>
<p>（2）隐藏hide()：$(this).eq(n).hide() ;</p>
<p>（3）切换toggle()：$(this).eq(n).toggle() ;</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">"en"</span>&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">"UTF-8"</span>&gt;</span><br><span class="line">    &lt;meta name=<span class="string">"viewport"</span> content=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span><br><span class="line">    &lt;title&gt;jQuery效果之显示隐藏&lt;<span class="regexp">/title&gt;</span></span><br><span class="line"><span class="regexp">    &lt;script src="jquery.min.js"&gt;&lt;/</span>script&gt;</span><br><span class="line">    &lt;style&gt;</span><br><span class="line">        div &#123;</span><br><span class="line">            width: <span class="number">200</span>px;</span><br><span class="line">            height: <span class="number">300</span>px;</span><br><span class="line">            background-color: pink;</span><br><span class="line">            margin: <span class="number">10</span>px <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;<span class="regexp">/style&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;button&gt;显示&lt;<span class="regexp">/button&gt;</span></span><br><span class="line"><span class="regexp">    &lt;button&gt;隐藏&lt;/</span>button&gt;</span><br><span class="line">    &lt;button&gt;切换&lt;<span class="regexp">/button&gt;</span></span><br><span class="line"><span class="regexp">    &lt;div&gt;&lt;/</span>div&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        $(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="comment">//显示</span></span><br><span class="line">            $(<span class="string">"button"</span>).eq(<span class="number">0</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                $(<span class="string">"div"</span>).show(<span class="number">1000</span>)</span><br><span class="line">            &#125;)</span><br><span class="line">            <span class="comment">//隐藏</span></span><br><span class="line">            $(<span class="string">"button"</span>).eq(<span class="number">1</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                $(<span class="string">"div"</span>).hide(<span class="number">1000</span>) <span class="comment">//hide()有三个参数speed easing fn（回调函数）</span></span><br><span class="line">            &#125;)</span><br><span class="line">            $(<span class="string">"button"</span>).eq(<span class="number">2</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                $(<span class="string">"div"</span>).toggle(<span class="number">1000</span>)</span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;)</span><br><span class="line">    &lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>body&gt;</span><br><span class="line"></span><br><span class="line">&lt;<span class="regexp">/html&gt;</span></span><br></pre></td></tr></table></figure>



<h3 id="4-链式编程："><a href="#4-链式编程：" class="headerlink" title="4.链式编程："></a>4.链式编程：</h3><p>(1)$(this).css(“color”, “red”).siblings().css(“color”, “”);</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">"en"</span>&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">"UTF-8"</span>&gt;</span><br><span class="line">    &lt;meta name=<span class="string">"viewport"</span> content=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span><br><span class="line">    &lt;meta http-equiv=<span class="string">"X-UA-Compatible"</span> content=<span class="string">"ie=edge"</span>&gt;</span><br><span class="line">    &lt;title&gt;链式编程&lt;<span class="regexp">/title&gt;</span></span><br><span class="line"><span class="regexp">    &lt;script src="jquery.min.js"&gt;&lt;/</span>script&gt;</span><br><span class="line">&lt;<span class="regexp">/head&gt;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">&lt;body&gt;</span></span><br><span class="line"><span class="regexp">    &lt;button&gt;快速&lt;/</span>button&gt;</span><br><span class="line">    &lt;button&gt;快速&lt;<span class="regexp">/button&gt;</span></span><br><span class="line"><span class="regexp">    &lt;button&gt;快速&lt;/</span>button&gt;</span><br><span class="line">    &lt;button&gt;快速&lt;<span class="regexp">/button&gt;</span></span><br><span class="line"><span class="regexp">    &lt;button&gt;快速&lt;/</span>button&gt;</span><br><span class="line">    &lt;button&gt;快速&lt;<span class="regexp">/button&gt;</span></span><br><span class="line"><span class="regexp">    &lt;button&gt;快速&lt;/</span>button&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        $(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="comment">// 1. 隐式迭代 给所有的按钮都绑定了点击事件</span></span><br><span class="line">            $(<span class="string">"button"</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                <span class="comment">// 2. 让当前元素颜色变为红色</span></span><br><span class="line">                <span class="comment">// $(this).css("color", "red");</span></span><br><span class="line">                <span class="comment">// 3. 让其余的姐妹元素不变色 </span></span><br><span class="line">                <span class="comment">// $(this).siblings().css("color", "");</span></span><br><span class="line">                <span class="comment">// 链式编程</span></span><br><span class="line">                $(<span class="keyword">this</span>).css(<span class="string">"color"</span>, <span class="string">"red"</span>).siblings().css(<span class="string">"color"</span>, <span class="string">""</span>);</span><br><span class="line">            &#125;);<span class="comment">//sibligs()是指除去this的所有亲兄弟</span></span><br><span class="line">        &#125;)</span><br><span class="line">    &lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>body&gt;</span><br><span class="line"></span><br><span class="line">&lt;<span class="regexp">/html&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="5-jQuery滑动"><a href="#5-jQuery滑动" class="headerlink" title="5.jQuery滑动"></a>5.jQuery滑动</h3><p>（1）上滑:lideUp([spead],[easing],[fn])</p>
<p>（2）下滑：lideDomn()</p>
<p>（3）切换上下滑：slideToggle()</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">"en"</span>&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">"UTF-8"</span>&gt;</span><br><span class="line">    &lt;meta name=<span class="string">"viewport"</span> content=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span><br><span class="line">    &lt;title&gt;简洁版滑动下拉菜单&lt;<span class="regexp">/title&gt;</span></span><br><span class="line"><span class="regexp">    &lt;script src="jquery.min.js"&gt;&lt;/</span>script&gt;</span><br><span class="line">    &lt;style&gt;</span><br><span class="line">        div &#123;</span><br><span class="line">            width: <span class="number">220</span>px;</span><br><span class="line">            height: <span class="number">300</span>px;</span><br><span class="line">            background-color: pink;</span><br><span class="line">            display: none;</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;<span class="regexp">/style&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;button&gt;下拉滑动&lt;<span class="regexp">/button&gt;</span></span><br><span class="line"><span class="regexp">    &lt;button&gt;上拉滑动&lt;/</span>button&gt;</span><br><span class="line">    &lt;button&gt;切换滑动&lt;<span class="regexp">/button&gt;</span></span><br><span class="line"><span class="regexp">    &lt;div&gt;&lt;/</span>div&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        $(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="comment">//下拉滑动</span></span><br><span class="line">            $(<span class="string">"button"</span>).eq(<span class="number">0</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                $(<span class="string">"div"</span>).slideDown(<span class="number">1000</span>);</span><br><span class="line">            &#125;)</span><br><span class="line">            <span class="comment">//上拉滑动</span></span><br><span class="line">            $(<span class="string">"button"</span>).eq(<span class="number">1</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                $(<span class="string">"div"</span>).slideUp(<span class="number">1000</span>);</span><br><span class="line">            &#125;)</span><br><span class="line">            <span class="comment">// 切换滑动</span></span><br><span class="line">            $(<span class="string">"button"</span>).eq(<span class="number">2</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                $(<span class="string">"div"</span>).slideToggle(<span class="number">1000</span>);</span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;)</span><br><span class="line">    &lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>body&gt;</span><br><span class="line"></span><br><span class="line">&lt;<span class="regexp">/html&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="6-停止排队stop-方法-防止多次触发而导致的动画或效果排队"><a href="#6-停止排队stop-方法-防止多次触发而导致的动画或效果排队" class="headerlink" title="6.停止排队stop()方法:防止多次触发而导致的动画或效果排队"></a>6.停止排队stop()方法:防止多次触发而导致的动画或效果排队</h3><p>（1）stop()方法必须写在动画效果的前面</p>
<p>如上例代码中：$(“div”).slideToggle(1000);</p>
<p>加上stop():$(“div”).stop().slideToggle(1000);</p>
<h3 id="7-jQuery淡出淡入效果"><a href="#7-jQuery淡出淡入效果" class="headerlink" title="7.jQuery淡出淡入效果"></a>7.jQuery淡出淡入效果</h3><p>（1）淡入：fadeIn([spead],[easing],[fn]):</p>
<p>（2）淡出：fadeOut([spead],[easing],[fn]):</p>
<p>（3）切换：fadeToggle([spead],[easing],[fn]):</p>
<p>（4）渐进方式调整透明度：fadeTo(spead，opacity, [easing], [fn]); //spead和opacity(透明度）必须写</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">"en"</span>&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">"UTF-8"</span>&gt;</span><br><span class="line">    &lt;meta name=<span class="string">"viewport"</span> content=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span><br><span class="line">    &lt;title&gt;jQuery淡入淡出效果&lt;<span class="regexp">/title&gt;</span></span><br><span class="line"><span class="regexp">    &lt;script src="jquery.min.js"&gt;&lt;/</span>script&gt;</span><br><span class="line">    &lt;style&gt;</span><br><span class="line">        div &#123;</span><br><span class="line">            width: <span class="number">150</span>px;</span><br><span class="line">            height: <span class="number">300</span>px;</span><br><span class="line">            background-color: red;</span><br><span class="line">            display: none;</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;<span class="regexp">/style&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;button&gt;淡入效果&lt;<span class="regexp">/button&gt;</span></span><br><span class="line"><span class="regexp">    &lt;button&gt;淡出效果&lt;/</span>button&gt;</span><br><span class="line">    &lt;button&gt;淡出淡入切换效果&lt;<span class="regexp">/button&gt;</span></span><br><span class="line"><span class="regexp">    &lt;button&gt;修改透明度&lt;/</span>button&gt;</span><br><span class="line">    &lt;div&gt;&lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">    &lt;script&gt;</span></span><br><span class="line"><span class="regexp">        $(function () &#123;</span></span><br><span class="line"><span class="regexp">            /</span><span class="regexp">/淡入效果fadeIN()</span></span><br><span class="line"><span class="regexp">            $("button").eq(0).click(function () &#123;</span></span><br><span class="line"><span class="regexp">                $("div").fadeIn(1000);</span></span><br><span class="line"><span class="regexp">            &#125;)</span></span><br><span class="line"><span class="regexp">            /</span><span class="regexp">/淡出效果fadeOut()</span></span><br><span class="line"><span class="regexp">            $("button").eq(1).click(function () &#123;</span></span><br><span class="line"><span class="regexp">                $("div").fadeOut(1000);</span></span><br><span class="line"><span class="regexp">            &#125;)</span></span><br><span class="line"><span class="regexp">            /</span><span class="regexp">/淡入效果fadeIN()</span></span><br><span class="line"><span class="regexp">            $("button").eq(2).click(function () &#123;</span></span><br><span class="line"><span class="regexp">                $("div").fadeToggle(1000);</span></span><br><span class="line"><span class="regexp">            &#125;)</span></span><br><span class="line"><span class="regexp">            /</span><span class="regexp">/透明度</span></span><br><span class="line"><span class="regexp">            $("button").eq(3).click(function () &#123;</span></span><br><span class="line"><span class="regexp">                $("div").fadeTo(1000, 0.2);/</span><span class="regexp">/速度和透明必须写</span></span><br><span class="line"><span class="regexp">            &#125;)</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">        &#125;)</span></span><br><span class="line"><span class="regexp">    &lt;/</span>script&gt;</span><br><span class="line">&lt;<span class="regexp">/body&gt;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">&lt;/</span>html&gt;</span><br></pre></td></tr></table></figure>





]]></content>
  </entry>
  <entry>
    <title>今日小结4</title>
    <url>/2020/08/01/%E4%BB%8A%E6%97%A5%E5%B0%8F%E7%BB%934/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><h3 id="jQuery的筛选方法："><a href="#jQuery的筛选方法：" class="headerlink" title="jQuery的筛选方法："></a>jQuery的筛选方法：</h3><p>（1）element.parents(); //查找所有父辈元素</p>
<p>（2）element.find();//查找所有子辈元素</p>
<h3 id="jQuery基本函数："><a href="#jQuery基本函数：" class="headerlink" title="jQuery基本函数："></a>jQuery基本函数：</h3><p>（1）num.toFxied(2);//保留两位小数  num是数值</p>
<p>（2）str.substr(1); //选出第二位至最后一位的字符串</p>
<p>​            str.substr(1, 10); //选出第二位至最后第十位的字符串</p>
<h3 id="jQuery中遍历each"><a href="#jQuery中遍历each" class="headerlink" title="jQuery中遍历each()"></a>jQuery中遍历each()</h3><p>（1）$(“div”).each(index, domEle) {};//可以遍历标签元素 index和domEle必须写，位置固定</p>
<p>（2）$.each(object, function(index, element) {}) //可以遍历任何元素，主要用于数据处理，如数组、对象     </p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">"en"</span>&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">"UTF-8"</span>&gt;</span><br><span class="line">    &lt;meta name=<span class="string">"viewport"</span> content=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span><br><span class="line">    &lt;meta http-equiv=<span class="string">"X-UA-Compatible"</span> content=<span class="string">"ie=edge"</span>&gt;</span><br><span class="line">    &lt;title&gt;jQuery遍历元素&lt;<span class="regexp">/title&gt;</span></span><br><span class="line"><span class="regexp">    &lt;style&gt;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">    &lt;/</span>style&gt;</span><br><span class="line">    &lt;script src=<span class="string">"jquery.min.js"</span>&gt;&lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;div&gt;<span class="number">1</span>&lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">    &lt;div&gt;2&lt;/</span>div&gt;</span><br><span class="line">    &lt;div&gt;<span class="number">3</span>&lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">    &lt;script&gt;</span></span><br><span class="line"><span class="regexp">        $(function () &#123;</span></span><br><span class="line"><span class="regexp">            /</span><span class="regexp">/ $("div").css("color", "red");</span></span><br><span class="line"><span class="regexp">            /</span><span class="regexp">/ 如果针对于同一类元素做不同操作，需要用到遍历元素（类似for，但是比for强大）</span></span><br><span class="line"><span class="regexp">            var sum = 0;</span></span><br><span class="line"><span class="regexp">            /</span><span class="regexp">/ 1. each() 方法遍历元素 </span></span><br><span class="line"><span class="regexp">            var arr = ["red", "green", "blue"];</span></span><br><span class="line"><span class="regexp">            $("div").each(function (i, domEle) &#123;</span></span><br><span class="line"><span class="regexp">                /</span><span class="regexp">/ 回调函数第一个参数一定是索引号  可以自己指定索引号号名称</span></span><br><span class="line"><span class="regexp">                /</span><span class="regexp">/ console.log(index);</span></span><br><span class="line"><span class="regexp">                console.log(i);</span></span><br><span class="line"><span class="regexp">                /</span><span class="regexp">/ 回调函数第二个参数一定是 dom元素对象 也可以自己命名</span></span><br><span class="line"><span class="regexp">                console.log(domEle);</span></span><br><span class="line"><span class="regexp">                /</span><span class="regexp">/ domEle.css("color"); dom对象没有css方法</span></span><br><span class="line"><span class="regexp">                $(domEle).css("color", arr[i]);</span></span><br><span class="line"><span class="regexp">                sum += parseInt($(domEle).text());/</span><span class="regexp">/需要先转换$(domEle)</span></span><br><span class="line"><span class="regexp">            &#125;)</span></span><br><span class="line"><span class="regexp">            console.log(sum);</span></span><br><span class="line"><span class="regexp">            /</span><span class="regexp">/ 2. $.each() 方法遍历元素 主要用于遍历数据，处理数据</span></span><br><span class="line"><span class="regexp">            /</span><span class="regexp">/ $.each($("div"), function(i, ele) &#123;</span></span><br><span class="line"><span class="regexp">            /</span><span class="regexp">/     console.log(i);</span></span><br><span class="line"><span class="regexp">            /</span><span class="regexp">/     console.log(ele);</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">            /</span><span class="regexp">/ &#125;);</span></span><br><span class="line"><span class="regexp">            /</span><span class="regexp">/ 遍历元组</span></span><br><span class="line"><span class="regexp">            $.each(arr, function (i, ele) &#123;</span></span><br><span class="line"><span class="regexp">                console.log(i);</span></span><br><span class="line"><span class="regexp">                console.log(ele);</span></span><br><span class="line"><span class="regexp">            &#125;)</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">            /</span><span class="regexp">/遍历对象</span></span><br><span class="line"><span class="regexp">            $.each(&#123;</span></span><br><span class="line"><span class="regexp">                name: "andy",</span></span><br><span class="line"><span class="regexp">                age: 18</span></span><br><span class="line"><span class="regexp">            &#125;, function (i, ele) &#123;</span></span><br><span class="line"><span class="regexp">                console.log(i); /</span><span class="regexp">/ 输出的是 name age 属性名</span></span><br><span class="line"><span class="regexp">                console.log(ele); /</span><span class="regexp">/ 输出的是 andy  18 属性值</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">            &#125;)</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">        &#125;)</span></span><br><span class="line"><span class="regexp">    &lt;/</span>script&gt;</span><br><span class="line">&lt;<span class="regexp">/body&gt;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">&lt;/</span>html&gt;</span><br></pre></td></tr></table></figure>



<h3 id="jQuery绑定、解绑事件"><a href="#jQuery绑定、解绑事件" class="headerlink" title="jQuery绑定、解绑事件:"></a>jQuery绑定、解绑事件:</h3><p>（1）绑定事件： element.on(events, [selector], fn)</p>
<p><img src= "/img/loading.gif" data-src="C:%5CUsers%5Cwoduyou%5Cblog%5Cimages%5C%E4%BA%8B%E4%BB%B6%E5%A4%84%E7%90%86on().png" alt=""></p>
<p>（2）解绑事件：element.off()</p>
<p>（3）一次绑定事件：element.one()</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">"en"</span>&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">"UTF-8"</span>&gt;</span><br><span class="line">    &lt;meta name=<span class="string">"viewport"</span> content=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span><br><span class="line">    &lt;title&gt;事件解绑&lt;<span class="regexp">/title&gt;</span></span><br><span class="line"><span class="regexp">    &lt;script src="jquery.min.js"&gt;&lt;/</span>script&gt;</span><br><span class="line">    &lt;style&gt;</span><br><span class="line">        div &#123;</span><br><span class="line">            width: <span class="number">100</span>px;</span><br><span class="line">            height: <span class="number">100</span>px;</span><br><span class="line">            background-color: pink;</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;<span class="regexp">/style&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;div&gt;&lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">    &lt;ul&gt;</span></span><br><span class="line"><span class="regexp">        &lt;li&gt;hhhh&lt;/</span>li&gt;</span><br><span class="line">        &lt;li&gt;hhhh&lt;<span class="regexp">/li&gt;</span></span><br><span class="line"><span class="regexp">        &lt;li&gt;hhhh&lt;/</span>li&gt;</span><br><span class="line">        &lt;li&gt;hhhh&lt;<span class="regexp">/li&gt;</span></span><br><span class="line"><span class="regexp">    &lt;/u</span>l&gt;</span><br><span class="line">    &lt;span&gt;哈喽&lt;<span class="regexp">/span&gt;</span></span><br><span class="line"><span class="regexp">    &lt;p&gt;我是p&lt;/</span>p&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        $(<span class="string">"div"</span>).on(&#123;</span><br><span class="line">            mouseenter: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                <span class="built_in">console</span>.log(<span class="string">"我经过了"</span>);</span><br><span class="line">            &#125;,</span><br><span class="line">            mouseleave: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                <span class="built_in">console</span>.log(<span class="string">"我离开了"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">        <span class="comment">// $("div").off()//直接解绑div中所有的事件</span></span><br><span class="line">        $(<span class="string">"div"</span>).off(<span class="string">"mouseenter"</span>)<span class="comment">//解绑div中mouseenter的事件</span></span><br><span class="line"></span><br><span class="line">        $(<span class="string">"ul"</span>).on(<span class="string">"click"</span>, <span class="string">"li"</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">'哥哥，我美吗'</span>);</span><br><span class="line">        &#125;)</span><br><span class="line">        $(<span class="string">"ul"</span>).off(<span class="string">"click"</span>, <span class="string">"li"</span>)<span class="comment">//解绑委托事件</span></span><br><span class="line">        <span class="comment">// $("ul").off("", "li")//这个也行喔</span></span><br><span class="line"></span><br><span class="line">        $(<span class="string">"span"</span>).on(<span class="string">"click"</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            alert(<span class="string">'我们不一样'</span>);</span><br><span class="line">        &#125;)</span><br><span class="line">        $(<span class="string">"span"</span>).off();</span><br><span class="line"></span><br><span class="line">        $(<span class="string">"p"</span>).one(<span class="string">"click"</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            alert(<span class="string">'我是p'</span>);</span><br><span class="line">        &#125;)</span><br><span class="line"></span><br><span class="line">    &lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>body&gt;</span><br><span class="line"></span><br><span class="line">&lt;<span class="regexp">/html&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="jQuery创建、添加、删除事件"><a href="#jQuery创建、添加、删除事件" class="headerlink" title="jQuery创建、添加、删除事件"></a>jQuery创建、添加、删除事件</h3><p>（1）创建：var li = $(“<li>我是小li</li>“);</p>
<p>​                      var div = $(“<div>我是div</div>“)</p>
<p>（2）添加：</p>
<p>​    内部添加：$(“ul”).prepend(li); //添加到原有的li前面</p>
<p>​                         $(“ul”).append(li); //添加到原有的li后面</p>
<p>​    外部添加：</p>
<p>​                        $(“div”).before(div);//添加到原有的div的前面 会添加1个div</p>
<p>​                      $(“div”).after(div);//添加到原有的div的后面 会添加两个div（因为前面添加了一个div</p>
<p>（3）删除：remove()   </p>
<p>​                      empty() //清空</p>
<p>​                        HTML()</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">"en"</span>&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">"UTF-8"</span>&gt;</span><br><span class="line">    &lt;meta name=<span class="string">"viewport"</span> content=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span><br><span class="line">    &lt;title&gt;创建添加删除元素&lt;<span class="regexp">/title&gt;</span></span><br><span class="line"><span class="regexp">    &lt;script src="jquery.min.js"&gt;&lt;/</span>script&gt;</span><br><span class="line">&lt;<span class="regexp">/head&gt;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">&lt;body&gt;</span></span><br><span class="line"><span class="regexp">    &lt;ul&gt;</span></span><br><span class="line"><span class="regexp">        &lt;li&gt;我是原来的li&lt;/</span>li&gt;</span><br><span class="line">    &lt;<span class="regexp">/ul&gt;</span></span><br><span class="line"><span class="regexp">    &lt;div class="test"&gt;我是原来的div&lt;/</span>div&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        $(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="comment">//1.创建元素</span></span><br><span class="line">            <span class="keyword">var</span> li1 = $(<span class="string">"&lt;li&gt;我是后来的li&lt;/li&gt;"</span>);</span><br><span class="line">            <span class="keyword">var</span> li2 = $(<span class="string">"&lt;li&gt;我也是后来的li&lt;/li&gt;"</span>);</span><br><span class="line">            <span class="keyword">var</span> div1 = $(<span class="string">"&lt;div&gt;我是后来的div1&lt;/div&gt;"</span>)</span><br><span class="line">            <span class="keyword">var</span> div2 = $(<span class="string">"&lt;div&gt;我是后来的div2&lt;/div&gt;"</span>)</span><br><span class="line"></span><br><span class="line">            <span class="comment">//2.添加元素</span></span><br><span class="line">            <span class="comment">//（1）内部添加</span></span><br><span class="line">            $(<span class="string">"ul"</span>).prepend(li1); <span class="comment">//添加到原有的li前面</span></span><br><span class="line">            $(<span class="string">"ul"</span>).append(li2); <span class="comment">//添加到原有的li后面</span></span><br><span class="line">            <span class="comment">//（2）外部添加</span></span><br><span class="line">            $(<span class="string">"div"</span>).before(div1);<span class="comment">//添加到原有的div的前面 会添加1个div</span></span><br><span class="line">            $(<span class="string">"div"</span>).after(div2);<span class="comment">//添加到原有的div的后面 会添加两个div（因为前面添加了一个div1（变量名）</span></span><br><span class="line">            <span class="comment">//3删除元素</span></span><br><span class="line">            <span class="comment">// $("ul").remove()  //连带ul里面的li也删除</span></span><br><span class="line">            <span class="comment">// $("ul").empty()  //清空 把ul里面的li删除掉</span></span><br><span class="line">            $(<span class="string">"ul"</span>).HTML() <span class="comment">//清空 把ul里面的li删除掉</span></span><br><span class="line"></span><br><span class="line">        &#125;)</span><br><span class="line"></span><br><span class="line">    &lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>body&gt;</span><br><span class="line"></span><br><span class="line">&lt;<span class="regexp">/html&gt;</span></span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title>今日小结5</title>
    <url>/2020/08/02/%E4%BB%8A%E6%97%A5%E5%B0%8F%E7%BB%935/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><h3 id="jQuery自动触发事件"><a href="#jQuery自动触发事件" class="headerlink" title="jQuery自动触发事件"></a>jQuery自动触发事件</h3><p>（1）element.click(); //自动触发点击事件，会触发元素默认行为</p>
<p>（2）element.trigger(“type”);  //type是指事件，如click、mouseenter等，会触发元素默认行为</p>
<p>（3）element.triggerHandler(“type”); //不会触发元素默认行为</p>
<p>请看代码：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">"en"</span>&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">"UTF-8"</span>&gt;</span><br><span class="line">    &lt;meta name=<span class="string">"viewport"</span> content=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span><br><span class="line">    &lt;title&gt;自动触发事件&lt;<span class="regexp">/title&gt;</span></span><br><span class="line"><span class="regexp">    &lt;style&gt;</span></span><br><span class="line"><span class="regexp">        div &#123;</span></span><br><span class="line"><span class="regexp">            width: 100px;</span></span><br><span class="line"><span class="regexp">            height: 100px;</span></span><br><span class="line"><span class="regexp">            background-color: pink;</span></span><br><span class="line"><span class="regexp">        &#125;</span></span><br><span class="line"><span class="regexp">    &lt;/</span>style&gt;</span><br><span class="line">    &lt;script src=<span class="string">"jquery.min.js"</span>&gt;&lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp">    &lt;script&gt;</span></span><br><span class="line"><span class="regexp">        $(function () &#123;</span></span><br><span class="line"><span class="regexp">            $("div").on("click", function () &#123;</span></span><br><span class="line"><span class="regexp">                alert(111);</span></span><br><span class="line"><span class="regexp">            &#125;)</span></span><br><span class="line"><span class="regexp">            /</span><span class="regexp">/ (1)click()方法</span></span><br><span class="line"><span class="regexp">            /</span><span class="regexp">/ $("div").click();/</span><span class="regexp">/会触发元素默认行为</span></span><br><span class="line"><span class="regexp">            /</span><span class="regexp">/(2)trigger()方法</span></span><br><span class="line"><span class="regexp">            /</span><span class="regexp">/ $("div").trigger("click");/</span><span class="regexp">/会触发元素默认行为</span></span><br><span class="line"><span class="regexp">            /</span><span class="regexp">/(3)triggerhandler()</span></span><br><span class="line"><span class="regexp">            $("div").triggerHandler("click");  /</span><span class="regexp">/不会触发元素默认行为</span></span><br><span class="line"><span class="regexp">            $("input").on("focus", function () &#123;</span></span><br><span class="line"><span class="regexp">                $(this).val("你好吗");</span></span><br><span class="line"><span class="regexp">            &#125;)</span></span><br><span class="line"><span class="regexp">            $("input").triggerHandler("focus"); /</span><span class="regexp">/不会出现光标在框框里面闪烁的默认行为</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">        &#125;)</span></span><br><span class="line"><span class="regexp">    &lt;/</span>script&gt;</span><br><span class="line">&lt;<span class="regexp">/head&gt;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">&lt;body&gt;</span></span><br><span class="line"><span class="regexp">    &lt;div&gt;&lt;/</span>div&gt;</span><br><span class="line">    &lt;input type=<span class="string">"text"</span>&gt;</span><br><span class="line">&lt;<span class="regexp">/body&gt;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">&lt;/</span>html&gt;</span><br></pre></td></tr></table></figure>

<h3 id="jQuery阻止冒泡"><a href="#jQuery阻止冒泡" class="headerlink" title="jQuery阻止冒泡"></a>jQuery阻止冒泡</h3><p>阻止默认行为：event.preventDefault() 或者return false</p>
<p>阻止冒泡：event.stopPropagation()</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">"en"</span>&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">"UTF-8"</span>&gt;</span><br><span class="line">    &lt;meta name=<span class="string">"viewport"</span> content=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span><br><span class="line">    &lt;title&gt;事件对象&lt;<span class="regexp">/title&gt;</span></span><br><span class="line"><span class="regexp">    &lt;script src="jquery.min.js"&gt;&lt;/</span>script&gt;</span><br><span class="line">    &lt;style&gt;</span><br><span class="line">        div &#123;</span><br><span class="line">            width: <span class="number">100</span>px;</span><br><span class="line">            height: <span class="number">100</span>px;</span><br><span class="line">            background-color: pink;</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;<span class="regexp">/style&gt;</span></span><br><span class="line"><span class="regexp">    &lt;script&gt;</span></span><br><span class="line"><span class="regexp">        $(function () &#123;</span></span><br><span class="line"><span class="regexp">            $(document).on("click", function () &#123;</span></span><br><span class="line"><span class="regexp">                console.log("点击了document");</span></span><br><span class="line"><span class="regexp">            &#125;)</span></span><br><span class="line"><span class="regexp">            $("div").on("click", function (event) &#123;</span></span><br><span class="line"><span class="regexp">                /</span><span class="regexp">/ console.log(event);</span></span><br><span class="line"><span class="regexp">                console.log("点击了div");</span></span><br><span class="line"><span class="regexp">                event.stopPropagation();/</span><span class="regexp">/阻止冒泡</span></span><br><span class="line"><span class="regexp">            &#125;)</span></span><br><span class="line"><span class="regexp">        &#125;)</span></span><br><span class="line"><span class="regexp">    &lt;/</span>script&gt;</span><br><span class="line">&lt;<span class="regexp">/head&gt;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">&lt;body&gt;</span></span><br><span class="line"><span class="regexp">    &lt;div&gt;&lt;/</span>div&gt;</span><br><span class="line">&lt;<span class="regexp">/body&gt;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">&lt;/</span>html&gt;</span><br></pre></td></tr></table></figure>

<h3 id="jQuery对象拷贝"><a href="#jQuery对象拷贝" class="headerlink" title="jQuery对象拷贝"></a>jQuery对象拷贝</h3><p>$.extend([deep,] target, object, object1, [objectN]);</p>
<p><img src= "/img/loading.gif" data-src="https://i.loli.net/2020/08/02/c7pS5xM1iGgLOd2.png" alt=""></p>
<p>请看代码：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang&#x3D;&quot;en&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset&#x3D;&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;meta name&#x3D;&quot;viewport&quot; content&#x3D;&quot;width&#x3D;device-width, initial-scale&#x3D;1.0&quot;&gt;</span><br><span class="line">    &lt;title&gt;jQuery对象拷贝&lt;&#x2F;title&gt;</span><br><span class="line">    &lt;script src&#x3D;&quot;jquery.min.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        $(function () &#123;</span><br><span class="line">            &#x2F;&#x2F; var targetObj &#x3D; &#123;&#125;;</span><br><span class="line">            &#x2F;&#x2F; var obj &#x3D; &#123;</span><br><span class="line">            &#x2F;&#x2F;     id: 1,</span><br><span class="line">            &#x2F;&#x2F;     name: &quot;andy&quot;</span><br><span class="line">            &#x2F;&#x2F; &#125;;</span><br><span class="line">            &#x2F;&#x2F; $.extend(targetObj, obj)（浅拷贝）</span><br><span class="line">            &#x2F;&#x2F; console.log(targetObj);</span><br><span class="line">            &#x2F;&#x2F; var targetObj &#x3D; &#123;</span><br><span class="line">            &#x2F;&#x2F;     sex: &quot;m&quot;,</span><br><span class="line">            &#x2F;&#x2F;     id: 0</span><br><span class="line">            &#x2F;&#x2F; &#125;;</span><br><span class="line">            &#x2F;&#x2F; var obj &#x3D; &#123;</span><br><span class="line">            &#x2F;&#x2F;     id: 1,</span><br><span class="line">            &#x2F;&#x2F;     name: &quot;andy&quot;</span><br><span class="line">            &#x2F;&#x2F; &#125;;</span><br><span class="line">            &#x2F;&#x2F; $.extend(targetObj, obj) &#x2F;&#x2F;（浅拷贝）相同的属性明会被覆盖原来的数据 如：id&#x3D;0被覆盖为id&#x3D;1</span><br><span class="line">            &#x2F;&#x2F; console.log(targetObj);</span><br><span class="line">            &#x2F;&#x2F; var targetObj &#x3D; &#123;</span><br><span class="line">            &#x2F;&#x2F;     sex: &quot;m&quot;,</span><br><span class="line">            &#x2F;&#x2F;     id: 0,</span><br><span class="line">            &#x2F;&#x2F;     msg: &#123;</span><br><span class="line">            &#x2F;&#x2F;         sex: &quot;男&quot;</span><br><span class="line">            &#x2F;&#x2F;     &#125;</span><br><span class="line">            &#x2F;&#x2F; &#125;;</span><br><span class="line">            &#x2F;&#x2F; var obj &#x3D; &#123;</span><br><span class="line">            &#x2F;&#x2F;     id: 1,</span><br><span class="line">            &#x2F;&#x2F;     name: &quot;andy&quot;,</span><br><span class="line">            &#x2F;&#x2F;     msg: &#123;</span><br><span class="line">            &#x2F;&#x2F;         age: 18</span><br><span class="line">            &#x2F;&#x2F;     &#125;</span><br><span class="line">            &#x2F;&#x2F; &#125;;</span><br><span class="line">            &#x2F;&#x2F; $.extend(targetObj, obj)</span><br><span class="line">            &#x2F;&#x2F; console.log(targetObj);&#x2F;&#x2F;（浅拷贝）返回msg：&#123;age: 18&#125;， 会覆盖sex：&quot;男&quot;</span><br><span class="line">            &#x2F;&#x2F; &#x2F;&#x2F;浅拷贝（把被拷贝对象复杂数据类型中的地址拷贝给目标对象），发生修改后，会影响被拷贝对像</span><br><span class="line">            &#x2F;&#x2F; targetObj.msg.age &#x3D; 20;</span><br><span class="line">            &#x2F;&#x2F; console.log(targetObj);</span><br><span class="line">            &#x2F;&#x2F; console.log(obj);</span><br><span class="line"></span><br><span class="line">            &#x2F;&#x2F;深拷贝，前面加true，完全克隆（拷贝的是对象，不是地址），修改目标对像不会影响被拷贝对象</span><br><span class="line">            var targetObj &#x3D; &#123;</span><br><span class="line">                sex: &quot;m&quot;,</span><br><span class="line">                id: 0,</span><br><span class="line">                msg: &#123;</span><br><span class="line">                    sex: &quot;男&quot;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;;</span><br><span class="line">            var obj &#x3D; &#123;</span><br><span class="line">                id: 1,</span><br><span class="line">                name: &quot;andy&quot;,</span><br><span class="line">                msg: &#123;</span><br><span class="line">                    age: 18</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;;</span><br><span class="line">            &#x2F;&#x2F;深拷贝，前面加true，完全克隆（拷贝的是对象，不是地址），修改目标对像不会影响被拷贝对象</span><br><span class="line">            $.extend(true, targetObj, obj)</span><br><span class="line">            console.log(targetObj);&#x2F;&#x2F;浅拷贝）返回的msg：&#123;sex: &quot;男&quot;， age: 18&#125;，</span><br><span class="line">            targetObj.msg.age &#x3D; 20;</span><br><span class="line">            console.log(targetObj);</span><br><span class="line">            console.log(obj);</span><br><span class="line">        &#125;)</span><br><span class="line">    &lt;&#x2F;script&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure>

<h3 id="jQuery多库共存"><a href="#jQuery多库共存" class="headerlink" title="jQuery多库共存"></a>jQuery多库共存</h3><p>（1）把jquery的$符号写成jQuery</p>
<p>（2）使用$.noConflict()，重新命名$。如var xx  =$.noConflict()  ///$可能需要写成jQuery</p>
<p>请看代码：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang&#x3D;&quot;en&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset&#x3D;&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;meta name&#x3D;&quot;viewport&quot; content&#x3D;&quot;width&#x3D;device-width, initial-scale&#x3D;1.0&quot;&gt;</span><br><span class="line">    &lt;title&gt;多库共存&lt;&#x2F;title&gt;</span><br><span class="line">    &lt;script src&#x3D;&quot;jquery.min.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        $(function () &#123;</span><br><span class="line">            function $(ele) &#123;</span><br><span class="line">                return document.querySelector(ele);</span><br><span class="line">            &#125;</span><br><span class="line">            console.log($(&quot;div&quot;));</span><br><span class="line">            console.log($(&quot;span&quot;));</span><br><span class="line">            console.log(jQuery(&quot;span&quot;));</span><br><span class="line">            &#x2F;&#x2F;1.如果$符号冲突，我们就使用 jQuery (jQuery是替换jquery中的$,而不是上面的函数名$)</span><br><span class="line">            &#x2F;&#x2F;遍历</span><br><span class="line">            &#x2F;&#x2F; $.each();&#x2F;&#x2F;$是jquery定义的，我们上面定义同名$()函数，不具有 $.each()，要改名 jQuery</span><br><span class="line">            jQuery.each();</span><br><span class="line">            &#x2F;&#x2F;2.让jquery释放对$的控制权， 让我们来决定 </span><br><span class="line">            var suibian &#x3D; jQuery.noConflict();</span><br><span class="line">            console.log(suibian(&quot;span&quot;));</span><br><span class="line">        &#125;) </span><br><span class="line">    &lt;&#x2F;script&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;div&gt;&lt;&#x2F;div&gt;</span><br><span class="line">    &lt;span&gt;&lt;&#x2F;span&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure>

<h3 id="推荐几个jQuery插件网站："><a href="#推荐几个jQuery插件网站：" class="headerlink" title="推荐几个jQuery插件网站："></a>推荐几个jQuery插件网站：</h3><p>（1）<a href="http://www.htmleaf.com/" target="_blank" rel="noopener">http://www.htmleaf.com/</a>   jQuery之家。。免费的喔</p>
<p>（2）<a href="http://www.jq22.com/" target="_blank" rel="noopener">http://www.jq22.com/</a>  </p>
<p>（3）<a href="https://v3.bootcss.com/" target="_blank" rel="noopener">https://v3.bootcss.com/</a></p>
]]></content>
  </entry>
  <entry>
    <title>我的第一篇博客文章</title>
    <url>/2020/06/19/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2%E6%96%87%E7%AB%A0/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><p>第一部分：<br>内容</p>
<hr>
<p>第二部分：<br>内容</p>
<hr>
<p>第三部分：<br>结尾</p>
<hr>
<p><a href="http://www.dddd" target="_blank" rel="noopener">www.dddd</a></p>
]]></content>
  </entry>
  <entry>
    <title>今日小结6</title>
    <url>/2020/08/03/%E4%BB%8A%E6%97%A5%E5%B0%8F%E7%BB%936/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><h2 id="今天复习css"><a href="#今天复习css" class="headerlink" title=" 今天复习css "></a><center> 今天复习css </center></h2><h3 id="字体属性font："><a href="#字体属性font：" class="headerlink" title="字体属性font："></a>字体属性font：</h3><p>1.font-family：定义字体系列</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">p &#123;</span><br><span class="line">	font-family: &quot;Microsoft YaHei&quot;, Arial;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>2.font-size：定义字体大小</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">p &#123;</span><br><span class="line">	font-size: 20px;&#x2F;&#x2F;谷歌浏览器字体默认大小为16px（像素）</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>3.font-weiht：设置字体粗细。参数有normal（正常）、bold（粗）、bolder（特粗）、lighter（细）等，也可以设置具体数字（不带单位）</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">p &#123;</span><br><span class="line">	font-weiht: nomal;&#x2F;&#x2F;相当于400</span><br><span class="line">	font-weiht: 700; &#x2F;&#x2F;相当于bold</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>4.font-style：设置字体的风格。参数有normal（正常）、italic（斜体）</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">p &#123;</span><br><span class="line">	font-style: italic;</span><br><span class="line">&#125;</span><br><span class="line">&#x2F;&#x2F;标签&lt;em&gt;、&lt;i&gt;是斜体标签，可以用font-style将其变成正常字体</span><br><span class="line">em &#123;</span><br><span class="line">	font-style: normal;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>5.复合写法：</p>
<p>font: font-style font-weight font-size/line-height font-family   //顺序不能变</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">p &#123;</span><br><span class="line">	font: italic 700 16px &quot;Microsoft YaHei&quot;;  &#x2F;&#x2F;顺序不能变，font-size和font-family不可以省略</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="文本属性text："><a href="#文本属性text：" class="headerlink" title="文本属性text："></a>文本属性text：</h3><p>1.color：定义颜色。十六进制”#”开头  RGB代码，如rgn(255, 0, 0)</p>
<p>2.text-align：水平对齐。 参数center、lelt、right</p>
<p>3.text-decoration：装饰文本。参数none（默认）、underlin（下划线）、oveline（上划线）、line-through（删除线）</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">a &#123;</span><br><span class="line">	text-decoration: none; &#x2F;&#x2F;去掉a标签的下划线</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>4.text-indent：首行缩进</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">p &#123;</span><br><span class="line">	text-indent: 20px; &#x2F;&#x2F;缩进20像素</span><br><span class="line">	text-indent: 2em;&#x2F;&#x2F;缩进两个字体的大小  em是相对单位</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<p>5.line-height：行间距（行高=上间距+文本高度+下间距）。行高等于盒子高度可以实现文字垂直居中</p>
<h3 id="css三种样式表"><a href="#css三种样式表" class="headerlink" title="css三种样式表"></a>css三种样式表</h3><p>1.行内样式表（行内式）：style=””</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;div style&#x3D;&quot;color: red; font-size: 12px&quot;&gt;你好&lt;&#x2F;div&gt;</span><br></pre></td></tr></table></figure>

<p>2.内部样式表（嵌入式）：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;style&gt;</span><br><span class="line">	div &#123;</span><br><span class="line">		color: pink;</span><br><span class="line">	&#125;</span><br><span class="line">&lt;&#x2F;style&gt;</span><br></pre></td></tr></table></figure>

<p>3.外部样式表（链接式）：在一个xxx.css文件中写样式内容，然后通过<link href="xxx.css的文件路径"></link>引入到html文件</p>
<h3 id="复合选择器"><a href="#复合选择器" class="headerlink" title="复合选择器"></a>复合选择器</h3><p>1.后代选择器：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ul li &#123;</span><br><span class="line">	color: red;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>2.子代选择器：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ul&gt;li &#123;</span><br><span class="line">	color: pink;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>3.并集选择器：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ul,</span><br><span class="line">div&#123;</span><br><span class="line">	color: blue;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>4.伪类选择器：向某些选择器添加特殊效果（链接伪类、结构伪类）</p>
<p>链接伪类选择器：（其他标签也可以）</p>
<p>（1）选择所有未被访问的链接：a:link    //注意冒号之间没空格，下同</p>
<p>（2）选择所有已被访问的链接：a:visited</p>
<p>（3）选择鼠标指针（光标）位于其上的链接：a:hover</p>
<p>（4）选择活动链接（鼠标按下未弹起的链接）：a:active</p>
<p>如果对同一个a标签都添加以上伪类选择器，顺序不要变</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F;鼠标经过a标签，a标签的下划线消失，并且变成红色</span><br><span class="line">a:hover &#123;</span><br><span class="line">	text-decoration: none;</span><br><span class="line">	color: red;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>:focus 伪类选择器 ：用于选择获得焦点的表单元素</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">input:focus &#123;</span><br><span class="line">	background-color: pink;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="css背景"><a href="#css背景" class="headerlink" title="css背景"></a>css背景</h3><p>1.background-color：背景颜色。默认为transparent（透明）</p>
<p>2.background-image：背景图片。参数none、url（url地址）</p>
<p>注：页面可以同时添加背景颜色和背景图片，不过背景图片会压住背景颜色</p>
<p>3.background-repeat：背景平铺。参数repeat、no-repeat、repeat-x、repeat-y</p>
<p>4.置：background-position: x y    背景图片位直。参数x，y可以是精确数值，也可以是top、bottom、center、left、right</p>
<p>如果之指定一个数值，一定为x，则另外一个默认为center；如果只写一个方位名词，第二个默认为center</p>
<p>5.background-attachment：背景图像固定。参数scroll（默认）、fixed</p>
<p>复合写法：</p>
<p>background: 背景颜色 背景图片地址 背景平铺 背景图像滚动 背景图像位置</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">div &#123;</span><br><span class="line">	background: red url(&quot;XXX.jpg&quot;) no-repeat fixed right top;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>6.backhand:rgba(0, 0, 0, 0.5)   背景颜色半透明 最后一个值在0~1范围内</p>
]]></content>
  </entry>
  <entry>
    <title>今日小结7</title>
    <url>/2020/08/04/%E4%BB%8A%E6%97%A5%E5%B0%8F%E7%BB%937/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><h2 id="今天还是css"><a href="#今天还是css" class="headerlink" title="今天还是css"></a><center>今天还是css</center></h2><h3 id="HTML元素包括块元素、行内元素、行内块元素"><a href="#HTML元素包括块元素、行内元素、行内块元素" class="headerlink" title="HTML元素包括块元素、行内元素、行内块元素"></a>HTML元素包括块元素、行内元素、行内块元素</h3><p>1.块级元素特点：</p>
<p>（1）独占一行</p>
<p>（2）高度、宽度、外边距和内边距可以控制</p>
<p>（3）宽度默认是父级元素宽度的100%</p>
<p>（4）是一个容器，里面可以放行内或块元素</p>
<p>注意：文字类的块元素内不能使用块元素；<p> <h1>~<h6>等文字块元素内不能放其他块元素</p>
<p>常见的块元素：<p> 、<h1>~<h6>、<div>、<ul>、<ol>、<li>等</p>
<p>2.行内元素特点：</p>
<p>（1）一行可以显示多个，中间有空隙</p>
<p>（2）高度、宽度、直接设置无效</p>
<p>（3）默认宽度为它本身内容宽度</p>
<p>（4）行内元素只能收纳文本或行内元素</p>
<p>注意：链接里面不能再放链接；链接里面可以放块元素，但给链接换一下块级模式更安全</p>
<p>常见的行内元素：<a>、<strong>、<b>、<em>、<i>、<del>、<s>、<ins>、<u>、<pan></p>
<p>3.行内块元素特点：<br>（1）和相邻行内元素在同一行上，但它们之间会有空白缝隙</p>
<p>（2）默认宽度是它本身内容的宽度</p>
<p>（3）高度、宽度、外边框、内边框可以控制</p>
<p>常见行内块元素：<img>、<input>、<td></p>
<h3 id="元素显示模式转换"><a href="#元素显示模式转换" class="headerlink" title="元素显示模式转换"></a>元素显示模式转换</h3><p>（1）转换为块元素：display: block;</p>
<p>（2）转换为行内元素：display: inline;</p>
<p>（3）转换为行内块元素：display: inline-block;</p>
<h3 id="css的-三大属性：层叠性、继承性、优先级"><a href="#css的-三大属性：层叠性、继承性、优先级" class="headerlink" title="css的 三大属性：层叠性、继承性、优先级"></a>css的 三大属性：层叠性、继承性、优先级</h3><p>1.层叠性：</p>
<p>（1）样式冲突，就近原则</p>
<p>（2）样式不冲突，不会层叠</p>
<p>2.继承性：子标签会继承父标签的某些样式（与文字相关的样式），以text-，font-，line-开头的元素可以继承，以及color）</p>
<p>3.优先级：(权重问题)</p>
<p><img src= "/img/loading.gif" data-src="https://i.loli.net/2020/08/04/AtBwJSCdhPHKas7.png" alt=""></p>
<p>权重会叠加，但不会进位。</p>
<h3 id="盒子模型"><a href="#盒子模型" class="headerlink" title="盒子模型"></a>盒子模型</h3><p>1.组成：边框、外边距、内边距、内容</p>
<p>2.边框border：border-width  || border-style  ||  border-color</p>
<p>（1）border-width: 20px;  //粗细</p>
<p>（2）border-style: solid; //dashed（虚线）、datted（点虚线）</p>
<p>（3）border-color: red; //颜色</p>
<p>简写：border: 1px solid red;  //可以不按顺序</p>
<p>分开写：border-top: 1px solid red;</p>
<p>注意：边框会增大盒子的大小</p>
<p>border-collapse: collapse; //合并相邻的边框</p>
<p>3.内边距padding：</p>
<p>内边距会撑大盒子大，如果盒子没有指定宽度，padding不会撑大盒子宽度。</p>
<p>4.外边距margin：控制盒子与盒子之间的距离</p>
<p>（1)外边距可以让块级盒子水平居中，但必须满足两个条件：</p>
<p>​     a.盒子必须有指定宽度  b.盒子左右外边距设置位auto</p>
<p>（2）相邻块元素垂直外边距合并（两个相邻垂直的块元素都设置了外边距），取较大的值作为外边距。</p>
<p>（3）嵌套块元素垂直外边距塌陷问题：</p>
<p>​        对于两个嵌套关系（父子关系）的块元素，父元素有上外边距同时子元素也有上外边距，此时父元素会塌陷较大的外边距（如果儿子的上外边距比父亲的上外边距大，父亲就会以儿子的上外边距为准，向下移动；反则父亲还是以自己的上外边距准。不过不管怎样，儿子都是贴着父亲的左上角）</p>
<p>​    解决方案：</p>
<p>​                （1）为父元素定义上边框</p>
<p>​                （2）为父元素定义上内边距</p>
<p>​                （3）为父元素添加overflow: hidden;</p>
<p>​                    其他方法：浮动、固定、绝对定位的盒子不会有塌陷问题。</p>
<p>提醒：行内元素，尽量只设置左右外边距。</p>
]]></content>
  </entry>
</search>
