<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Hello World</title>
    <url>/2020/06/19/hello-world/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>
]]></content>
  </entry>
  <entry>
    <title>js基础小总结1</title>
    <url>/2020/07/29/js%E5%9F%BA%E7%A1%80%E5%B0%8F%E6%80%BB%E7%BB%931/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><h3 id="1-转换成字符串："><a href="#1-转换成字符串：" class="headerlink" title="1.转换成字符串："></a>1.转换成字符串：</h3><p>(1) String(str)</p>
<p>(2) str.toString()</p>
<p>(3) str + ‘’</p>
<p>(4) arr.join()  //数组转换成字符串   str.split(‘分隔符’) 字符串转数组</p>
<h3 id="2-转换为数值："><a href="#2-转换为数值：" class="headerlink" title="2.转换为数值："></a>2.转换为数值：</h3><p>(1) parseInt(变量)   //变量要为字符串数字，下同</p>
<p>(2) parseFloat(变量)</p>
<p>(3) Number(变量)</p>
<p>(4) 变量 - num   // num为具体数值，如 1， 2， 0</p>
<h3 id="3-typeof检查数据类型"><a href="#3-typeof检查数据类型" class="headerlink" title="3.typeof检查数据类型"></a>3.typeof检查数据类型</h3><p>(1) typeof(a)</p>
<p>(2) typeof a</p>
<p>例子：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> a = <span class="number">3</span>;</span><br><span class="line"><span class="built_in">console</span>.log(type a); <span class="comment">//返回number</span></span><br><span class="line"><span class="built_in">console</span>.log(type(a)); <span class="comment">//返回number</span></span><br><span class="line"><span class="built_in">console</span>.log(type <span class="string">'c'</span>); <span class="comment">//返回string  可以未定义，也能返回c的类型</span></span><br></pre></td></tr></table></figure>

<h3 id="4-instanceof检测是否是数组"><a href="#4-instanceof检测是否是数组" class="headerlink" title="4.instanceof检测是否是数组"></a>4.instanceof检测是否是数组</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> b = [];</span><br><span class="line"><span class="keyword">var</span> c = <span class="number">1</span>;</span><br><span class="line"><span class="built_in">console</span>.log(b <span class="keyword">instanceof</span> <span class="built_in">Array</span>); <span class="comment">//返回true</span></span><br><span class="line"><span class="built_in">console</span>.log(c <span class="keyword">instanceof</span> <span class="built_in">Array</span>); <span class="comment">//返回false</span></span><br></pre></td></tr></table></figure>

<h3 id="5-Math的一些函数"><a href="#5-Math的一些函数" class="headerlink" title="5.Math的一些函数"></a>5.Math的一些函数</h3><p>(1) Math.floor()  //向下取整</p>
<p>(2) Math.ceil() //向上取整</p>
<p>(3) Math.round() //四舍五入</p>
<h3 id="6-字符串的一些操作"><a href="#6-字符串的一些操作" class="headerlink" title="6.字符串的一些操作"></a>6.字符串的一些操作</h3><p>(1) 定义字符串的方法：str = ‘red’ 或 str = new String(‘red’)</p>
<p>(2) 函数小例子：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> str = <span class="string">'red'</span>;</span><br><span class="line"><span class="keyword">var</span> str1 = <span class="string">'RED'</span></span><br><span class="line"><span class="built_in">console</span>.log(str.charAt(<span class="number">0</span>)); <span class="comment">//返回str的第一个字符 r</span></span><br><span class="line"><span class="built_in">console</span>.log(str.charCodeAt(<span class="number">0</span>));<span class="comment">//返回str的第一个字符 r</span></span><br><span class="line"><span class="built_in">console</span>.log(str[<span class="number">0</span>]);<span class="comment">//返回str的第一个字符</span></span><br><span class="line"><span class="built_in">console</span>.log(str.substr(<span class="number">0</span>, <span class="number">2</span>)); <span class="comment">//第一个参数为开始位置，第二个参数为长度 re</span></span><br><span class="line"><span class="built_in">console</span>.log(str.concat(<span class="string">'yellow'</span>));<span class="comment">//连接字符串 redyellow  str仍然为'red'</span></span><br><span class="line"><span class="built_in">console</span>.log(str.toUpperCase()); <span class="comment">//返回转换为大写的RED str仍然为'red'</span></span><br><span class="line"><span class="built_in">console</span>.log(str.toLowerCase()); <span class="comment">//返回转换为小写   str1仍然为'ERD'</span></span><br></pre></td></tr></table></figure>

<h3 id="7-转换为布尔类型"><a href="#7-转换为布尔类型" class="headerlink" title="7.转换为布尔类型"></a>7.转换为布尔类型</h3><p>Boolean(变量)：</p>
<p>(1)变量为0、NaN、undefined、null、’’ 则返回false</p>
<p>(2)其余为true（空数组返回true）</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Boolean</span>(<span class="number">7</span>));<span class="comment">//true</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Boolean</span>(<span class="string">'red'</span>));<span class="comment">//true</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Boolean</span>(<span class="number">0</span>));<span class="comment">//false</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Boolean</span>(<span class="string">''</span>));<span class="comment">//false</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Boolean</span>(<span class="literal">null</span>));<span class="comment">//false</span></span><br></pre></td></tr></table></figure>

<h3 id="8-声明数组"><a href="#8-声明数组" class="headerlink" title="8.声明数组"></a>8.声明数组</h3><p>(1) var arr = new Array()</p>
<p>(2)var arr = []</p>
<p><img src= "/img/loading.gif" data-src="https://i.loli.net/2020/07/26/CgLxRWZNG7voeqH.png" alt="数组" title="数组"></p>
<h3 id="9-构造函数："><a href="#9-构造函数：" class="headerlink" title="9.构造函数："></a>9.构造函数：</h3><p>(1)function 函数名(形参) {} //形参可以没有  ，下同</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fn</span>(<span class="params">a, b</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a + b;   <span class="comment">//return只返回一个值，且其后面的语句不执行，如果没有return，返回udefined</span></span><br><span class="line">    <span class="built_in">console</span>.log(a);  <span class="comment">//不执行</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">console</span>.log(fn(<span class="number">2</span>, <span class="number">4</span>)); <span class="comment">// 返回6</span></span><br></pre></td></tr></table></figure>

<p>(2)var 函数名 = function(形参) {}</p>
<p>注意点：实参个数多余形参个数，以形参个数为准，反则，返回NaN （不利用伪数组）</p>
<p>(3)arguments伪数组:</p>
<p>arguments对象可以获取传入函数的值，它将这些值保存在一个数组里面，因此可以将arguments看作一个数组使用</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fn1</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">	<span class="keyword">var</span> num = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="built_in">arguments</span>.length; i++) &#123;<span class="comment">//arguments可以接受多个变量</span></span><br><span class="line">		num += <span class="built_in">arguments</span>[i];</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">console</span>.log(num);<span class="comment">//8</span></span><br><span class="line">&#125;</span><br><span class="line">fn1(<span class="number">1</span>, <span class="number">2</span>, <span class="number">5</span>)</span><br></pre></td></tr></table></figure>



]]></content>
  </entry>
  <entry>
    <title>js基础小总结2</title>
    <url>/2020/07/29/js%E5%9F%BA%E7%A1%80%E5%B0%8F%E6%80%BB%E7%BB%932/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><h3 id="1-string、number、boolean、undefined、null等简单数据类型放在栈里面，而数组、对象、带有new的函数等复杂数据类型放在堆里面"><a href="#1-string、number、boolean、undefined、null等简单数据类型放在栈里面，而数组、对象、带有new的函数等复杂数据类型放在堆里面" class="headerlink" title="1.string、number、boolean、undefined、null等简单数据类型放在栈里面，而数组、对象、带有new的函数等复杂数据类型放在堆里面"></a>1.string、number、boolean、undefined、null等简单数据类型放在栈里面，而数组、对象、带有new的函数等复杂数据类型放在堆里面</h3><h3 id="2-简单数据类型null，返回一个空的对象object"><a href="#2-简单数据类型null，返回一个空的对象object" class="headerlink" title="2.简单数据类型null，返回一个空的对象object"></a>2.简单数据类型null，返回一个空的对象object</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">console.log(ypeof(null)); &#x2F;&#x2F;object</span><br></pre></td></tr></table></figure>

<h3 id="3-Web-APIs"><a href="#3-Web-APIs" class="headerlink" title="3.Web APIs:"></a>3.Web APIs:</h3><p>(1)getElementById()  //通过id获取元素，返回元素对象</p>
<p>(2)getElementByTagName() //通过标签名获取元素，返回伪数组</p>
<p>(3)getElementByClassName() //通过类名获取元素，返回伪数组</p>
<p>(4)querySelector()//通过选择器获取第一个元素，返回第一个元素对象</p>
<p>(5)querySelector()//通过选择器获取所有元素，返回伪数组</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;ul class&#x3D;&quot;ul2&quot; id&#x3D;&quot;ul1&quot;&gt;</span><br><span class="line">        &lt;li&gt;&lt;&#x2F;li&gt;</span><br><span class="line">        &lt;li&gt;&lt;&#x2F;li&gt;</span><br><span class="line">        &lt;li&gt;&lt;&#x2F;li&gt;</span><br><span class="line">        &lt;li&gt;&lt;&#x2F;li&gt;</span><br><span class="line">        &lt;li&gt;&lt;&#x2F;li&gt;</span><br><span class="line">    &lt;&#x2F;ul&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        var ul &#x3D; document.getElementById(&#39;ul1&#39;);</span><br><span class="line">        var ul1 &#x3D; document.getElementsByTagName(&#39;ul&#39;);</span><br><span class="line">        var ul2 &#x3D; document.getElementsByClassName(&#39;ul2&#39;);</span><br><span class="line">        var ul3 &#x3D; document.querySelector(&#39;.ul2&#39;) &#x2F;&#x2F;在类名前加 .</span><br><span class="line">        var ul4 &#x3D; document.querySelector(&#39;#ul1&#39;)&#x2F;&#x2F;在id前加 #</span><br><span class="line">        var ul5 &#x3D; document.querySelector(&#39;ul&#39;)&#x2F;&#x2F;标签名不添加</span><br><span class="line">        var ul6 &#x3D; document.querySelectorAll(&#39;ul&#39;)</span><br><span class="line">        console.log(ul, ul1, ul2, ul3, ul4, ul5, ul6);</span><br><span class="line">      &lt;&#x2F;script&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br></pre></td></tr></table></figure>

<p>![](C:\Users\woduyou\Desktop\web APIs.png)</p>
<h3 id="4-element-innerText和element-HTML的区别：（两者都是获取标签内容，并且可以对其赋值）"><a href="#4-element-innerText和element-HTML的区别：（两者都是获取标签内容，并且可以对其赋值）" class="headerlink" title="4.element.innerText和element.HTML的区别：（两者都是获取标签内容，并且可以对其赋值）"></a>4.element.innerText和element.HTML的区别：（两者都是获取标签内容，并且可以对其赋值）</h3><p>(1)element.HTML能识别HTML标签</p>
<p>(2)element.HTML适合块元素（标签）</p>
<p>(3)element.innerText适合行元素（标签）</p>
<p>……剩下的以后补充</p>
<h3 id="5-浅说js的方法："><a href="#5-浅说js的方法：" class="headerlink" title="5.浅说js的方法："></a>5.浅说js的方法：</h3><p>(1)setAttribute(‘属性’, 值)    //创建自定义属性</p>
<p>(2)getAttribute(‘属性’) //获取自定义属性值，也可以获取自身属性值</p>
<p>(3)elemet.属性  //获取自身属性值</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line">	&lt;ul <span class="class"><span class="keyword">class</span></span>=<span class="string">"ul2"</span>&gt;&lt;<span class="regexp">/ul&gt;</span></span><br><span class="line"><span class="regexp">	&lt;script&gt;</span></span><br><span class="line"><span class="regexp">        var ul = document.getElementById('ul1');</span></span><br><span class="line"><span class="regexp">		ul.setAttribute('id', 'ul2')</span></span><br><span class="line"><span class="regexp">		console.log(ul.getAttribute('id')); /</span><span class="regexp">/返回ul2</span></span><br><span class="line"><span class="regexp">	&lt;/</span>script&gt;</span><br><span class="line">&lt;<span class="regexp">/body&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="6-通过父子关系获得对应节点"><a href="#6-通过父子关系获得对应节点" class="headerlink" title="6.通过父子关系获得对应节点"></a>6.通过父子关系获得对应节点</h3><p>(1)node.parentNode //父级节点</p>
<p>(2)node.childNodes //子级节点（会包含元素、文本）</p>
]]></content>
  </entry>
  <entry>
    <title>今日小结1</title>
    <url>/2020/07/29/%E4%BB%8A%E6%97%A5%E5%B0%8F%E7%BB%931/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><h3 id="1-对jquery的理解："><a href="#1-对jquery的理解：" class="headerlink" title="1.对jquery的理解："></a>1.对jquery的理解：</h3><p>（1）jquery是对一些常用的原生js方法和属性的封装的一个数据库，$是JQuery的顶级对象（别称，一般用$来代替JQuery（注意大小写），如：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">"en"</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">"UTF-8"</span>&gt;</span><br><span class="line">    &lt;meta name=<span class="string">"viewport"</span> content=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span><br><span class="line">    &lt;meta http-equiv=<span class="string">"X-UA-Compatible"</span> content=<span class="string">"ie=edge"</span>&gt;</span><br><span class="line">    &lt;title&gt;Document&lt;<span class="regexp">/title&gt;</span></span><br><span class="line"><span class="regexp">	/</span><span class="regexp">/引入jquery库</span></span><br><span class="line"><span class="regexp">    &lt;script src="jquery.min.js"&gt;&lt;/</span>script&gt; </span><br><span class="line">    &lt;style&gt;</span><br><span class="line">        div &#123;</span><br><span class="line">            width: <span class="number">200</span>px;</span><br><span class="line">            height: <span class="number">200</span>px;</span><br><span class="line">            background-color: pink;</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;<span class="regexp">/style&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        <span class="comment">// $('div').hide();//$是JQuery的顶级对象（别称） 此处用JQuery代替也可以</span></span><br><span class="line">        <span class="comment">// 1. 等着页面DOM加载完毕再去执行js 代码</span></span><br><span class="line">        <span class="comment">// $(document).ready(function() &#123;</span></span><br><span class="line">        <span class="comment">//     $('div').hide();</span></span><br><span class="line">        <span class="comment">// &#125;)</span></span><br><span class="line">        <span class="comment">// 2.  等着页面DOM加载完毕再去执行js 代码  //可以把script放在div前面</span></span><br><span class="line">        $(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            $(<span class="string">'div'</span>).hide();</span><br><span class="line"></span><br><span class="line">        &#125;)</span><br><span class="line">    &lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp">    &lt;div&gt;&lt;/</span>div&gt;</span><br><span class="line"></span><br><span class="line">&lt;<span class="regexp">/body&gt;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">&lt;/</span>html&gt;</span><br></pre></td></tr></table></figure>

<p>（2）DOM对象：是用原生js获取过来的对象；</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> myDiv = <span class="built_in">document</span>.querySelector(<span class="string">'div'</span>); <span class="comment">//myDiv 是DOM对象</span></span><br><span class="line"><span class="keyword">var</span> mySpan = <span class="built_in">document</span>.querySelector(<span class="string">'span'</span>); <span class="comment">//mySpan 是DOM对象</span></span><br><span class="line"><span class="built_in">console</span>.dir(myDiv);</span><br></pre></td></tr></table></figure>

<p>（3）jQery对象（是一个伪数组）：用jquery方式来获取过来的对象  本质是$把DOM元素进行了包装。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">$(<span class="string">'div'</span>);<span class="comment">//$('div')是一个jQery对象</span></span><br><span class="line"><span class="built_in">console</span>.dir($(<span class="string">'div'</span>));</span><br></pre></td></tr></table></figure>

<p>（4）jQuery 对象只能用jQuery方法，DOM对象只能用原生js属性和方法</p>
<p>（5）DOM对象和jQuery对象相互转换：</p>
<p>​         DOM对象转换成jQuery对象：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> myvideo = <span class="built_in">document</span>.querySelector(<span class="string">'video'</span>); <span class="comment">//video是一个盒子</span></span><br><span class="line">myvideo = $(myvideo);</span><br></pre></td></tr></table></figure>

<p>​          jQuery对象转换成DOM对象：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">$(<span class="string">'video'</span>)[num];方法<span class="number">1</span>  num是下标，因为jQuery对象是一个伪数组</span><br><span class="line">$(<span class="string">'video'</span>).get(num);方法<span class="number">2</span></span><br></pre></td></tr></table></figure>

<p>（6）jQuery基础选择器</p>
<p><img src= "/img/loading.gif" data-src="https://i.loli.net/2020/07/29/Z4kdFAxGijungp9.png" alt="基础选择器"></p>
<p>（7）层级选择器</p>
<p><img src= "/img/loading.gif" data-src="https://i.loli.net/2020/07/29/RDlEpCyeiczOQdk.png" alt="层级选择器"></p>
<p>（8）jQuery隐式迭代：隐式迭代局势把匹配到的所有元素内部进行遍历循环，而无需我们进行循环遍历。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">"en"</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">"UTF-8"</span>&gt;</span><br><span class="line">    &lt;meta name=<span class="string">"viewport"</span> content=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span><br><span class="line">    &lt;title&gt;jQuery隐式迭代&lt;<span class="regexp">/title&gt;</span></span><br><span class="line"><span class="regexp">    &lt;script src="jquery.mim.js"&gt;&lt;/</span>script&gt;</span><br><span class="line">&lt;<span class="regexp">/head&gt;</span></span><br><span class="line"><span class="regexp">&lt;body&gt;</span></span><br><span class="line"><span class="regexp">    &lt;div&gt;惊不惊喜，意不意外&lt;/</span>div&gt;</span><br><span class="line">    &lt;div&gt;惊不惊喜，意不意外&lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">    &lt;div&gt;惊不惊喜，意不意外&lt;/</span>div&gt;</span><br><span class="line">    &lt;div&gt;惊不惊喜，意不意外&lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">    &lt;ul&gt;</span></span><br><span class="line"><span class="regexp">        &lt;li&gt;相同的操作&lt;/</span>li&gt;</span><br><span class="line">        &lt;li&gt;相同的操作&lt;<span class="regexp">/li&gt;</span></span><br><span class="line"><span class="regexp">        &lt;li&gt;相同的操作&lt;/</span>li&gt;</span><br><span class="line">    &lt;<span class="regexp">/ul&gt;</span></span><br><span class="line"><span class="regexp">    &lt;script&gt;</span></span><br><span class="line"><span class="regexp">        /</span><span class="regexp">/给4个div的背景颜色改为pink色（内部有隐式迭代，不需要我们进行循环了）</span></span><br><span class="line"><span class="regexp">        $("div").css("background", "pink");</span></span><br><span class="line"><span class="regexp">        /</span><span class="regexp">/隐式迭代局势把匹配到的所有元素内部进行遍历循环，给每个元素添加css这个方法</span></span><br><span class="line"><span class="regexp">        $("ul li").css("color", "red");</span></span><br><span class="line"><span class="regexp">    &lt;/</span>script&gt;</span><br><span class="line">&lt;<span class="regexp">/body&gt;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">&lt;/</span>html&gt;</span><br></pre></td></tr></table></figure>

<p>（9）jQuery筛选选择器</p>
<p><img src= "/img/loading.gif" data-src="https://i.loli.net/2020/07/29/C1ktc2oWye7zaIP.png" alt="筛选选择器"></p>
<p>（10）jQuery筛选方法</p>
<p><img src= "/img/loading.gif" data-src="https://i.loli.net/2020/07/29/XMGSlvmks9Yqp4o.png" alt="筛选方法"></p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">"en"</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">"UTF-8"</span>&gt;</span><br><span class="line">    &lt;meta name=<span class="string">"viewport"</span> content=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span><br><span class="line">    &lt;title&gt;jQuery筛选方法&lt;<span class="regexp">/title&gt;</span></span><br><span class="line"><span class="regexp">    &lt;script src="jquery.mim.js"&gt;&lt;/</span>script&gt;</span><br><span class="line">&lt;<span class="regexp">/head&gt;</span></span><br><span class="line"><span class="regexp">&lt;body&gt;</span></span><br><span class="line"><span class="regexp">    &lt;div class="yeye"&gt;</span></span><br><span class="line"><span class="regexp">        &lt;div class="father"&gt;</span></span><br><span class="line"><span class="regexp">            &lt;div class="son"&gt;儿子&lt;/</span>div&gt;</span><br><span class="line">        &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">    &lt;/</span>div&gt;</span><br><span class="line">    &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"nav"</span>&gt;</span><br><span class="line">        &lt;p&gt;我是p1&lt;<span class="regexp">/p&gt;</span></span><br><span class="line"><span class="regexp">        &lt;p&gt;我是p2&lt;/</span>p&gt;</span><br><span class="line">        &lt;div&gt;</span><br><span class="line">            &lt;p&gt;我也是p&lt;<span class="regexp">/p&gt;</span></span><br><span class="line"><span class="regexp">        &lt;/</span>div&gt;</span><br><span class="line">    &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">    &lt;script&gt;</span></span><br><span class="line"><span class="regexp">        /</span><span class="regexp">/1.parent() 返回最近的父级元素 亲爸爸</span></span><br><span class="line"><span class="regexp">        console.log($(".son").parent());</span></span><br><span class="line"><span class="regexp">        /</span><span class="regexp">/2.子</span></span><br><span class="line"><span class="regexp">        /</span><span class="regexp">/（1）亲儿子children() 括号内不写内容，返回所有亲儿子 类似子代选择器</span></span><br><span class="line"><span class="regexp">        $(".nav").children().css("color", "red");  /</span><span class="regexp">/亲儿子的儿子会继承样式修改</span></span><br><span class="line"><span class="regexp">        $(".nav").children("p").css("color", "blue");/</span><span class="regexp">/指定p这个亲儿子</span></span><br><span class="line"><span class="regexp">        /</span><span class="regexp">/（2)可以选里面所有的孩子 find() 括号内不写内容，返回所有后代 类似后代选择器</span></span><br><span class="line"><span class="regexp">        $(".nav").find("p").css('color', 'pink')</span></span><br><span class="line"><span class="regexp">    &lt;/</span>script&gt;</span><br><span class="line">&lt;<span class="regexp">/body&gt;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">&lt;/</span>html&gt;</span><br></pre></td></tr></table></figure>

<hr>
<h3 id="2-关于hexo博客的小提醒"><a href="#2-关于hexo博客的小提醒" class="headerlink" title="2.关于hexo博客的小提醒"></a>2.关于hexo博客的小提醒</h3><p>注意了！注意了！ 文章的标准不能跨级，不然会导致在文章内无法显示menu栏和目录！（跨级是指，比如说，你有一个标题是一级，然而紧接着第二个标题为三级或以下，又或者你有一标题是三级，然而紧接着第二个标题为二级，这便是跨级！</p>
<p>////知道我为什么知道吗，因为我tm就被这坑了一天才找出原因！！！</p>
]]></content>
  </entry>
  <entry>
    <title>我的第一篇博客文章</title>
    <url>/2020/06/19/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2%E6%96%87%E7%AB%A0/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><p>第一部分：<br>内容</p>
<hr>
<p>第二部分：<br>内容</p>
<hr>
<p>第三部分：<br>结尾</p>
<hr>
<p><a href="http://www.dddd" target="_blank" rel="noopener">www.dddd</a></p>
]]></content>
  </entry>
  <entry>
    <title>今日小结2</title>
    <url>/2020/07/30/%E4%BB%8A%E6%97%A5%E5%B0%8F%E7%BB%932/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><h3 id="1-jQuery的样式css理解"><a href="#1-jQuery的样式css理解" class="headerlink" title="1.jQuery的样式css理解"></a>1.jQuery的样式css理解</h3><p>（1）$(this).css(“color”); //直接返回属性color的值  this是当前元素，如果写元素名称，需要加引号，如”div”</p>
<p>（2） $(this).css(“color”, “red”); //修改属性color的值为red</p>
<p>（3）$(this).css({“color”: “white”, “font-side”: “20px”,});  //括号内写对象，实现修改多个属性，写数值不用加引号，如上面的”20px”可以写成20</p>
<h3 id="2-jQuery设置类样式方法"><a href="#2-jQuery设置类样式方法" class="headerlink" title="2.jQuery设置类样式方法"></a>2.jQuery设置类样式方法</h3><p>（1）$(this).addClass()  //增加类名</p>
<p>（2）$(this).removeClass() //移除类名</p>
<p>（3）$(this).toggleClass() //切换类名</p>
<h3 id="3-jQuery显示隐藏属性"><a href="#3-jQuery显示隐藏属性" class="headerlink" title="3.jQuery显示隐藏属性"></a>3.jQuery显示隐藏属性</h3><p>（1）显示show([spead],[easing],[fn])：$(this).eq(n).show(); //eq()是选择第n个元素</p>
<p>（2）隐藏hide()：$(this).eq(n).hide() ;</p>
<p>（3）切换toggle()：$(this).eq(n).toggle() ;</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">"en"</span>&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">"UTF-8"</span>&gt;</span><br><span class="line">    &lt;meta name=<span class="string">"viewport"</span> content=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span><br><span class="line">    &lt;title&gt;jQuery效果之显示隐藏&lt;<span class="regexp">/title&gt;</span></span><br><span class="line"><span class="regexp">    &lt;script src="jquery.min.js"&gt;&lt;/</span>script&gt;</span><br><span class="line">    &lt;style&gt;</span><br><span class="line">        div &#123;</span><br><span class="line">            width: <span class="number">200</span>px;</span><br><span class="line">            height: <span class="number">300</span>px;</span><br><span class="line">            background-color: pink;</span><br><span class="line">            margin: <span class="number">10</span>px <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;<span class="regexp">/style&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;button&gt;显示&lt;<span class="regexp">/button&gt;</span></span><br><span class="line"><span class="regexp">    &lt;button&gt;隐藏&lt;/</span>button&gt;</span><br><span class="line">    &lt;button&gt;切换&lt;<span class="regexp">/button&gt;</span></span><br><span class="line"><span class="regexp">    &lt;div&gt;&lt;/</span>div&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        $(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="comment">//显示</span></span><br><span class="line">            $(<span class="string">"button"</span>).eq(<span class="number">0</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                $(<span class="string">"div"</span>).show(<span class="number">1000</span>)</span><br><span class="line">            &#125;)</span><br><span class="line">            <span class="comment">//隐藏</span></span><br><span class="line">            $(<span class="string">"button"</span>).eq(<span class="number">1</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                $(<span class="string">"div"</span>).hide(<span class="number">1000</span>) <span class="comment">//hide()有三个参数speed easing fn（回调函数）</span></span><br><span class="line">            &#125;)</span><br><span class="line">            $(<span class="string">"button"</span>).eq(<span class="number">2</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                $(<span class="string">"div"</span>).toggle(<span class="number">1000</span>)</span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;)</span><br><span class="line">    &lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>body&gt;</span><br><span class="line"></span><br><span class="line">&lt;<span class="regexp">/html&gt;</span></span><br></pre></td></tr></table></figure>



<h3 id="4-链式编程："><a href="#4-链式编程：" class="headerlink" title="4.链式编程："></a>4.链式编程：</h3><p>(1)$(this).css(“color”, “red”).siblings().css(“color”, “”);</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">"en"</span>&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">"UTF-8"</span>&gt;</span><br><span class="line">    &lt;meta name=<span class="string">"viewport"</span> content=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span><br><span class="line">    &lt;meta http-equiv=<span class="string">"X-UA-Compatible"</span> content=<span class="string">"ie=edge"</span>&gt;</span><br><span class="line">    &lt;title&gt;链式编程&lt;<span class="regexp">/title&gt;</span></span><br><span class="line"><span class="regexp">    &lt;script src="jquery.min.js"&gt;&lt;/</span>script&gt;</span><br><span class="line">&lt;<span class="regexp">/head&gt;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">&lt;body&gt;</span></span><br><span class="line"><span class="regexp">    &lt;button&gt;快速&lt;/</span>button&gt;</span><br><span class="line">    &lt;button&gt;快速&lt;<span class="regexp">/button&gt;</span></span><br><span class="line"><span class="regexp">    &lt;button&gt;快速&lt;/</span>button&gt;</span><br><span class="line">    &lt;button&gt;快速&lt;<span class="regexp">/button&gt;</span></span><br><span class="line"><span class="regexp">    &lt;button&gt;快速&lt;/</span>button&gt;</span><br><span class="line">    &lt;button&gt;快速&lt;<span class="regexp">/button&gt;</span></span><br><span class="line"><span class="regexp">    &lt;button&gt;快速&lt;/</span>button&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        $(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="comment">// 1. 隐式迭代 给所有的按钮都绑定了点击事件</span></span><br><span class="line">            $(<span class="string">"button"</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                <span class="comment">// 2. 让当前元素颜色变为红色</span></span><br><span class="line">                <span class="comment">// $(this).css("color", "red");</span></span><br><span class="line">                <span class="comment">// 3. 让其余的姐妹元素不变色 </span></span><br><span class="line">                <span class="comment">// $(this).siblings().css("color", "");</span></span><br><span class="line">                <span class="comment">// 链式编程</span></span><br><span class="line">                $(<span class="keyword">this</span>).css(<span class="string">"color"</span>, <span class="string">"red"</span>).siblings().css(<span class="string">"color"</span>, <span class="string">""</span>);</span><br><span class="line">            &#125;);<span class="comment">//sibligs()是指除去this的所有亲兄弟</span></span><br><span class="line">        &#125;)</span><br><span class="line">    &lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>body&gt;</span><br><span class="line"></span><br><span class="line">&lt;<span class="regexp">/html&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="5-jQuery滑动"><a href="#5-jQuery滑动" class="headerlink" title="5.jQuery滑动"></a>5.jQuery滑动</h3><p>（1）上滑:lideUp([spead],[easing],[fn])</p>
<p>（2）下滑：lideDomn()</p>
<p>（3）切换上下滑：slideToggle()</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">"en"</span>&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">"UTF-8"</span>&gt;</span><br><span class="line">    &lt;meta name=<span class="string">"viewport"</span> content=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span><br><span class="line">    &lt;title&gt;简洁版滑动下拉菜单&lt;<span class="regexp">/title&gt;</span></span><br><span class="line"><span class="regexp">    &lt;script src="jquery.min.js"&gt;&lt;/</span>script&gt;</span><br><span class="line">    &lt;style&gt;</span><br><span class="line">        div &#123;</span><br><span class="line">            width: <span class="number">220</span>px;</span><br><span class="line">            height: <span class="number">300</span>px;</span><br><span class="line">            background-color: pink;</span><br><span class="line">            display: none;</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;<span class="regexp">/style&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;button&gt;下拉滑动&lt;<span class="regexp">/button&gt;</span></span><br><span class="line"><span class="regexp">    &lt;button&gt;上拉滑动&lt;/</span>button&gt;</span><br><span class="line">    &lt;button&gt;切换滑动&lt;<span class="regexp">/button&gt;</span></span><br><span class="line"><span class="regexp">    &lt;div&gt;&lt;/</span>div&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        $(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="comment">//下拉滑动</span></span><br><span class="line">            $(<span class="string">"button"</span>).eq(<span class="number">0</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                $(<span class="string">"div"</span>).slideDown(<span class="number">1000</span>);</span><br><span class="line">            &#125;)</span><br><span class="line">            <span class="comment">//上拉滑动</span></span><br><span class="line">            $(<span class="string">"button"</span>).eq(<span class="number">1</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                $(<span class="string">"div"</span>).slideUp(<span class="number">1000</span>);</span><br><span class="line">            &#125;)</span><br><span class="line">            <span class="comment">// 切换滑动</span></span><br><span class="line">            $(<span class="string">"button"</span>).eq(<span class="number">2</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                $(<span class="string">"div"</span>).slideToggle(<span class="number">1000</span>);</span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;)</span><br><span class="line">    &lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>body&gt;</span><br><span class="line"></span><br><span class="line">&lt;<span class="regexp">/html&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="6-停止排队stop-方法-防止多次触发而导致的动画或效果排队"><a href="#6-停止排队stop-方法-防止多次触发而导致的动画或效果排队" class="headerlink" title="6.停止排队stop()方法:防止多次触发而导致的动画或效果排队"></a>6.停止排队stop()方法:防止多次触发而导致的动画或效果排队</h3><p>（1）stop()方法必须写在动画效果的前面</p>
<p>如上例代码中：$(“div”).slideToggle(1000);</p>
<p>加上stop():$(“div”).stop().slideToggle(1000);</p>
<h3 id="7-jQuery淡出淡入效果"><a href="#7-jQuery淡出淡入效果" class="headerlink" title="7.jQuery淡出淡入效果"></a>7.jQuery淡出淡入效果</h3><p>（1）淡入：fadeIn([spead],[easing],[fn]):</p>
<p>（2）淡出：fadeOut([spead],[easing],[fn]):</p>
<p>（3）切换：fadeToggle([spead],[easing],[fn]):</p>
<p>（4）渐进方式调整透明度：fadeTo(spead，opacity, [easing], [fn]); //spead和opacity(透明度）必须写</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">"en"</span>&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">"UTF-8"</span>&gt;</span><br><span class="line">    &lt;meta name=<span class="string">"viewport"</span> content=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span><br><span class="line">    &lt;title&gt;jQuery淡入淡出效果&lt;<span class="regexp">/title&gt;</span></span><br><span class="line"><span class="regexp">    &lt;script src="jquery.min.js"&gt;&lt;/</span>script&gt;</span><br><span class="line">    &lt;style&gt;</span><br><span class="line">        div &#123;</span><br><span class="line">            width: <span class="number">150</span>px;</span><br><span class="line">            height: <span class="number">300</span>px;</span><br><span class="line">            background-color: red;</span><br><span class="line">            display: none;</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;<span class="regexp">/style&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;button&gt;淡入效果&lt;<span class="regexp">/button&gt;</span></span><br><span class="line"><span class="regexp">    &lt;button&gt;淡出效果&lt;/</span>button&gt;</span><br><span class="line">    &lt;button&gt;淡出淡入切换效果&lt;<span class="regexp">/button&gt;</span></span><br><span class="line"><span class="regexp">    &lt;button&gt;修改透明度&lt;/</span>button&gt;</span><br><span class="line">    &lt;div&gt;&lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">    &lt;script&gt;</span></span><br><span class="line"><span class="regexp">        $(function () &#123;</span></span><br><span class="line"><span class="regexp">            /</span><span class="regexp">/淡入效果fadeIN()</span></span><br><span class="line"><span class="regexp">            $("button").eq(0).click(function () &#123;</span></span><br><span class="line"><span class="regexp">                $("div").fadeIn(1000);</span></span><br><span class="line"><span class="regexp">            &#125;)</span></span><br><span class="line"><span class="regexp">            /</span><span class="regexp">/淡出效果fadeOut()</span></span><br><span class="line"><span class="regexp">            $("button").eq(1).click(function () &#123;</span></span><br><span class="line"><span class="regexp">                $("div").fadeOut(1000);</span></span><br><span class="line"><span class="regexp">            &#125;)</span></span><br><span class="line"><span class="regexp">            /</span><span class="regexp">/淡入效果fadeIN()</span></span><br><span class="line"><span class="regexp">            $("button").eq(2).click(function () &#123;</span></span><br><span class="line"><span class="regexp">                $("div").fadeToggle(1000);</span></span><br><span class="line"><span class="regexp">            &#125;)</span></span><br><span class="line"><span class="regexp">            /</span><span class="regexp">/透明度</span></span><br><span class="line"><span class="regexp">            $("button").eq(3).click(function () &#123;</span></span><br><span class="line"><span class="regexp">                $("div").fadeTo(1000, 0.2);/</span><span class="regexp">/速度和透明必须写</span></span><br><span class="line"><span class="regexp">            &#125;)</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">        &#125;)</span></span><br><span class="line"><span class="regexp">    &lt;/</span>script&gt;</span><br><span class="line">&lt;<span class="regexp">/body&gt;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">&lt;/</span>html&gt;</span><br></pre></td></tr></table></figure>





]]></content>
  </entry>
  <entry>
    <title>今日小结3</title>
    <url>/2020/07/31/%E4%BB%8A%E6%97%A5%E5%B0%8F%E7%BB%933/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><h3 id="今天去爬山啦！"><a href="#今天去爬山啦！" class="headerlink" title="今天去爬山啦！"></a><center><font color=yellow>今天去爬山啦！</font></center></h3><p>没怎么学习，内心惭愧并快乐着···· 今天第一次爬了广州白云山，还爬上了摩星岭（别提当时多有赶紧了），可怜现在不听使唤的腿·<del>~</del></p>
<h3 id="1-jQuery中设置或获取元素的固有属性：prop"><a href="#1-jQuery中设置或获取元素的固有属性：prop" class="headerlink" title="1.jQuery中设置或获取元素的固有属性：prop()"></a>1.jQuery中设置或获取元素的固有属性：prop()</h3><p>（1）element.prop(“属性名”)；//获取属性</p>
<p>（2）element.prop(“属性名”,”值”)；//设置属性</p>
<p>注意：prop()不可以获取自定义属性</p>
<h3 id="2-jQuery中设置或获取元素的自定义属性属性：attr"><a href="#2-jQuery中设置或获取元素的自定义属性属性：attr" class="headerlink" title="2.jQuery中设置或获取元素的自定义属性属性：attr()"></a>2.jQuery中设置或获取元素的自定义属性属性：attr()</h3><p>（1）element.attr(“属性名”)；//获取属性  类似元素js的element.getAttribute()</p>
<p>（2）element.attr(“属性名”,”值”)；//设置属性   类似元素js的element.setAttribute()</p>
<h3 id="3-jQuery中的change-方法：用来检查变化事件"><a href="#3-jQuery中的change-方法：用来检查变化事件" class="headerlink" title="3.jQuery中的change() 方法：用来检查变化事件"></a>3.jQuery中的change() 方法：用来检查变化事件</h3><h3 id="4-jQuery中的data-方法：数据缓存data-这个里面的数据是存放在元素的内存里面"><a href="#4-jQuery中的data-方法：数据缓存data-这个里面的数据是存放在元素的内存里面" class="headerlink" title="4..jQuery中的data() 方法：数据缓存data() 这个里面的数据是存放在元素的内存里面"></a>4..jQuery中的data() 方法：数据缓存data() 这个里面的数据是存放在元素的内存里面</h3><p>综合代码 ：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">"en"</span>&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">"UTF-8"</span>&gt;</span><br><span class="line">    &lt;meta name=<span class="string">"viewport"</span> content=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span><br><span class="line">    &lt;title&gt;jQuery属性操作&lt;<span class="regexp">/title&gt;</span></span><br><span class="line"><span class="regexp">    &lt;script src="jquery.min.js"&gt;&lt;/</span>script&gt;</span><br><span class="line">    &lt;span&gt;<span class="number">123</span>&lt;<span class="regexp">/span&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;a href=<span class="string">"https://hgq169168.github.io"</span> title=<span class="string">"hello"</span>&gt;你好&lt;<span class="regexp">/a&gt;</span></span><br><span class="line"><span class="regexp">    &lt;input type="checkbox" name="" , checked&gt;</span></span><br><span class="line"><span class="regexp">    &lt;div index="1" data-index="2"&gt;我是div&lt;/</span>div&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        $(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="comment">//element.prop("属性名") 获取元素固定的属性值</span></span><br><span class="line">            <span class="built_in">console</span>.log($(<span class="string">"a"</span>).prop(<span class="string">"href"</span>));</span><br><span class="line">            <span class="comment">//element.prop("属性名", "值") 设置元素固定的属性值</span></span><br><span class="line">            $(<span class="string">"a"</span>).prop(<span class="string">"title"</span>, <span class="string">"hihi"</span>);</span><br><span class="line">            $(<span class="string">"input"</span>).change(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;<span class="comment">///change() 检测变化</span></span><br><span class="line">                <span class="built_in">console</span>.log($(<span class="keyword">this</span>).prop(<span class="string">"checked"</span>));</span><br><span class="line">            &#125;)</span><br><span class="line">            <span class="comment">//elemt.attr("属性名") 获取元素自定义的属性值</span></span><br><span class="line">            <span class="built_in">console</span>.log($(<span class="string">"div"</span>).attr(<span class="string">"index"</span>));</span><br><span class="line">            <span class="comment">//element.prop("属性名", "值") 设置元素固定的属性值</span></span><br><span class="line">            $(<span class="string">"div"</span>).attr(<span class="string">"data-index"</span>, <span class="string">"66"</span>);</span><br><span class="line">            <span class="built_in">console</span>.log($(<span class="string">"div"</span>).attr(<span class="string">"data-index"</span>));</span><br><span class="line">            <span class="comment">//数据缓存data() 这个里面的数据是存放在元素的内存里面</span></span><br><span class="line">            $(<span class="string">"span"</span>).data(<span class="string">"uname"</span>, <span class="string">"angy"</span>);  <span class="comment">//不会添加到span的行内式里面</span></span><br><span class="line">            <span class="built_in">console</span>.log($(<span class="string">"span"</span>).data(<span class="string">"uname"</span>));</span><br><span class="line">            <span class="comment">//data()方法可以获取data-index h5自定义属性  不用写data- 而且返回的是数字型</span></span><br><span class="line">            <span class="built_in">console</span>.log($(<span class="string">"div"</span>).data(<span class="string">"index"</span>));</span><br><span class="line">        &#125;)</span><br><span class="line">    &lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>body&gt;</span><br><span class="line"></span><br><span class="line">&lt;<span class="regexp">/html&gt;</span></span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
</search>
